Post,Title,Comment,Query,Contents
1,About the Copter 4.3 category,1,This category is for discussion of issues with Copter 4.3,*
2,Enable Wind Estimation,1,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878",I suppose with the BARO1_WCF_ENABLE parameter.
2,Enable Wind Estimation,2,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878","Thank you for the reply! I checked BARO1_WCF_ENABLE is 1, but I still don’t see windspeed and directions in MP Quick. I also checked EK3_DRAG_BCOEF X, Y MCOEF all set with values. I am wondering if there is something else I need to set up to enable the wind estimation?"
2,Enable Wind Estimation,3,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878",I admit I have not tried this feature. There is a video abut it from Mr. Riseborough: *
2,Enable Wind Estimation,4,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878","Thank you for providing the video, I also went through this when reading that webpage. I set up all coefficients mentioned on the page but seems no data change or transmission in both wind direction and wind speed…"
2,Enable Wind Estimation,5,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878",Are you using ArduCopter 4.3.2-rc1 ? You should.
2,Enable Wind Estimation,6,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878",Hi Thank you for responding! Is it possible to enable this in FM version 4.2?
2,Enable Wind Estimation,7,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878",(post deleted by author)
2,Enable Wind Estimation,8,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878","I updated a CUBE Black to the 4.3.2-rc1 version, and also put BARO1_WCF_ENABLE as 1 EK3_DRAG_BCOEF X, Y MCOEF with some values. EK3_ENABLE = 1 EK2_ENAVLE = 0 AHRS_EKF_TYPE = 3 I still don’t see any changes in MP Quick wind direction and wind velocity, I am wondering if this feature only transmits data when the drone is flying?"
2,Enable Wind Estimation,9,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878","Yes, only when flying."
2,Enable Wind Estimation,10,"Hi I am trying to enable the wind estimation feature through Mission Planner, I went through the page *,  in the section "" Viewing Windspeed and Direction in Real-Time"" it says “once enabled”, how to enable this? drone firmware version : Arducoptor V4.3.1 Mission planner : 1.3.79 build 1.3.8378.24878","Solved my issue, thank you very much!"
3,Harmonics Filter causing extreme oscillations,1,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"First set this INS_ACCEL_FILTER,10 you didnt make a mistake, this should be the new default. In the first log with “No Notch” you got an configuration error, the second notch filter is enabled. This is not a big problem, but I would set INS_HNTC2_ENABLE,0 Then in the second log with oscillations you’ve got a different error when you enabled the first notch filter INS_HNTCH_BW,105 this will be filtering out desired movements and all sorts of things, since the FFT-derived frequency is 90Hz. This would have been the cause of the oscillations. I would set this for throttle based notch filter now that you’ve got reasonable values to work with from the live FFT. FFT_ENABLE,0 INS_HNTCH_MODE,1 INS_HNTCH_REF,0.125 INS_HNTCH_FREQ,90 INS_HNTCH_BW,45 INS_HNTCH_FM_RAT,0.7 INS_HNTCH_OPTS,0 FFT was also giving a very wide bandwidth, and I think the reason is there’s quite a weight imbalance. Rear motors are working a lot harder to lift, making a broader spread of frequencies.  So I would better balance the craft then set INS_LOG_BAT_MASK,1 INS_LOG_BAT_OPT,4 (my new favourite value!) and do another test flight to fine tune the HNOTCH values. Let’s see that log"
3,Harmonics Filter causing extreme oscillations,2,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Thank you. I will make adjustments. Your a life saver !! I’ll follow up tomorrow!!
3,Harmonics Filter causing extreme oscillations,3,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Actually maybe just the excessive bandwidth alone might not cause the oscillations, but maybe having that and the seconds notch filter all working in the same space may have caused problems. Normally the first and second notch would be working with different ranges of frequencies."
3,Harmonics Filter causing extreme oscillations,4,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,I’ll turn off the second filter. To see what the response is.
3,Harmonics Filter causing extreme oscillations,5,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Yes, do all the changes I detailed. I was just thinking about the reason for the poor control…"
3,Harmonics Filter causing extreme oscillations,6,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Well do. Thanks again I’ll follow up
3,Harmonics Filter causing extreme oscillations,7,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Good Morning here is the updated log after making changes with your recommendations.
3,Harmonics Filter causing extreme oscillations,8,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Still oscillating but not as much it feels like its getting closer to getting dialed in.
3,Harmonics Filter causing extreme oscillations,9,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"That’s quite good for stabilise mode and all default PIDs. You can adjust these: INS_HNTCH_FREQ,128 INS_HNTCH_BW,64 INS_LOG_BAT_MASK,0 INS_LOG_BAT_OPT,0 Sorting out the balance really helped to bring those motor outputs together and narrow down the range of frequencies to filter. See on the map, your IMU estimated position and the GPS position don’t align yet you’ve got good low vibrations. I suspect this is because of houses and trees.  But you could still set this to give a better GPS 3D Fix - there tends to be less certainty when the GPS units are using all available constellations and they can get overwhelmed. GPS_GNSS_MODE,3 Also I would consider changing these: FENCE_ENABLE,1 You wont be able to arm and fly until there’s a good 3D Fix and Home can be set - seems to take a while but think of your copter and payload disappearing off to Sea of Japan… BATT_FS_CRT_ACT,3 usually set to 1 for Land, it’s unlikely to be able to return home with a critical battery level. Maybe BATT_FS_LOW_ACT would be good to have as 3 Smart RTL Most often a BATT_FS_LOW_ACT has already initiated RTL (or Smart RTL) and the copter is half way home, now reached critical battery level. The only viable option will be to land. Change FS_OPTIONS,16 to 24 so it will “Continue if landing on any failsafe” and not start all over again if already landing. If you have a spring-centered throttle then I set this too: PILOT_THR_BHV,7 After all that, get out in a big open space and run Autotune! Set a switch position to Autotune mode, switch into it once flying and let it complete (twitching stops) and then reposition, land and disarm WITHOUT touching any switches! After a few seconds the new values are saved and you can arm and fly again. Use plenty of Althold and Loiter"
3,Harmonics Filter causing extreme oscillations,10,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Sounds good . Making adjustments now . Thanks
3,Harmonics Filter causing extreme oscillations,11,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Ran another test flight still getting oscillations when I roll or yaw a lot better, but not sure why its continuing. I figured i should resolve before doing a auto tune. Below are logs and a video of the flight. log 1 * Log 2 * Video *"
3,Harmonics Filter causing extreme oscillations,12,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,I think the results in the log look quite good for where you are in the tuning process (pre-PID tune configuration).
3,Harmonics Filter causing extreme oscillations,13,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Ok I’ll go from here thanks my friend. Do you have a Facebook page??
3,Harmonics Filter causing extreme oscillations,14,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,No Anthony I don’t do Facebook.
3,Harmonics Filter causing extreme oscillations,15,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Just do the Autotune as I described
3,Harmonics Filter causing extreme oscillations,16,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Finally did the Autotune and a flight! It has rained 7 days straight here . Here is the log , I did notice oscillations when recovering from a dive in Acro scared to the point I just brought it home."
3,Harmonics Filter causing extreme oscillations,17,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"You can set ATC_THR_MIX_MAN,0.5 otherwise I cant see any bad issues. Here’s updated Compass settings courtesy of the Magfit utility COMPASS_DIA_X,0.800 COMPASS_DIA_Y,1.185 COMPASS_DIA_Z,0.800 COMPASS_MOT_X,-10.000 COMPASS_MOT_Y,1.471 COMPASS_MOT_Z,-3.520 COMPASS_MOTCT,2 COMPASS_ODI_X,-0.200 COMPASS_ODI_Y,0.160 COMPASS_ODI_Z,0.093 COMPASS_OFS_X,-615 COMPASS_OFS_Y,-237 COMPASS_OFS_Z,-49 COMPASS_SCALE,1.00"
3,Harmonics Filter causing extreme oscillations,18,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"The aggressive Pitch and Roll during that maneuver caused a ton of vibe clip events leading to an EKF Lane change and an emergency Yaw reset. I suppose it’s the reason for the oscillation you saw.  Otherwise the tune looks good. Note: There is a message in the log I haven’t seen before. Not sure what to make of it:  This is the reason: we check and restore the ICM20602 Y offset high register on every update. We don’t mark the IMU unhealthy when we do this. This is a workaround for a bug in the ICM-20602 where this register can change in flight. We log these events to help with log analysis, but don’t shout at the GCS to prevent possible flood"
3,Harmonics Filter causing extreme oscillations,19,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,@ Dave so what’s the workaround?
3,Harmonics Filter causing extreme oscillations,20,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Thanks a lot gentleman you don’t know how much this platform to discuss and get help really means I’m in debt to you guys.
3,Harmonics Filter causing extreme oscillations,21,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"* Good question, tamer flying  (just kidding) . So you have the Matek H743 version with the ICM20602 (IMU0) and the MPU6000 (IMU1). There is some precedent to switch to the MPU6000 as the primary IMU for the type of flying you are doing. If you take a look at *  7"" Long Range build blog you will find that he did this and he’s doing a lot of aggressive Acro flying. I have that same FC on a 7"" but I don’t fly as aggressively and the default IMU order has worked for me. Perhaps do some more flying and see if this will be a real problem before considering this action. For a lot of pilots the configuration and tune you have would be great."
3,Harmonics Filter causing extreme oscillations,22,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Awesome . Thanks for the help.
3,Harmonics Filter causing extreme oscillations,23,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Good Morning just finished a test flight with the new GPS inputs and not sure if this related but my position hold is making motors slow down to where I have to switch into stabilize to get them back up. Or I’m wondering if running bidirectional Dshot and Dshot 600 on the new copter 4.3.1 is the issues. Let me know your thoughts?
3,Harmonics Filter causing extreme oscillations,24,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,That just means hover throttle hasn’t been learned yet. * Yours: 
3,Harmonics Filter causing extreme oscillations,25,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Do I need to enable that to work? Maybe a parameter I missed
3,Harmonics Filter causing extreme oscillations,26,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"No. MOT_HOVER_LEARN is enabled by default (2, learn and save). Just Hover  until it’s hovering at Mid throttle. Looks like it will be ~.1 something."
3,Harmonics Filter causing extreme oscillations,27,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Ok thanks. Love learning this Software 
3,Harmonics Filter causing extreme oscillations,28,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,I was hooked when I bought a RTF quad in 2014 that ran Arducopter. Got to say that craft is nicely dialed in. When the Rate Pitch/Roll looks like this you have done a good job. Angle Pitch/Roll is important and the initial indicator but this is more challenging to achieve.
3,Harmonics Filter causing extreme oscillations,29,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Nice!! May be a dumb question but those screen grabs of graph are you using mission planner for that? I’ve been using UAV logger??
3,Harmonics Filter causing extreme oscillations,30,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Yes, Mission Planner. I tend to use it most, MAVExplorer next. Each log analyzer has it’s advantages and quirks. Autoscaling of each field doesn’t work well for this metric. They need to have the same Y-axis scaling to see what’s going on."
3,Harmonics Filter causing extreme oscillations,31,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Got ya. Thanks for the insight. Little windy today look forward to flying this thing sometime this week. lol getting it ready for a Disney shoot
3,Harmonics Filter causing extreme oscillations,32,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,*
3,Harmonics Filter causing extreme oscillations,33,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Wow! What a nice craft. What’s the prop size on this Octo? Should give a shout out to Shawn *  He really gave you some excellent tuning advice for this result.
3,Harmonics Filter causing extreme oscillations,34,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Cinelifter prop size is 10in carrying a gimbal with a Alexa mini on it
3,Harmonics Filter causing extreme oscillations,35,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,* I know I keep thanking you but thanks a lot brother. Since this journey and you guys help now people are asking is Arducopter really good. To me it is safe and thus far reliable. Betaflight is good but for people not carrying expensive hardware. Really do appreciate this
3,Harmonics Filter causing extreme oscillations,36,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Ah, pro stuff. Very cool Anthony. A photo of that would look good on the Ardupilot home page!"
3,Harmonics Filter causing extreme oscillations,37,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,I have the Cinelifter’s little brother from Shen - the TerraPlane. Really nice designs from him. That thing is a real rocket ship even with a full (not “naked”) GoPro mounted forward of a 6S battery. Hovers at 8% throttle!
3,Harmonics Filter causing extreme oscillations,38,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,I’ll be sure to get it over to the site.
3,Harmonics Filter causing extreme oscillations,39,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Yea this is a Swol 12s build and I have a bigger one for a movi pro that I’m in the process of building. We use QGC on our heavy lift Alta X so I figured why not have a FPV built with the same software in mind
3,Harmonics Filter causing extreme oscillations,40,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Nice my hover point is at lower but parameters won’t let me set it weird🤦🏾‍♂️
3,Harmonics Filter causing extreme oscillations,41,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,The Nanny ranges in Mission Planner?  Set the MOT_THST_HOVER value you want and hit Write. Answer yes to the “out of range do you want to continue”. Then hit Write again.
3,Harmonics Filter causing extreme oscillations,42,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Yeah I did it 3x and refreshed and it went back to default 0.2
3,Harmonics Filter causing extreme oscillations,43,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,As I suggested hitting Write Parameters a 2nd time after hitting Yes to the out of range dialog box? Don’t refresh until you Write it the 2nd time or it will fail. You can put whatever you like in there if you follow the correct sequence to Write it. 
3,Harmonics Filter causing extreme oscillations,44,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"I’ve noticed that mine likes 0.125. The logs clearly show 0.08 as an average hover thrust value, but I think hover learn has some limits. I can set 0.08 and save it (acknowledging the warning), but if I enable hover learning, it reverts to a higher value."
3,Harmonics Filter causing extreme oscillations,45,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Yes, I have found that to be true also."
3,Harmonics Filter causing extreme oscillations,46,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Is the hover thrust value skewed by the motor expo? I think that woks out pretty close then.
3,Harmonics Filter causing extreme oscillations,47,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"I don’t think so? It’s always EXACTLY 0.125. If hover learn weren’t bottoming out against some predetermined limit, I’d expect some minor variation (and more digits behind the decimal, as is usually the case). EDIT: Yep - it’s constrained in the code. * has this call to constrain_float(): _throttle_hover.set(constrain_float(_throttle_hover + (dt / (dt + AP_MOTORS_THST_HOVER_TC)) * (get_throttle() - _throttle_hover), AP_MOTORS_THST_HOVER_MIN, AP_MOTORS_THST_HOVER_MAX)); * defines the lower bound as 0.125. #define AP_MOTORS_THST_HOVER_MIN        0.125f  // minimum possible hover throttle"
3,Harmonics Filter causing extreme oscillations,48,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,I’ll redo the sequence
3,Harmonics Filter causing extreme oscillations,49,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Yes I just found all that too and was going to mention it  So apart from being constrained, MOT_THST_HOVER is also rounded, which is why we dont see a lot of decimal places."
3,Harmonics Filter causing extreme oscillations,50,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"Good Afternoon , Change the parameters for the hover throttle and man it still only in AltHLD & PSHLD seems like its about to drop out the sky motors start slowing down immensely. Logs * Video *"
3,Harmonics Filter causing extreme oscillations,51,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"I would try 2 things. Your MOT_SPIN_MIN is at .15, lower it. Give it a flight, don’t bother with PosHold (it should be deprecated), use Loiter*. Then set these and try it again: PSC_ACCZ_I,.25 PSC_ACCZ_P,0.125 The reference for setting these parameters can be found here: * *You will find several Loiter parameters than can be set to your liking, PosHold has 2."
3,Harmonics Filter causing extreme oscillations,52,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Awesome I’ll adjust parameters. Shit freaks me out
3,Harmonics Filter causing extreme oscillations,53,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"You’re doing fine  Try .09 for MIN. _ARM Minimum speed for all motors running cleanly in Motor Test. _MIN >ARM and the minimum thrust to stabilize the craft when it’s dropping in Stabilize at zero throttle  At least that’s what I do. I have a very high thrust/weight craft also (a few actually) and here are some relative parameters. Not to copy of course just as reference for the challenges encountered with rocket craft! MOT_SPIN_ARM,0.02 MOT_SPIN_MAX,0.98 MOT_SPIN_MIN,0.03 MOT_THST_HOVER,0.14 PSC_ACCZ_I,0.28 PSC_ACCZ_P,0.14"
3,Harmonics Filter causing extreme oscillations,54,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,Question is there a way to switch between parameters with a aux switch on RC? This craft or (rocket LOL) is specifically for Film and TV done some test flights with gimbal which cleaned up a good amount of vibrations but I can tell there is significant vibrations that occur in footage.  Ill send video not the best camera its a Nikon test camera we use for gimbal stuff. I know when you tune it says not to do so with a gimbal or camera attached. Thanks Log *
3,Harmonics Filter causing extreme oscillations,55,Anyone can help a newbie out. Building a cinelifter with Arducopter everything flys great when the Harmonic Notch filter is disabled but once I enable it using the FFT instead of esc telemetry to handle noise the quad start to oscillate terribly. I’m flying the Swol 10in x8 configuration. Using the initial parameters. * Log files 1st Harmonic Filter Disabled * Log file with harmonic enabled *,"You can lower the ATC_ACCEL values to suit heavy payloads new ATC_ACCEL_P_MAX = ATC_ACCEL_P_MAX x (min_TOW / max_TOW) new ATC_ACCEL_R_MAX = ATC_ACCEL_R_MAX x (min_TOW / max_TOW) new ATC_ACCEL_Y_MAX = ATC_ACCEL_Y_MAX x (min_TOW / max_TOW) or you can just lower them a bit anyway, to take some of the aerobatic like behaviour out of the copter. Single digits and decimal places are not important, you can safely round these to the nearest thousand. You can also smooth out the RC input a bit. This used to be called RC Feel, and it still is in the tuning section. Set ATC_INPUT_TC from 0.2 to 0.3 for a softer feel. You can put it on a channel 6 tuning knob too, assign a pot to channel 6 on your radio and set: TUNE,45 TUNE_MAX,0.15 TUNE_MIN,0.3 Make sure nothing else is using channel 6 of course."
4,Feedback and assistance with new takeoff behaviour,1,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","It should be apparent in the logs I sent you for the internal error issue. The craft made the little jump there to. I can provide a log and video when I test your new version with the new controllers, if it still behaves like that on the new version."
4,Feedback and assistance with new takeoff behaviour,2,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Hi * Your last log took off in Stabilize. I assume that is fine? I went back and found an earlier log that you were in Alt_Hold and I think I see the problem:  * You have a hover throttle of about 14% and you have TKOFF_SLEW_TIME set to the default of 2 seconds. TKOFF_SLEW_TIME  is the time to reach 100% throttle. Because you take off at such a low throttle setting the throttle is reaching 21%, maybe even a little higher, before takeoff is detected and confirmed. I think this is popping you off the ground a little more aggressively than you want. I would suggest trying TKOFF_SLEW_TIME 5 or 10 seconds. That should have you off the ground in about 1 second."
4,Feedback and assistance with new takeoff behaviour,3,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Ah yes, I forgot about the stabelize part. Maybe it’s because of the low throttle. It didn’t happen on 4.2.3 but I wouldent say it’s an issue really. As long as it’s predictable it might be good to come off tje ground quickly"
4,Feedback and assistance with new takeoff behaviour,4,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",I would be interested to see how you feel about the TKOFF_SLEW_TIME. I put it in there because I wanted to be able to tune the takeoff behaviour just the way I like it. I would try 5 and 10 like I suggested and see what suits you best.
4,Feedback and assistance with new takeoff behaviour,5,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","I can do some tests when I get in the air again, and post a video of each one along with the log file, so that you can see for yourself"
4,Feedback and assistance with new takeoff behaviour,6,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","I’ve rolled back to an earlier firmware (due to the pre-arm check issues already being looked in to), but I can load up 4.3 again and get some logs; I had tried TKOFF_SLEW_TIME up to 5 seconds and it was still pretty jumpy, but like Axel, I hover at pretty low throttle settings (~20%, if I recall correctly), so that may be the unifying factor here."
4,Feedback and assistance with new takeoff behaviour,7,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Yeh, with very low hover throttle it will take off very quickly. I have tested between 0.1 seconds (basicly just punches to full throttle imediatly) to 30 seconds (it is a very slow and gentile wind up before takeoff)."
4,Feedback and assistance with new takeoff behaviour,8,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Before the slew time parameter was added, what value did the firmware use?"
4,Feedback and assistance with new takeoff behaviour,9,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",So it didn’t exist at all prior to 4.3. I could look at a log and tell you about what it would need to be to get similar performance. I would just play with that value between 1 and 30 and see what you like.
4,Feedback and assistance with new takeoff behaviour,10,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Thanks! I don’t need to get the same tskeoff behaviour, just interesting how it works! The new jump is probably good if there is some wind to get of the ground faster"
4,Feedback and assistance with new takeoff behaviour,11,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Yes, that was a big risk for large aircraft with heavy loads, they could take a very long time to get off the ground. If you happened to have a small movement in your gps as you were taking off the aircraft could start to tip over. For normal operations I use a slower TKOFF_SLEW_TIME to ensure I don’t scare people but if I am on a moving platform or operating in strong winds I tend to reduce it (I like it a little faster myself)."
4,Feedback and assistance with new takeoff behaviour,12,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",It was quite scary the first time it did it I can test some values and post a log file and video if it would be usefull
4,Feedback and assistance with new takeoff behaviour,13,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Given the tune-ability of this, I can see utility in a script that, at the flick of a switch:  Creates a mission Inserts a takeoff command and hover waypoint above home (present position, really) at a user-selectable altitude Selects auto Arms Awaits hover altitude (mission complete) Selects loiter (or a user defined end-state mode)  I have a new Copter as of today that would be good for testing this (docile EDU-450). Unfortunately, if I don’t do it tomorrow, I probably won’t get to it for at least a week. EDIT: Am I misunderstanding that this is not just an AUTO mode feature but could be enabled for any arm-able mode?? I reread the posts, and perhaps I misunderstood from the start…"
4,Feedback and assistance with new takeoff behaviour,14,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",*
4,Feedback and assistance with new takeoff behaviour,15,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Got it. The script wouldn’t be quite as useful as I thought, then, but it still might be worth exploring as an option for those hesitant to takeoff using their thumb on the throttle stick (of course, a good tune is still a requisite…)."
4,Feedback and assistance with new takeoff behaviour,16,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",If you set PILOT_TKOFF_ALT to your desired takeoff altitude you will get the equivalent of what you describe if you take-off  in Loiter. You would have to arm and as soon as you lift the throttle above 50% you would take-off to PILOT_TKOFF_ALT. It improves safety a lot as it ensures a very consistent departure from ground contact.
4,Feedback and assistance with new takeoff behaviour,17,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","I will endeavor to test that case tomorrow, then, rather than putting effort into a script. My thought for a script was actually quite similar to this behavior, and it’s good to know that it’s already there!"
4,Feedback and assistance with new takeoff behaviour,18,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","With PILOT_TKOFF_ALT at 3-4 meters, TKOFF_SLEW_TIME=2 (default), and a hover thrust of approximately 25%, my EDU-450 is behaving very nicely. LOITER mode takeoffs are smooth and consistent. Nice feature!"
4,Feedback and assistance with new takeoff behaviour,19,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","I’d need to test it but perhaps the takeoff ‘jump’ was caused by the PILOT_TKOFF_ALT default to 0? Also, the TKOFF_SLEW_TIME is/was set to 2(default) with the range defined slightly different to the suggested values that make more sense perhaps for a larger copter. When I’m next out I’ll adjust the params as * has suggested and see what things look like. Either way, for me it was not really a problem - just a change in how the copter took off."
4,Feedback and assistance with new takeoff behaviour,20,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3. So it didn’t exist at all prior to 4.3. I could look at a log and tell you about what it would need to be to get similar performance. I would just play with that value between 1 and 30 and see what you like."
4,Feedback and assistance with new takeoff behaviour,21,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro.
4,Feedback and assistance with new takeoff behaviour,22,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",That shouldn’t cause the jump. It is more likely that TKOFF_SLEW_TIME is set too low. Can you share the log you posted the picture from?
4,Feedback and assistance with new takeoff behaviour,23,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","Hi *, Today I updated the firmware on that same copter to V4.3.1 and recorded some short flightlogs. I think the copter takes off fine and there is no problem. Adjusting the TKOFF_SLEW_TIME from the default 2 to 4 ‘slows’ the take-off procedure so that works fine. I could take it further in slowing it down but on windy days that could only cause trouble. Anyway, I hope these two logs help. TKOFF_SLEW_TIME = 2 * TKOFF_SLEW_TIME = 4 *"
4,Feedback and assistance with new takeoff behaviour,24,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","On the contrary, with a less twitchy throttle, reducing from 2 to 1.5 seconds’ slew time made for a crisper takeoff that I prefer. I think the tuneability is a nice touch."
4,Feedback and assistance with new takeoff behaviour,25,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",Both logs look fine and seem to be working as I would expect. You are also running terrain following and that adds some complexity to the post takeoff behaviour that confused me for a minute. I don’t understand where this question came from as you seem to be happy with this now.
4,Feedback and assistance with new takeoff behaviour,26,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","My apologies - I didn’t mean to imply there was something wrong. I think it is just that I didn’t know there was a change in the code and noticed a change in take-off behaviour when moving from FW V4.2.3 to V4.3.0. The take-off resembled a quick ‘jump/hop’ but everything was fine so didn’t think much of it until someone else on the forum was asking about this I confirmed I was seeing the same thing. The other question was only triggered as I didn’t know it was there until I was reading this thread and wondered if I needed to set it to a value. (as you stated - it isn’t required unless you want a specific altitude). Anyway, I think it works nicely and the extra controls allow for configuring the take-off to the copter and user’s preference. So, nice work!"
4,Feedback and assistance with new takeoff behaviour,27,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.",Could I ask anybody interested in this thread to provide suggestions or advice on what we should put in the wiki (and perhaps where) regarding the setting of TKOFF_SLEW_TIME. Or is the parameter description enough?
4,Feedback and assistance with new takeoff behaviour,28,"I have opened this thread to discuss the new takeoff options and behaviour. Please post here if you have questions or are experiencing issues. This is operational for any Altitude Controlled mode. So it does not change Stabilize or Acro. Before the new takeoff throttle code was added with the TKOFF_SLEW_TIME parameter, the throttle response was determined by a combination of:  Altitude Hold tune (PSC_POSZ_P, PSC_VELZ_P, PSC_ACCZ_P, PSC_ACCZ_I) Vertical Speed (PILOT_SPEED_UP or WPNAV_SPEED_UP) And in earlier versions (Pre 4.0 I think) PILOT_TKOFF_ALT  So the takeoff behaviour was practically impossible to tune without compromising in flight performance. The new code uses a throttle ramp rate based on the time taken to move from 0% to 100% throttle defined by TKOFF_SLEW_TIME. While ramping the throttle the aircraft looks for vertical movement that would indicate that the aircraft has taken off (or it reaches 100%). After this it uses the normal in flight behaviour. If the aircraft thinks it has taken off but hasn’t you get the same performance as you would have before 4.3.","I took a look at the wiki and it’s categories. It’s not a first time setup parameter, but it is a tuning parameter or an advanced configuration parameter maybe. i couldn’t find any good category in advanced config which could include this one, except tuning. Although, when looking through the sub categories if tuning, I can’t really find a place to put it. Maybe a category for fine tuning could be added. And to that you could add all small parameters that you can use to make small adjustments to the flight behavior. It feels like a parameter you could put with the loiter parameters, but since it’s also applicable in Alt.hold maybe that will be confusing. I think a fine tuning category would be a great place to for such parameters. But that’s just me. Also, under the First time setup > configuration > configure motor range. It is a “(optional)” behind configure motor range, I don’t think it should be optional. It’s really important to set the min throttle high enough and make sure that all motors spin when armed. I think you should remove the optional if you guys agree with me that is"
5,Spraying drone (help),1,"Greetings to all. I’m new here. I’m assembling my mini agricultural drone. The fact is that I want my drone to:  was autonomous he himself would start spraying fertilizers, and if they ran out, then he himself would return home. also if you refill the fertilizer again, then the mission would continue from the very place where it stopped and if the battery runs out, then replacing it would continue the mission. I am not strong in this, and I do not understand English well, since I come from Lithuania. But if someone understands this and collected similar devices, I will be very grateful for useful information.  I use: pixhawk 4 radiolink controller flysky i6s control equipment water sensor, this is YF-401 water flow sensor. Water pump 12v. pwm relay will also come to me soon","Man, this is such a complex project… But, for point 1, this is your bible: *, read it carefuly, specialy the instructions on first time setup. Concentrate on building a simple drone first, make a good job on tuning and then you can proceed with the rest of the items, they are simply payloads and you can perform an incremental project on it. Just a few comments about your components: * Maybe this component will be easily clogged… * These kind of water pumps are heavy and you will have some extra working on controlling it via Flight Controller, try to look for BLDC pumps which have ESCs, they can be more easily integrated and are more suited to the application."
5,Spraying drone (help),2,"Greetings to all. I’m new here. I’m assembling my mini agricultural drone. The fact is that I want my drone to:  was autonomous he himself would start spraying fertilizers, and if they ran out, then he himself would return home. also if you refill the fertilizer again, then the mission would continue from the very place where it stopped and if the battery runs out, then replacing it would continue the mission. I am not strong in this, and I do not understand English well, since I come from Lithuania. But if someone understands this and collected similar devices, I will be very grateful for useful information.  I use: pixhawk 4 radiolink controller flysky i6s control equipment water sensor, this is YF-401 water flow sensor. Water pump 12v. pwm relay will also come to me soon","As * said, this is a very complex project. First, you’re gonna need to build a very well tuned copter to be able to fly autonomously with a payload. You’ll have to implement this custom logic. The YF-401 can help you here: when it stops counting pulses, it means that the copter run out of product, then change mode to RTL. A Lua script is the easiest way to do that, if your flight controller is able to run it. You can look the MIS_RESTART parameter: * You’re also gonna need to create the flight path to cover a field and spray it. Mission planner can help you with this task. The YF-401 can do the job for products with the similar density and viscosity as water. But it will be a huge pain for different products."
5,Spraying drone (help),3,"Greetings to all. I’m new here. I’m assembling my mini agricultural drone. The fact is that I want my drone to:  was autonomous he himself would start spraying fertilizers, and if they ran out, then he himself would return home. also if you refill the fertilizer again, then the mission would continue from the very place where it stopped and if the battery runs out, then replacing it would continue the mission. I am not strong in this, and I do not understand English well, since I come from Lithuania. But if someone understands this and collected similar devices, I will be very grateful for useful information.  I use: pixhawk 4 radiolink controller flysky i6s control equipment water sensor, this is YF-401 water flow sensor. Water pump 12v. pwm relay will also come to me soon","You write “Pixhawk 4 Radiolink”. It is either a Pixhawk 2.4.8 from Radiolink, or a Pixhawk 4 from Holybro. I guess, you have a Pixhawk 2.4.8. The LUA scripting capabilities of this flightcontroller might be limited."
5,Spraying drone (help),4,"Greetings to all. I’m new here. I’m assembling my mini agricultural drone. The fact is that I want my drone to:  was autonomous he himself would start spraying fertilizers, and if they ran out, then he himself would return home. also if you refill the fertilizer again, then the mission would continue from the very place where it stopped and if the battery runs out, then replacing it would continue the mission. I am not strong in this, and I do not understand English well, since I come from Lithuania. But if someone understands this and collected similar devices, I will be very grateful for useful information.  I use: pixhawk 4 radiolink controller flysky i6s control equipment water sensor, this is YF-401 water flow sensor. Water pump 12v. pwm relay will also come to me soon","Thanks guys for taking the time to reply. I am attaching a photo of my drone for this task. I also understand that this is a difficult project, but still I want to get as close to the goal as possible. Also, according to my calculations, the drone will lift about 10 kg as much as possible, but this weight will never be here. Maximum about 6 kg. Motors br4114 400kv. "
5,Spraying drone (help),5,"Greetings to all. I’m new here. I’m assembling my mini agricultural drone. The fact is that I want my drone to:  was autonomous he himself would start spraying fertilizers, and if they ran out, then he himself would return home. also if you refill the fertilizer again, then the mission would continue from the very place where it stopped and if the battery runs out, then replacing it would continue the mission. I am not strong in this, and I do not understand English well, since I come from Lithuania. But if someone understands this and collected similar devices, I will be very grateful for useful information.  I use: pixhawk 4 radiolink controller flysky i6s control equipment water sensor, this is YF-401 water flow sensor. Water pump 12v. pwm relay will also come to me soon","That is a Pixhawk 1, and I think vibrations will be a major problem since the motor/ESC and RC wires are cable tied in a bunch very close to the flight controller, and the flight controller itself seems to be cable tied to the base plate. The flight controller will need some sort of antivibration mounting. Probably fit washers or something under those bolts that secure the arm-folding mechanism, to ensure they tighten down properly on those slotted sections and dont slip. Can the ESCs mount inboard and the motor wires run along inside the arms? The base plates seem distorted by the bolts, I would doubt it will be strong enough to last carrying your payload for any length of time, or very many flights. Have you got a .bin log of it flying?"
6,"Landing issues (fast descent, won't slowdown on terrain approach)",1,"Hello, my drone is starting to get to the point where i want, it flies amazing in auto mode, except for one thing: the landing is always too fast, no matter how slow i’ll set the maximum descent rate speed. Here is the log of my last flight, it looks like when the landing starts, the DAlt for some reason won’t change, i still had enough battery to fly more so i don’t think it’s an underpower issue, but you’ll tell me. * As always thank you so much for your time helping me, it’s very appreciated.","LAND_ALT_LOW,3000 is 30 meters You usually want this something like 5 or 10 meters LAND_SPEED_HIGH,50 could probably be 100 or more The default values for WPNAV_SPEED_DN,150 WPNAV_SPEED_UP,250 are usually OK unless your copter is particularly sensitive It looks like the non-landing issue might be terrain. I’d say the mission is created using altitude above terrain, and the terrain data is wrong?? You can see by the Baro that the copter descends slowly until a confirmed landing. Instead of doing a mission, just fly in AltHold and Loiter, then use RTL and Land modes to test the copter performance. If you really want to test descent rate use Stabilise mode, check logs and set LAND_SPEED_HIGH to the fastest stable descent rate, and LAND_SPEED to about half of that or less. Although attitude control is quite good, there is a few other things I can point out: ATC_THR_MIX_MAN,0.5 EK2_ENABLE,0 INS_ACCEL_FILTER,10 INS_LOG_BAT_MASK,1 and set up the Harmonic Notch Filter - it’s easy and worth it. There’s a few other things in the log that can be improved too, apart from these ESSENTIAL things: RULE 1 Set FENCE_ENABLE,1 and use the Initial Parameters in MissionPlanner to set correct battery failsafe levels and BATT_FS_CRT_ACT,1 BATT_FS_LOW_ACT,2 RULE 2 see rule 1 Then I would look at running Autotune and doing some more test flights with RC control before worrying about missions."
6,"Landing issues (fast descent, won't slowdown on terrain approach)",2,"Hello, my drone is starting to get to the point where i want, it flies amazing in auto mode, except for one thing: the landing is always too fast, no matter how slow i’ll set the maximum descent rate speed. Here is the log of my last flight, it looks like when the landing starts, the DAlt for some reason won’t change, i still had enough battery to fly more so i don’t think it’s an underpower issue, but you’ll tell me. * As always thank you so much for your time helping me, it’s very appreciated.","Also, I have noticed a downfacing rangefinder that is throwing up weird data, try to disable this rangefinder to see it this weird data is not messing up with land speed calculations."
6,"Landing issues (fast descent, won't slowdown on terrain approach)",3,"Hello, my drone is starting to get to the point where i want, it flies amazing in auto mode, except for one thing: the landing is always too fast, no matter how slow i’ll set the maximum descent rate speed. Here is the log of my last flight, it looks like when the landing starts, the DAlt for some reason won’t change, i still had enough battery to fly more so i don’t think it’s an underpower issue, but you’ll tell me. * As always thank you so much for your time helping me, it’s very appreciated.","hi Shawn, thanks for your suggestions. I don’t think the mission was created using altitude above terrain, because as a matter of fact, it follows altitude correctly for the entire duration of the mission (also other missions where i tried higher altitude changes, it always followed perfectly). What i noticed is that when starting the land command, the altitude reading on the OSD (i have a fpv camera on the drone) doesn’t change, so let’s say the drone is 30 meters high, it’ll start descending but the altitude will stay at 30 meters until it touches down, for this reason it’s not slowing down to land_speed_low. All the settings related to landing were like this because i wanted to troubleshoot this problem but without success so far. Today i’ll try using land flight mode and record a DVR to show you better this problem. I don’t know about the Baro reading in the logs, but it did an hard landing and definitely didn’t slow down when approaching terrain as it’s supposed to do."
6,"Landing issues (fast descent, won't slowdown on terrain approach)",4,"Hello, my drone is starting to get to the point where i want, it flies amazing in auto mode, except for one thing: the landing is always too fast, no matter how slow i’ll set the maximum descent rate speed. Here is the log of my last flight, it looks like when the landing starts, the DAlt for some reason won’t change, i still had enough battery to fly more so i don’t think it’s an underpower issue, but you’ll tell me. * As always thank you so much for your time helping me, it’s very appreciated.","The rangefinder is the matek one, with a range up to 2 meters and was set up accordingly to this limit, but i’ll try disabling it and see if it gets better, thank you."
6,"Landing issues (fast descent, won't slowdown on terrain approach)",5,"Hello, my drone is starting to get to the point where i want, it flies amazing in auto mode, except for one thing: the landing is always too fast, no matter how slow i’ll set the maximum descent rate speed. Here is the log of my last flight, it looks like when the landing starts, the DAlt for some reason won’t change, i still had enough battery to fly more so i don’t think it’s an underpower issue, but you’ll tell me. * As always thank you so much for your time helping me, it’s very appreciated.","Another thing i’d like to point out: i was better analyzing the logs and if you look closely to the baro reading in the pic you posted, you see that it takes around 15 seconds to go from 30 meters to 0 (2m/s), so it’s way above the speed that i set in the parameters, and also it doesn’t really confirm the landing, it just gives the flag because i disarmed in the exact moment when the drone touched ground to avoid the props touching the ground while spinning since it was in a muddy terrain, but as a matter of fact it was an hard landing, definitely not smooth. If you see in CTUN, the values of DAlt and Alt stay at 30 meters, only BAlt will go down to zero, why does it happens?"
6,"Landing issues (fast descent, won't slowdown on terrain approach)",6,"Hello, my drone is starting to get to the point where i want, it flies amazing in auto mode, except for one thing: the landing is always too fast, no matter how slow i’ll set the maximum descent rate speed. Here is the log of my last flight, it looks like when the landing starts, the DAlt for some reason won’t change, i still had enough battery to fly more so i don’t think it’s an underpower issue, but you’ll tell me. * As always thank you so much for your time helping me, it’s very appreciated.","Hi *, It looks like * parameter has been changed from the default (-1) to 50m but the rangefinder doesn’t appear to be working.  Coincidentally there is an EKF fix in Copter-4.3.1 to stop the EKF from consuming bad rangefinder values but this would not have helped because RNGFND1_MIN_CM has been set to “1” meaning almost all invalid readings it produces are being consumed as good values.  This param should be restored to the default of 20 I think. Can you set these two parameters and try again?  RNGFND1_TYPE = 0 (disables the rangefinder) EK3_RNG_USE_HGT = -1 (disables use of rangefinder for the altitude estimation)  By the way, could you tell me what led you to set the EK3_RNG_USE_HGT parameter?  Was it something written on the wiki?  Advice from another user?  … perhaps you were just browsing the parameter list and found this parameter? I don’t meant to be pushy or “blame the user”, the reason I ask is just that setting this parameter is almost never a good idea.  I have struggled for years to adjust the parameter descriptions and wiki to guide users away from setting it but still it is occasionally set and almost invariably causes problems. The normal reason it is set is users incorrectly assuming that * or * requires the EKF configuration be changed. Here’s the * parameter description  Range finder can be used as the primary height source when below this percentage of its maximum range (see RNGFNDx_MAX_CM) and the primary height source is Baro or GPS (see EK3_SRCx_POSZ).  This feature should not be used for terrain following as it is designed for vertical takeoff and landing with climb above the range finder use height before commencing the mission, and with horizontal position changes below that height being limited to a flat region around the takeoff and landing point. "
6,"Landing issues (fast descent, won't slowdown on terrain approach)",7,"Hello, my drone is starting to get to the point where i want, it flies amazing in auto mode, except for one thing: the landing is always too fast, no matter how slow i’ll set the maximum descent rate speed. Here is the log of my last flight, it looks like when the landing starts, the DAlt for some reason won’t change, i still had enough battery to fly more so i don’t think it’s an underpower issue, but you’ll tell me. * As always thank you so much for your time helping me, it’s very appreciated.","Hi *, thanks a lot for your detailed response. I’ll try to explain the reason of my settings, i discovered the EK3_RNG_USE_HGT parameter on my own while setting the Matek Lidar/Optical Flow sensor, i thought it was a percentile value, not meters, that’s why i put 50 as a value (that would correspond to 1 meter according to this sensor range). In fact this Matek sensor has a very limited range, up to 2 meters only, so it’s impossible to use it for terrain following and i’m not interested in this, i wanted to use it for a precise takeoff/landing, avoiding the drone drifting around or descending too fast, so i thought that setting it as the primary height source below 1 meter through that parameter would make sense, since i don’t think the baro could be accurate on such a short distance from terrain, does it makes sense to you as well? Also, about the RNGFND1_MIN_CM being set to 1 it’s my mistake, but the specs of this sensor say that it should be able to read correctly down to 8 cm, so i’ll change it to this value. Anyway, i’ll try Land mode tomorrow with the rangefinder deactivated as you suggested and see if this will fix the problem"
6,"Landing issues (fast descent, won't slowdown on terrain approach)",8,"Hello, my drone is starting to get to the point where i want, it flies amazing in auto mode, except for one thing: the landing is always too fast, no matter how slow i’ll set the maximum descent rate speed. Here is the log of my last flight, it looks like when the landing starts, the DAlt for some reason won’t change, i still had enough battery to fly more so i don’t think it’s an underpower issue, but you’ll tell me. * As always thank you so much for your time helping me, it’s very appreciated.","Ah, sorry, you’re right that the EK3_RNG_USE_HGT parameter is a percentage not a distance.  In any case though the rangefinder is reporting a distance of between 2cm and 7cm though, well below 50% of the 200cm range so the EKF is attempting to use it. These very short rangefinders are really not useful I’m afraid. By the way, AP’s landing controller lands the vehicle at a constant 0.5m/s descent rate.  It actually doesn’t matter too much what the absolute altitude above the terrain is as long as it isn’t descending too quickly.  The only way that a rangefinder may be used during landing is to trigger the vehicle to switch to the slower descent rate (e.g. LAND_SPEED) if the rangefinder reports a distance below LAND_ALT_LOW. By the way, I agree with * that LAND_ALT_LOW is set too high at 3000cm (30m).  There’s nothing particularly wrong with this but with LAND_SPEED = 30 (0.3m/s) it could take 100sec for the vehicle to land which is unnecessarily slow I think."
7,"""type"" parameter (the first parameter) in MavLink DO_CHANGE_SPEED command",1,"Making a simple photo survey mission with the Mission Planner Auto WP tool, (the first I’ve made in quite a while) I noticed that the DO_CHANGE_SPEED command (MavLink 178) has a new parameter - “type.” * This parameter sets the type of speed - and the default value, “0” is airspeed.  Obviously - a questionable choice for a quad-copter. * I’ve got a couple of questions:   What does the copter firmware do when it sees a value of “1” for this parameter?   There was a bug with the DO_CHANGE_SPEED command that required a work-around - it had to be placed after a waypoint to take effect.  Has this been fixed?   TAKEOFF command (MavLink 22) also has a similar first parameter - “pitch.”  The Mission Planner Auto WP for survey maps puts a value of “20” in this first parameter - and it appears to be ignored.  The description of the MavLink commands suggests that this command (or how it’s processed) is ignored if no airspeed sensor is present.  I’m not sure how the copter firmware handles it - but it appears to ignore it.  If so - it’s possible that copter ignores “type” for DO_CHANGE_SPEED as well.   If someone knows off hand - it would be nice to have more information about this.  I know it’s a chore to peak at the code to find out, but if that’s necessary, I’d really appreciate the effort. Thank you!",I just run the scenarios in the Simulator and figure out what it does if I don’t know.  It uses Groundspeed from GPS I suppose as there is no other speed sensor. 0 and 1 in the Type field produce the same result. I have never used a DO_CHANGE_SPEED command before any waypoints but one placed after the Takeoff command and before the 1st Waypoint did not change speed from the default set by WPNAV_SPEED. If you Plan a Mission from Copter then there is no Pitch Angle field. Only when planning from Plane will that be available. 
7,"""type"" parameter (the first parameter) in MavLink DO_CHANGE_SPEED command",2,"Making a simple photo survey mission with the Mission Planner Auto WP tool, (the first I’ve made in quite a while) I noticed that the DO_CHANGE_SPEED command (MavLink 178) has a new parameter - “type.” * This parameter sets the type of speed - and the default value, “0” is airspeed.  Obviously - a questionable choice for a quad-copter. * I’ve got a couple of questions:   What does the copter firmware do when it sees a value of “1” for this parameter?   There was a bug with the DO_CHANGE_SPEED command that required a work-around - it had to be placed after a waypoint to take effect.  Has this been fixed?   TAKEOFF command (MavLink 22) also has a similar first parameter - “pitch.”  The Mission Planner Auto WP for survey maps puts a value of “20” in this first parameter - and it appears to be ignored.  The description of the MavLink commands suggests that this command (or how it’s processed) is ignored if no airspeed sensor is present.  I’m not sure how the copter firmware handles it - but it appears to ignore it.  If so - it’s possible that copter ignores “type” for DO_CHANGE_SPEED as well.   If someone knows off hand - it would be nice to have more information about this.  I know it’s a chore to peak at the code to find out, but if that’s necessary, I’d really appreciate the effort. Thank you!","Thanks for taking a look at this. I didn’t see a fix in the release notes, but there was a problem a release or two ago with do_speed_change.  The work around was to put it after a waypoint.  I’ve reached out about this - just to find out.  But if I need to stay with the work around, it’s not too much of a problem. Thanks Dave."
7,"""type"" parameter (the first parameter) in MavLink DO_CHANGE_SPEED command",3,"Making a simple photo survey mission with the Mission Planner Auto WP tool, (the first I’ve made in quite a while) I noticed that the DO_CHANGE_SPEED command (MavLink 178) has a new parameter - “type.” * This parameter sets the type of speed - and the default value, “0” is airspeed.  Obviously - a questionable choice for a quad-copter. * I’ve got a couple of questions:   What does the copter firmware do when it sees a value of “1” for this parameter?   There was a bug with the DO_CHANGE_SPEED command that required a work-around - it had to be placed after a waypoint to take effect.  Has this been fixed?   TAKEOFF command (MavLink 22) also has a similar first parameter - “pitch.”  The Mission Planner Auto WP for survey maps puts a value of “20” in this first parameter - and it appears to be ignored.  The description of the MavLink commands suggests that this command (or how it’s processed) is ignored if no airspeed sensor is present.  I’m not sure how the copter firmware handles it - but it appears to ignore it.  If so - it’s possible that copter ignores “type” for DO_CHANGE_SPEED as well.   If someone knows off hand - it would be nice to have more information about this.  I know it’s a chore to peak at the code to find out, but if that’s necessary, I’d really appreciate the effort. Thank you!","Yea, I tried that and it didn’t work. I always place a Waypoint for a speed change. For the initial mission speed I typically use WP Speed on a Tune pot. You can adjust the speed that way for the entire Mission if you are within RC Range."
7,"""type"" parameter (the first parameter) in MavLink DO_CHANGE_SPEED command",4,"Making a simple photo survey mission with the Mission Planner Auto WP tool, (the first I’ve made in quite a while) I noticed that the DO_CHANGE_SPEED command (MavLink 178) has a new parameter - “type.” * This parameter sets the type of speed - and the default value, “0” is airspeed.  Obviously - a questionable choice for a quad-copter. * I’ve got a couple of questions:   What does the copter firmware do when it sees a value of “1” for this parameter?   There was a bug with the DO_CHANGE_SPEED command that required a work-around - it had to be placed after a waypoint to take effect.  Has this been fixed?   TAKEOFF command (MavLink 22) also has a similar first parameter - “pitch.”  The Mission Planner Auto WP for survey maps puts a value of “20” in this first parameter - and it appears to be ignored.  The description of the MavLink commands suggests that this command (or how it’s processed) is ignored if no airspeed sensor is present.  I’m not sure how the copter firmware handles it - but it appears to ignore it.  If so - it’s possible that copter ignores “type” for DO_CHANGE_SPEED as well.   If someone knows off hand - it would be nice to have more information about this.  I know it’s a chore to peak at the code to find out, but if that’s necessary, I’d really appreciate the effort. Thank you!","Nice trick man! But about topic 2 above, it should change the speed if you place the command after a wp… it’s weird it didn’t work with you."
7,"""type"" parameter (the first parameter) in MavLink DO_CHANGE_SPEED command",5,"Making a simple photo survey mission with the Mission Planner Auto WP tool, (the first I’ve made in quite a while) I noticed that the DO_CHANGE_SPEED command (MavLink 178) has a new parameter - “type.” * This parameter sets the type of speed - and the default value, “0” is airspeed.  Obviously - a questionable choice for a quad-copter. * I’ve got a couple of questions:   What does the copter firmware do when it sees a value of “1” for this parameter?   There was a bug with the DO_CHANGE_SPEED command that required a work-around - it had to be placed after a waypoint to take effect.  Has this been fixed?   TAKEOFF command (MavLink 22) also has a similar first parameter - “pitch.”  The Mission Planner Auto WP for survey maps puts a value of “20” in this first parameter - and it appears to be ignored.  The description of the MavLink commands suggests that this command (or how it’s processed) is ignored if no airspeed sensor is present.  I’m not sure how the copter firmware handles it - but it appears to ignore it.  If so - it’s possible that copter ignores “type” for DO_CHANGE_SPEED as well.   If someone knows off hand - it would be nice to have more information about this.  I know it’s a chore to peak at the code to find out, but if that’s necessary, I’d really appreciate the effort. Thank you!",Hi Bruno-That did work. It didn’t work when placed after Takeoff and before the 1st WP. Not sure of the usefulness in doing this anyway but tested it.
8,EK3_GPS_VACC_MAX behavior questions,0,"Hello, I tryed on last Copter 4.3.2 to use this feature. The UAV is setup with CUAV X7 and F9P. Before takeoff Gps status is RTK, vacc goes down and it’s steady at 0.012. I set VACC MAX to 0.025 I make the flight, and I don’t see rock solid altitude holding as expected. Instead I observed the same behavior as if using the barometer with this parameter set to 0.0. I remake flight always in RTK FIX status, by setting  EK3_SRC1_POSZ to 3 “GPS” and I observed rock solid altitude holding… So, How to have the same behavior as seting EK3_SRC1_POSZ by using the EK3_GPS_VACC_MAX ? Kind regards.",
9,GPS Compass glitch EKF Lane Switch fly away help,1,"I have a hexacopter with a holybro 6C, T-motor MN5008 antigravity motors, Hobbywing Rotorx pro 40A ESCs, Holybro F9P RTK GPS with a tarot frame. The issue is that when we increase the altitude, first an gps/compass glitch comes , EKF lane switch happens and vibration compensation also turns on making drone fly away while gaining sudden altitude jumps. The issue is that this only happens in hill areas with medium winds and we tried to diagnose through log analysis, changing GPS hardware, adding EMF shielding but with no success. I have attached the logfile below and if anyone can shed a light on how to solve this, I would be much grateful. *",The copter is suffering from a lot(!) of vibration. This you will need to fix first before you can expect the copter to fly properly. In the image below you can see peaks of about 130 for IMU[0] and IMU[1]…they should at the very least be less than 30… If you fix the vibration problems you will probably find the rest of the problems will disappear.
9,GPS Compass glitch EKF Lane Switch fly away help,2,"I have a hexacopter with a holybro 6C, T-motor MN5008 antigravity motors, Hobbywing Rotorx pro 40A ESCs, Holybro F9P RTK GPS with a tarot frame. The issue is that when we increase the altitude, first an gps/compass glitch comes , EKF lane switch happens and vibration compensation also turns on making drone fly away while gaining sudden altitude jumps. The issue is that this only happens in hill areas with medium winds and we tried to diagnose through log analysis, changing GPS hardware, adding EMF shielding but with no success. I have attached the logfile below and if anyone can shed a light on how to solve this, I would be much grateful. *","I agree, the vibrations need to be fixed.  But there’s also a major twist in the airframe.  The CW motors, 1,3,6 are working significantly harder than the CCW motors.  Make sure all the motors are level and parallel. Then you can:  Set the notch filter. Perform autotune. "
9,GPS Compass glitch EKF Lane Switch fly away help,3,"I have a hexacopter with a holybro 6C, T-motor MN5008 antigravity motors, Hobbywing Rotorx pro 40A ESCs, Holybro F9P RTK GPS with a tarot frame. The issue is that when we increase the altitude, first an gps/compass glitch comes , EKF lane switch happens and vibration compensation also turns on making drone fly away while gaining sudden altitude jumps. The issue is that this only happens in hill areas with medium winds and we tried to diagnose through log analysis, changing GPS hardware, adding EMF shielding but with no success. I have attached the logfile below and if anyone can shed a light on how to solve this, I would be much grateful. *","Your Hexacopter “The Clipper” is going for the record. Almost 10,000 accelerometer  clipping events on IMU1 which it switched to because IMU0 was so high. The internal vibration isolation on the IMU is totally inadequate for the conditions present on that craft."
9,GPS Compass glitch EKF Lane Switch fly away help,4,"I have a hexacopter with a holybro 6C, T-motor MN5008 antigravity motors, Hobbywing Rotorx pro 40A ESCs, Holybro F9P RTK GPS with a tarot frame. The issue is that when we increase the altitude, first an gps/compass glitch comes , EKF lane switch happens and vibration compensation also turns on making drone fly away while gaining sudden altitude jumps. The issue is that this only happens in hill areas with medium winds and we tried to diagnose through log analysis, changing GPS hardware, adding EMF shielding but with no success. I have attached the logfile below and if anyone can shed a light on how to solve this, I would be much grateful. *",LOL…I noticed that too…  Was the 3rd IMU disabled for a reason or does this AP only have 2? 
9,GPS Compass glitch EKF Lane Switch fly away help,5,"I have a hexacopter with a holybro 6C, T-motor MN5008 antigravity motors, Hobbywing Rotorx pro 40A ESCs, Holybro F9P RTK GPS with a tarot frame. The issue is that when we increase the altitude, first an gps/compass glitch comes , EKF lane switch happens and vibration compensation also turns on making drone fly away while gaining sudden altitude jumps. The issue is that this only happens in hill areas with medium winds and we tried to diagnose through log analysis, changing GPS hardware, adding EMF shielding but with no success. I have attached the logfile below and if anyone can shed a light on how to solve this, I would be much grateful. *","That’s a good question, I noticed that too. INS_ENABLE_MASK is set to All but only 2 have ID’s. Seems like I saw some posting abut that with these 6’s on the forum here awhile back. 2 IMU’s in the Hwdef:  It’s the 6X that has 3."
10,Best FC board for small 4in arducopter drone,1,"Hi we have some small drones with ardupilot and Matek F405 mini TE board. we have some success with these board but we think that these small boards (1mb flash) with limited functions in arducopter are very poor performance and it appears some issues randomly due to limited hardware. the big brother of these board, the Matek H743 mini, have 2mb flash memory. it have the similar mounting holes (20x20). the performance of these big board appears to be more reliable. anyone have experience with these board, the matek H743 mini??","These are decent boards, especially the later ones with the ICM42688 IMU. One thing to be aware of is that they get very hot so I would say that temperature calibration is a must."
10,Best FC board for small 4in arducopter drone,2,"Hi we have some small drones with ardupilot and Matek F405 mini TE board. we have some success with these board but we think that these small boards (1mb flash) with limited functions in arducopter are very poor performance and it appears some issues randomly due to limited hardware. the big brother of these board, the Matek H743 mini, have 2mb flash memory. it have the similar mounting holes (20x20). the performance of these big board appears to be more reliable. anyone have experience with these board, the matek H743 mini??","you talk about the barometer temperature calibration? we have a lot of issues with the baro foam isolation. we dont find the correct way to isolate the baro from the outside wind currents. we have done the tcal baro calibrations and we find the following: the system works better with more time flying. at the start of the flight, the barometer oscilates a lot. few time after, the barometer works much better."
10,Best FC board for small 4in arducopter drone,3,"Hi we have some small drones with ardupilot and Matek F405 mini TE board. we have some success with these board but we think that these small boards (1mb flash) with limited functions in arducopter are very poor performance and it appears some issues randomly due to limited hardware. the big brother of these board, the Matek H743 mini, have 2mb flash memory. it have the similar mounting holes (20x20). the performance of these big board appears to be more reliable. anyone have experience with these board, the matek H743 mini??",Have a look at the review video from Andy on YouTube. He goes in detail about the new ICM42688 IMU. link - *
10,Best FC board for small 4in arducopter drone,4,"Hi we have some small drones with ardupilot and Matek F405 mini TE board. we have some success with these board but we think that these small boards (1mb flash) with limited functions in arducopter are very poor performance and it appears some issues randomly due to limited hardware. the big brother of these board, the Matek H743 mini, have 2mb flash memory. it have the similar mounting holes (20x20). the performance of these big board appears to be more reliable. anyone have experience with these board, the matek H743 mini??","No. IMU temperature calibration. I have a few of these boards, Slim’s and a Mini, and they perform well."
11,Well done guys!,1,My first flight on a new frame x8 and 4.3 right on well done. I did not even need to tune but I have VTOL quicktune ready to go so far not needed…  Loiter mode feels tight no problems so far.  Thanks!  *,"If you think that is good :), wait until it is properly tuned!!!"
11,Well done guys!,2,My first flight on a new frame x8 and 4.3 right on well done. I did not even need to tune but I have VTOL quicktune ready to go so far not needed…  Loiter mode feels tight no problems so far.  Thanks!  *,I would bet mine over your bird. lol
11,Well done guys!,3,My first flight on a new frame x8 and 4.3 right on well done. I did not even need to tune but I have VTOL quicktune ready to go so far not needed…  Loiter mode feels tight no problems so far.  Thanks!  *,   https://dl.dropboxusercontent.com/s/8mst0kra7z6kkgu/GH010273.MP4?dl=0  
11,Well done guys!,4,My first flight on a new frame x8 and 4.3 right on well done. I did not even need to tune but I have VTOL quicktune ready to go so far not needed…  Loiter mode feels tight no problems so far.  Thanks!  *,That’s the nicest Orange Hover machine I have seen.
11,Well done guys!,5,My first flight on a new frame x8 and 4.3 right on well done. I did not even need to tune but I have VTOL quicktune ready to go so far not needed…  Loiter mode feels tight no problems so far.  Thanks!  *,Thanks! I been looking for a name for this Orange X8.  Possibly OHM Orange Hover machine would work.
12,Copter-4.3.1-rc1 available for beta testing!,1,Copter-4.3.1-rc1 is now available for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be manually downloaded from *. Changes vs 4.3.0 are in the * and copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  All feedback is greatly appreciated!,*
12,Copter-4.3.1-rc1 available for beta testing!,2,Copter-4.3.1-rc1 is now available for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be manually downloaded from *. Changes vs 4.3.0 are in the * and copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  All feedback is greatly appreciated!,I just upgraded to 4.3.1-rc1 and flown several times. No issues noted. I find the throttle response on Stabilized and Acro became a bit more sensitive. Not a big drama. We’ll keep on testing and update this thread if I find something. Autotune message is already clear and not truncated. Thanks for fixing this.
12,Copter-4.3.1-rc1 available for beta testing!,3,Copter-4.3.1-rc1 is now available for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be manually downloaded from *. Changes vs 4.3.0 are in the * and copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  All feedback is greatly appreciated!,"On a small quad 4 ""I did not find any problems in stabilize, althold, loiter."
12,Copter-4.3.1-rc1 available for beta testing!,4,Copter-4.3.1-rc1 is now available for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be manually downloaded from *. Changes vs 4.3.0 are in the * and copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  All feedback is greatly appreciated!,"Good evening, I am quite new to these subject so sorry if my question seems dumb. I am trying to download this version (Copter-4.3.1-rc1) on the link provided in the first post yet, I struggle to find it since the 4.3.2 has been released and seems to be the new reference going through MP beta firmwares or there : * Is there any other link that I missed which allow to download this previous version ? Thank you in advance for your return. Best regards, Gaultier"
12,Copter-4.3.1-rc1 available for beta testing!,5,Copter-4.3.1-rc1 is now available for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be manually downloaded from *. Changes vs 4.3.0 are in the * and copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  All feedback is greatly appreciated!,4.3.1 is stable version now if I’m not wrong. Should come up when you enter the firmware page in missionplanner * can comfirm this
12,Copter-4.3.1-rc1 available for beta testing!,6,Copter-4.3.1-rc1 is now available for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be manually downloaded from *. Changes vs 4.3.0 are in the * and copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  All feedback is greatly appreciated!,"*, Thanks very much for getting involved with Beta testing, we really appreciate it.  For most people the easiest way to install the beta version is to use MP’s Install Firmware screen.  If you click on the “Beta firmwares” label on the bottom right you should see the versions displayed below each icon update."
12,Copter-4.3.1-rc1 available for beta testing!,7,Copter-4.3.1-rc1 is now available for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be manually downloaded from *. Changes vs 4.3.0 are in the * and copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  All feedback is greatly appreciated!,"Dear All, Alright, I understand better. Thank you both of your for your help."
13,How to connect a water pump to the drone,1,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,* Probably these DC pumps will be heavy and add lots of complexity… have you ever considered using a BLDC pump with a ESC? This way it should be pretty straightforward to setup following these instructions: *
13,How to connect a water pump to the drone,2,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,Thanks a lot for your reply I am a completly beginner and I dont know a lot about electronics. I bought a this bldc motor:  * but it only has 2 wires how I will connect it with an esc? Thanks again !!
13,How to connect a water pump to the drone,3,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,It appears the pump you’ve bought is just a regular pump but with a brushless motor. So not really designed to connect to an ESC. - Just simply on/off.
13,How to connect a water pump to the drone,4,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,You will need a relay with that pump. If you go that route get an opto-isolated  one  with a 3V coil.  What’s the purpose of the pump?
13,How to connect a water pump to the drone,5,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,Thank you a lot !! It’s for my thesis project I have to make an agriculture drone which will spray pesticides
13,How to connect a water pump to the drone,6,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,"I see ,thanks for your reply !!"
13,How to connect a water pump to the drone,7,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,"OK, but as * said it will just be on/off. Spray functions in Arducopter can be a lot more sophisticated with the right hardware. But perhaps you don’t need that?"
13,How to connect a water pump to the drone,8,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,Yes I need something simple just to on/off the pump. Do you know if its possible to do it with a 5v opto isolated relay because in my country I can’t find one with 3v ?or perhaps another way ?
13,How to connect a water pump to the drone,9,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,"Relay outputs from that Flight Controller are 3.3Vdc, a 5V coil won’t work. An alternative would be a PWM switch/relay. Here is one example:*"
13,How to connect a water pump to the drone,10,Hi am making my first drone using Pixhawk 2.4.8 and I want to add a water pump which I will control from a switch of the transmitter. I was thinking of having a relay connected to an AUX output of the Pixhawk and also connected to the pump . Is this a good idea ?Should I also use a diode to prevent back EMF from the pump ?,Thank you very much * !! I will try it !!
14,PixRacer SBUS problem,1,This post was flagged by the community and is temporarily hidden.,"Hi *, As mentioned on *, I checked my pixracer running AP Copter-4.3.1 connected to an official Futaba SBUS receiver and it worked fine. It would be good if you could include an onboard log.  As we often say, “without a log, it’s all guesswork”. My random guess is that the receiver is not sending a properly formatted SBUS packets and AP is more strict than other software in order to ensure there are no errors in the handling of the protocol. Perhaps * has something to add as he’s actually more familiar with how we decode the various RC protocols."
14,PixRacer SBUS problem,2,This post was flagged by the community and is temporarily hidden.,"Sure! I will try to get some log. First time playing with flight controller, so probably will need some time to learn "
14,PixRacer SBUS problem,3,This post was flagged by the community and is temporarily hidden.,*
14,PixRacer SBUS problem,4,This post was flagged by the community and is temporarily hidden.,"Thanks for the tlog.  These logs are not super useful but it does tell me that the FRAME_CLASS and FRAME_TYPE parameters haven’t been set yet.  *. Sounds like you’re just getting started with setting up an AP vehicle for the first time which is great of course but I suspect there’s not actually a problem with the software, it’s just the regular niggles of setting up a vehicle for the first time with AP.  Maybe post a picture or more info on how the RC is connected… or maybe just continue with the vehicle setup and come back to the RC closer to the end."
14,PixRacer SBUS problem,5,This post was flagged by the community and is temporarily hidden.,"Ah. I will do that and update the log later. The reason why I did not had the FRAME_TYPE set was because I was switching the FW back and forth with PX4, so everything got wiped out."
14,PixRacer SBUS problem,6,This post was flagged by the community and is temporarily hidden.,Two new log files had been uploaded to the same link *
14,PixRacer SBUS problem,7,This post was flagged by the community and is temporarily hidden.,"As Randy already said, those types of logs aren’t much use.  Use mission planner to save your parameter file and post that. You should also have a look at the wiki:  *"
14,PixRacer SBUS problem,8,This post was flagged by the community and is temporarily hidden.,And here is how I wired the RX to the FC. As well as the pinout of the RX 
14,PixRacer SBUS problem,9,This post was flagged by the community and is temporarily hidden.,* do you mean this parameter file? * (15.9 KB)
14,PixRacer SBUS problem,10,This post was flagged by the community and is temporarily hidden.,"That’s the file.  I have used same FC with an SBUS RX, and it works.  I didn’t notice an issue in the parameters.  I’ve never seen that RX before so I don’t know what it’s doing. Do you have access to another RX to test?"
14,PixRacer SBUS problem,11,This post was flagged by the community and is temporarily hidden.,Unfortunately this is the only RX I had that outputs SBUS. I did try another RX outputs PPM and it worked without any issue.
14,PixRacer SBUS problem,12,This post was flagged by the community and is temporarily hidden.,The way to *.  QGC can download logs as well.  In order to produce logs while the vehicle is disarmed you may need to set LOG_DISARMED = 1 (which it looks like you’ve already done). The wiring looks OK and the parameter file is very similar to mine so I don’t see any issues.  I’m afraid I might conclude that the receiver is sending funny packets and AP is a little more strict than other software.
14,PixRacer SBUS problem,13,This post was flagged by the community and is temporarily hidden.,"emm…if I would like to debug the code, where would you suggest to start? Is there any way to see the realtime debug message from one of the serial ports? Or do I have to hook up STLINk to trace the code? I am a SW engineer working on the embedded system for 20 years and I do this kind of things every day. So I think eventually I can figure it out but if you have any hint to make it go faster, that would be appreciated. BTW. I captured the SBUS output on a logic analyzer, does this ring a bell  to you? "
14,PixRacer SBUS problem,14,This post was flagged by the community and is temporarily hidden.,"Oh, this logic analyzer actually had a SBUS decoder  "
14,PixRacer SBUS problem,15,This post was flagged by the community and is temporarily hidden.,And I put a raw logic analyzer capture file sbus.sr in the same folder I shared to you yesterday. You can use Sigrok Pulsview to open it. Don’t know why the forum does not allow me to post a link to that file here. And some of my screen shot of the waveform got deemed as spam by the forum 
14,PixRacer SBUS problem,16,This post was flagged by the community and is temporarily hidden.,"well, don’t know how to get the hidden replies back. In that post I was asking if you can give me some suggestion on where to start to debug the code. I am a SW engineer working on the embedded system for 20 year so I do those kind of things every day. Just want to get some hint from you first."
14,PixRacer SBUS problem,17,This post was flagged by the community and is temporarily hidden.,"Thanks for the extra info.  I think discuss is just giving you a hard time because your account is only a few days old.  I’ve brought back the hidden replies. Re the SBUS decoder, it is in the * but I must admit that I’ve never looked at it myself.  * is the expert."
15,Aux relay pixhawk 6c,1,"Hi guys , I’m assembling a quadcopter using the Pixhawk 6C and PM07 Power Module, I’m having trouble finding the relay pin for trigger in camera, does anyone know where the relay pin is?w where the relay pin is?  *",Choose a FMU output and configure it for a relay by following the Wiki. * These are the AUX outputs.
15,Aux relay pixhawk 6c,2,"Hi guys , I’m assembling a quadcopter using the Pixhawk 6C and PM07 Power Module, I’m having trouble finding the relay pin for trigger in camera, does anyone know where the relay pin is?w where the relay pin is?  *","* i will choose FMU Output pin 5, this is configuration : CAM_TRIGGER_TYPE    1(RELAY) RELAY_PIN                      54 (AUXOUT5) SERVO5_FUNCTION       -1 (GPIO) is that true?"
15,Aux relay pixhawk 6c,3,"Hi guys , I’m assembling a quadcopter using the Pixhawk 6C and PM07 Power Module, I’m having trouble finding the relay pin for trigger in camera, does anyone know where the relay pin is?w where the relay pin is?  *","Yes, that should do it."
16,What coordinate system is used by orange cube?,1,"Dear all, I am looking at IMU from the logs (in the body frame) and trying to convert them to values in the inertial/earth/static frame. When I do this with thrust it works as expected (according to image) but if I do this with acceleration it gives me the wrong signs in the inertial frame (i.e. contrary to image). A couple of questions:  Are the body frame and inertial frame correct (could they be) as I have drawn them below? The frames make more sense (i.e. are pointing the same when looking North) if you rotate the body frame 180 degrees around its Z-axis. Could it be that my drone is configured poorly in a way that the drone is constantly flying backwards instead of forwards when sending throttle and pitching “forward”? On that same note, in https://plot.ardupilot.org/, are the green and red rotors indicative of direction or is it just there for no reason? How come that my thrust conversion goes well but my acceleration conversion (via the same R matrix) does not?  I hope this is clear. If it helps, let me know and I’ll upload the log file I am using to check this. I am using a Foxtech Hover 1 drone with an orange cube ap. Thanks for helping me out, Erik *",The body frame should be: Positive X = forward Positive Y = right Positive Z = down See here: * I’ve noticed that I need to reverse the pitch RC channel on most of my Copter builds to have it behave as a pilot would expect (back stick = pitch up). Perhaps that’s the source of your confusion?
16,What coordinate system is used by orange cube?,2,"Dear all, I am looking at IMU from the logs (in the body frame) and trying to convert them to values in the inertial/earth/static frame. When I do this with thrust it works as expected (according to image) but if I do this with acceleration it gives me the wrong signs in the inertial frame (i.e. contrary to image). A couple of questions:  Are the body frame and inertial frame correct (could they be) as I have drawn them below? The frames make more sense (i.e. are pointing the same when looking North) if you rotate the body frame 180 degrees around its Z-axis. Could it be that my drone is configured poorly in a way that the drone is constantly flying backwards instead of forwards when sending throttle and pitching “forward”? On that same note, in https://plot.ardupilot.org/, are the green and red rotors indicative of direction or is it just there for no reason? How come that my thrust conversion goes well but my acceleration conversion (via the same R matrix) does not?  I hope this is clear. If it helps, let me know and I’ll upload the log file I am using to check this. I am using a Foxtech Hover 1 drone with an orange cube ap. Thanks for helping me out, Erik *","Thanks Yuri, Where do you find this pitch setting? Is it under config and then joystick? Then I can check. I don’t suspect that should be the problem as pitch already behaves as expected (when flying away from you: pitch back = pitch up = positive which is seen in the image for positive \theta). So the roll conventions are fine (but the linear directions are not). On the other hand: I guess if I were to change the pitch RC channel as well as the roll RC channel, that I could use the back of my drone as the front (which would align the body and inertial coordinate systems), right? The reason we did not do this is so far is because the drone’s front two rotors are now red (and the back two rotors are green), which I believe is how it is supposed to be as well, correct? Thanks again for thinking with me,"
16,What coordinate system is used by orange cube?,3,"Dear all, I am looking at IMU from the logs (in the body frame) and trying to convert them to values in the inertial/earth/static frame. When I do this with thrust it works as expected (according to image) but if I do this with acceleration it gives me the wrong signs in the inertial frame (i.e. contrary to image). A couple of questions:  Are the body frame and inertial frame correct (could they be) as I have drawn them below? The frames make more sense (i.e. are pointing the same when looking North) if you rotate the body frame 180 degrees around its Z-axis. Could it be that my drone is configured poorly in a way that the drone is constantly flying backwards instead of forwards when sending throttle and pitching “forward”? On that same note, in https://plot.ardupilot.org/, are the green and red rotors indicative of direction or is it just there for no reason? How come that my thrust conversion goes well but my acceleration conversion (via the same R matrix) does not?  I hope this is clear. If it helps, let me know and I’ll upload the log file I am using to check this. I am using a Foxtech Hover 1 drone with an orange cube ap. Thanks for helping me out, Erik *","In the second case, I guess a quick post-flight way to align these coordinates systems would be to just (-1)*AccX and (-1)*AccY."
16,What coordinate system is used by orange cube?,4,"Dear all, I am looking at IMU from the logs (in the body frame) and trying to convert them to values in the inertial/earth/static frame. When I do this with thrust it works as expected (according to image) but if I do this with acceleration it gives me the wrong signs in the inertial frame (i.e. contrary to image). A couple of questions:  Are the body frame and inertial frame correct (could they be) as I have drawn them below? The frames make more sense (i.e. are pointing the same when looking North) if you rotate the body frame 180 degrees around its Z-axis. Could it be that my drone is configured poorly in a way that the drone is constantly flying backwards instead of forwards when sending throttle and pitching “forward”? On that same note, in https://plot.ardupilot.org/, are the green and red rotors indicative of direction or is it just there for no reason? How come that my thrust conversion goes well but my acceleration conversion (via the same R matrix) does not?  I hope this is clear. If it helps, let me know and I’ll upload the log file I am using to check this. I am using a Foxtech Hover 1 drone with an orange cube ap. Thanks for helping me out, Erik *","Prop colors mean nothing, as different manufacturers produce different colors for no standard reason. I typically reverse the pitch channel in my RC transmitter as necessary (not an ArduPilot parameter change). Post a .bin log. Perhaps we can help more if we see what you’re seeing."
16,What coordinate system is used by orange cube?,5,"Dear all, I am looking at IMU from the logs (in the body frame) and trying to convert them to values in the inertial/earth/static frame. When I do this with thrust it works as expected (according to image) but if I do this with acceleration it gives me the wrong signs in the inertial frame (i.e. contrary to image). A couple of questions:  Are the body frame and inertial frame correct (could they be) as I have drawn them below? The frames make more sense (i.e. are pointing the same when looking North) if you rotate the body frame 180 degrees around its Z-axis. Could it be that my drone is configured poorly in a way that the drone is constantly flying backwards instead of forwards when sending throttle and pitching “forward”? On that same note, in https://plot.ardupilot.org/, are the green and red rotors indicative of direction or is it just there for no reason? How come that my thrust conversion goes well but my acceleration conversion (via the same R matrix) does not?  I hope this is clear. If it helps, let me know and I’ll upload the log file I am using to check this. I am using a Foxtech Hover 1 drone with an orange cube ap. Thanks for helping me out, Erik *","It is just too big too upload directly, so here it is in a google drive link. Again, what I am confused about is that the ax and ay seem to have a sign convention leading to an odd inertial coordinate system (south west down) when I use the rotation matrix as below: (which I verified to be correct)."
17,Configuration of a Tilt Rotor Quadcopter,0,"Hello all, I am semi-experienced hobbyist looking into building a tilt rotor quadcopter, the general design of it is as follows. * I am currently looking into modifying the CubeOrange firmware to allow the motors to tilt while in flight using Arducopter. However, I believe it may also be possible to use a modified configuration of ArduPlane to achieve this. Any feedback is appreciated. Thank you!",
18,Bad Vibrations?,1,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"It takes a bit of practice to quickly find the common things you look for in logs, but you get the hang of it in a while. Reading the docs is best, plus going through other peoples discussions usually gives some insights. There is bad vibrations there, especially the Z axis which is the one to really worry about. The vibrations should be below 30 on that graph, and anything above 15 to 20 needs attention. Down around 10 is good but can sometimes be hard to achieve. And there’s clipping, which means forces went beyond what could be measured. Somewhat surprisingly, the IMU calculated position is only slightly diverged from the GPS position So first up try and fix the vibrations before any more flights. X and Y axis are usually prop and motor balance and most easily solved. Z axis can still be prop and motor balance but also a whole lot more: propwash over the flight controller, frame flexibility and resonance, something touching the flight controller or wires too loose or pulled too tight, bad flight controller mounting… That list goes on unfortunately  There’s a bunch of info in the docs. Maybe get a picture of you flight controller in place and we might be able to see an issue. Also a picture of the entire octo. In your case X axis vibes are higher than Y axis vibes, indicating the flight controller is not evenly damped. For example the placement or number of stick-on foam blocks is irregular. It’s not all doom and gloom though, the octo is flying and doing alright so far. It looks like you’ve only tried tuning yaw a bit, which can usually be left until last. Pitch and Roll are much more critical. Set AUTOTUNE_AXES,3 for when you do get to the stage of running Autotune. Set these in preparation for the next test flights (after vibrations are improved) INS_HNTCH_ENABLE,1  ← set this then refresh params to see the rest INS_HNTCH_MODE,1 INS_HNTCH_REF,0.15 INS_HNTCH_FREQ,40 INS_HNTCH_BW,20 INS_LOG_BAT_MASK,1 INS_LOG_BAT_OPT,4 I’ve very carefully calculated the values I have specified here, well guessed a bit maybe, but use them until we know more. MOT_SPIN_MIN,0.12 ← it was very low, this could be more appropriate I couldnt quite tell what prop size you’ve got from the parameters, so more information might help. I imagine this is an octo about a 1.2meters across with about 15 inch props… What motors and ESCs do you have? We might be able to refine some of the parameters a bit more."
18,Bad Vibrations?,2,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"OK, strangeness… The frame is set as a quad H, but you’ve got eight motors defined in SERVO params. We’re definitely going to need more info! I suspect you need to set SERVO5_FUNCTION,0 through to SERVO8_FUNCTION,0 Also set these to help out the GPS a bit BRD_BOOT_DELAY,5000 GPS_GNSS_MODE,7"
18,Bad Vibrations?,3,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"xfacta thanks for replying.  Im going to list my entire build below with a link to some pictures of the mothership.  This quad is primarily going to be used as my real estate photo/video rig. Ive read through your reply and I will try and CNC a new FC mount and add some cushy rubber mounts that I have to lessen the vibes on that. Frame: 650mm H Frame (all 16mm carbon fiber tube) Motors: Mad Components 5010 310kv ESC’s: Hobbywing XRotor Pro 40A (when I calibrated these, I turned off DEO since Ive read people were having desync problems with it on) FC: Pixhawk Cube Black GPS/Compass: Here 2 Current Sensor: Mauch PL 200A Power Cube: Mauch PC3v3 Props: 17x5.5 carbon fiber props"
18,Bad Vibrations?,4,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,Also wanted to add this eCalc for additional reference.
18,Bad Vibrations?,5,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"That carrier board might be OK just with some of the double-sided antivibration foam. Try these other things first though. I would definitely take the USB connector off the top of the cube and mount it on the frame. There’s a USB connector on the carrier board that would be better to wire up than using those stiff little extension cables like that one you have. Ensure those power wires are secured - they look like they have a long run to go before securing to anything, but the trick is leaving enough flexibility near the carrier board so they are not unnecessarily transferring vibrations. Same with the GPS and other wires. With those GPS cables, I carefully strip back a couple of inches of the outer covering, so the smaller wires have more flexibility near the flight controller. Secure the motor wires and anything else loose too. Ideally there would be a way to run them down the inside of the arm tubes for neatness but that might not be possible without compromising the structure. And dont worry, we all know how easy it is to end up with a flying ball of cable ties  There’s always more iterations!"
18,Bad Vibrations?,6,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"Currently hard at work in Fusion 360 designing new frame components for the quad.  So far so good but I have a question about EMI.  I cant find much on the Pixhawk itself having to be away from any power systems that generate EMI, but there is alot about the GPS/compass having to be.  How close can I mount the Pixhawk cube to things like esc’s, mauch current sensor and mauch power cube v3?  For example is an inch or more ok?"
18,Bad Vibrations?,7,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"You can mount the Cube close to high currents if you have to, and it is typical to disable the internal compass. The compass in the GPS unit will need to be some distance from the high current devices."
18,Bad Vibrations?,8,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"Ok good to know.  any wires that I do mount the cube next to will be very short as well.  GPS/compass will definitely be far from high currents.  Also, some people say they have great results mounting the pixhawk cube on a rubber damper mount platform like the ones found in this forum.  Will this help with vibrations or can it hurt?  Thanks!"
18,Bad Vibrations?,9,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"It’s often not required to soft-mount the Cube and carrier board. If there is a lot of resonance and vibration in your frame then just the double-sided foam it came with could work, or the next level is something like this:"
18,Bad Vibrations?,10,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"I thaught this was bad for the cube !!Edit: The following statement by Philip is incorrect, it has changed!! I spoke to quickly and should have made some more digging! So, this should not be seen as any sort of official statement by him, at least not an up to date one! “Philip wrose says it should always be hardmounted since it got internal vibration isolation.” Is this not true in real life situations? Or is it just for very high levels of vibration?"
18,Bad Vibrations?,11,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,I have the same question… there is a new position about this kind of anti vibration mount for the cubepilot FCs?
18,Bad Vibrations?,12,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"It is still valid that the Cube carrier boards should usually be hard mounted. You only need to start changing their mount if there is bad vibrations that cant be fixed any other way. If I had to I would try eliminating the vibrations by changing the mounting system in stages, only doing what’s required. Dont jump straight to using a 4-balls 3D printed mount as the first step. That nice looking mount on Thingiverse has some text along with it that says the same thing. These sorts of mounts can be required for copters with internal combustion engines (generators), and even some monocoques where vibrations and noise can be significant and simply cant be reduced further."
18,Bad Vibrations?,13,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,Fortunately Im designing the new frame components to accommodate both mounting options.
18,Bad Vibrations?,14,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,Check out this thread. Particularly the post about his changing his view on that and regretted saying it. * The debate has been on-going since the Cubes were released and I don’t think there is a 1 size fits all solution unless you have a very rigid frame.
18,Bad Vibrations?,15,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,"I spoke to soon! I changed my post to include that, so I don’t spread misinformation. Thanks for educating me, I’ll take a look at the link you posted"
18,Bad Vibrations?,16,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,Thanks for clarifying *!
18,Bad Vibrations?,17,I dont really understand how to analyze the data flight logs very well and could use some help sorting out anything that could be concerning such as vibrations or anything else.  I also would like to know more about filtering.  Dont hesitate to ask me more about the quad setup/build if you need more info. Link to most recent flight: * Thanks!,I mentioned earlier in this post I was redesigning my quads frame components for neatness and for better mounting of hardware.  Though I would give and update with a few pics. 
19,"Potential thrust loss, could it be because of Li-Ion battery?",1,"Hey! I tried to play with the copter payload and suddenly received this error. I am using Chinese noname 5010 750kv motors with 40A ESC and 1355 props. Full weight is ~2.5 kg. I guess it must be okay for these motors. But my batteries are Li-Ion, based on 18650 elements(first is 3S2P LG HE4 5ah, second is 3S3P LG HG2L 9ah) I attached logs for it. I checked that RCOUs for motors are very different, but the payload was not really centered. Also, I don’t know how to interpret voltage, it seems that it drops very fast but I don’t know the normal behavior for it. First battery logs - * Second battery logs - * If I build 3S4P battery, will it be ok? Or maybe I need to switch to 4S? Or Li-Ion is not suitable for such setup?",Those batteries can’t supply the current required. They are sagging to <9V and the Motor outputs are maxed out. 4S might work.
20,Compass 3 not found,1,"Hi! I am pretty noob in copter, but for the second my build I am suffering with the same issue: compass 3 not found. The problem is that I don’t have 3rd compass at all. I am running Chinese pixhawk 2.4.8 with internal compass + external M8N GNSS module with i2c compass. Here is the screen from QCG on my phone:  *  I tried to set compass_prio3_id to zero and it fixed the problem for a while. But then it returns: * * Also, I don’t have any SPI connections. What should I do to disable 3rd compass forever?","In Mission Planner’s compass setup tab, there’s an option to remove missing compasses. I don’t know if QGC offers the same option. Whether or not you prefer QGC for normal operations, Mission Planner is better suited for initial setup."
20,Compass 3 not found,2,"Hi! I am pretty noob in copter, but for the second my build I am suffering with the same issue: compass 3 not found. The problem is that I don’t have 3rd compass at all. I am running Chinese pixhawk 2.4.8 with internal compass + external M8N GNSS module with i2c compass. Here is the screen from QCG on my phone:  *  I tried to set compass_prio3_id to zero and it fixed the problem for a while. But then it returns: * * Also, I don’t have any SPI connections. What should I do to disable 3rd compass forever?",You can set COMPASS_USE2 = 0 (Disabled)
20,Compass 3 not found,3,"Hi! I am pretty noob in copter, but for the second my build I am suffering with the same issue: compass 3 not found. The problem is that I don’t have 3rd compass at all. I am running Chinese pixhawk 2.4.8 with internal compass + external M8N GNSS module with i2c compass. Here is the screen from QCG on my phone:  *  I tried to set compass_prio3_id to zero and it fixed the problem for a while. But then it returns: * * Also, I don’t have any SPI connections. What should I do to disable 3rd compass forever?","Thank you, I will try MP. I am Linux user for last ~10 years, so thought that QGC is better for me "
20,Compass 3 not found,4,"Hi! I am pretty noob in copter, but for the second my build I am suffering with the same issue: compass 3 not found. The problem is that I don’t have 3rd compass at all. I am running Chinese pixhawk 2.4.8 with internal compass + external M8N GNSS module with i2c compass. Here is the screen from QCG on my phone:  *  I tried to set compass_prio3_id to zero and it fixed the problem for a while. But then it returns: * * Also, I don’t have any SPI connections. What should I do to disable 3rd compass forever?","Thank you, I did it and it works! No new compasses for a couple of flights!"
21,Optical flow and altitude anomalies,0,"Hey everyone, We’ve had some optical flow and EKF altitude estimation anomalies and would like some help diagnosing these issues. Here are the optical flow readings from testing our vehicle, disarmed and not flying.  *  Notice that the flowX data is fairly smooth and precise, having a resolution of roughly ± 0.1 m/sec  The EKF sources are set to optical flow and rangefinder only. GPS is disabled.  When we are flying vehicle 1, the optical flow flowX data precision is less precise and is much more jagged and discrete. In addition, the EKF altitude estimation is jumping significatly between -20 meters and 20 meters.  * * We have had similar issues on other vehicles using PX4Flow and ArkFlow optical flow modules. The EKF sources are set to rangefinder and optical flow only, but the altitude jumps are largely mitigated when GPS is in the loop. Any help diagnosing and fixing this issue would be appreciated. Our leading theory is excessive vibrations on the optical flow unit during flight, but open to other explanations. Log files posted below. *",
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,1,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,"X and Y axis acceleration to an output? No, what’s available as an output is defined by the SERVOx_FUNCTION. For what purpose?"
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,2,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,You might be able to do that with a Lua script. But it’s a rather odd thing to do…
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,3,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,I just want to use the accelleration data in Arduino to do something. I know you can use MavLink but the libraries are too complex for me at the moment. But it looks like the only way is MavLink. I will dig into MavLink then.
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,4,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,Use a serial port and Lua scripting. No need to compile that giant MAVLink library for something so simple.
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,5,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,* I still don’t have the skill to write LUA Scripts. Do you know of a good online tutorial to learn how to write LUA Scripts?
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,6,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,"If you can write C++ for Arduino, Lua scripting is pretty easy.          "
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,7,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,Wow very nice turorial. Thanks for sharing it. My board does not have an SD card (Kakute H7 V2) so I cannot use LUA scripting. Bad luck for me buying this board. And the Flash memory is playing up that it does not even record logs. I am not yet able to fix this until now whichs makes raising issues imposible as I cannot produce the log. But again thanks a lot.
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,8,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,This would seem to be true. Perhaps retire it before sinking more time into it?
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,9,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,Seems you’re interested in a lot of advanced features. Recommend a board with an H7 processor to continue your endeavors.
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,10,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,"Yup, I’ve considered buying a new one. The Matek H7 was recommended but I read some issues in flashing this board so I hesitate jumping into another headache. Any other H7 boards there with the same form factor like Kakute H7? Looks like every board has there own pros and cons. But the one I have is really crap. Flash memory problem and arming problem. Like what * said, its time to retire the board once I find a better replacement. The copter is well tunned and flies well though with the help of * and * tunning it. Really flies very well. I don’t know if I will be able to tune the replacement board exactly similar to this. Not an easy thing to do."
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,11,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,I don’t think there are any issues with flashing them. I have several. Flash the Bootloader 1st using dfu-util and then the firmware with Mission Planner. Never fails. There are other methods that can work also but I found this one to always work. The H743-Slim is the same form factor as that Kakute board. If you are tight on space the Mini version is smaller and still has an Sd card.
22,Is there a way to pass the values of ax and ay to ch5out and ch6out respectively?,12,I was wondering if there is a way to pass some flight controller parameters to the channel outputs. I would like to pass the values of ax and ay to ch5out and ch6out respectively.,Second *’s recommendation. Tuning the new one shouldn’t be hard. Use the same filter and PID settings. They won’t change with a new processor.
23,Relays not working in AC4.3.1 on PixRacer,1,"I just uploaded 4.3.1 on a couple of quads running PixRacer R15s. They formerly were running 4.0.7 and 4.1.x, and the relays worked fine, but after the upload, the relay pin stays low no matter what. RELAY_PIN is set to 55 for channel 6 output. Any ideas?","* Sure, things have changed since then. Wiki has it covered: *"
23,Relays not working in AC4.3.1 on PixRacer,2,"I just uploaded 4.3.1 on a couple of quads running PixRacer R15s. They formerly were running 4.0.7 and 4.1.x, and the relays worked fine, but after the upload, the relay pin stays low no matter what. RELAY_PIN is set to 55 for channel 6 output. Any ideas?","Yes, the issue will likely be that the SERVOx_FUNCTION needs to be set to -1 (GPIO).  Previously AP didn’t check whether there was a conflict between the Relay setup and the SERVOx_FUNCTION (PWM setup) and we’ve also remove the BRD_PWM_COUNT parameter and now use the SERVOx_FUNCTION parameters to more flexibly allow mixing the pwm and gpio outputs."
23,Relays not working in AC4.3.1 on PixRacer,3,"I just uploaded 4.3.1 on a couple of quads running PixRacer R15s. They formerly were running 4.0.7 and 4.1.x, and the relays worked fine, but after the upload, the relay pin stays low no matter what. RELAY_PIN is set to 55 for channel 6 output. Any ideas?","That’s probably it, I think the function is set to zero. I’ll check in the morning."
23,Relays not working in AC4.3.1 on PixRacer,4,"I just uploaded 4.3.1 on a couple of quads running PixRacer R15s. They formerly were running 4.0.7 and 4.1.x, and the relays worked fine, but after the upload, the relay pin stays low no matter what. RELAY_PIN is set to 55 for channel 6 output. Any ideas?",Thanks - that was it.
24,Issues with M10 GPS via CAN Bus,1,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!","Update: I found the mechanism for updating the device, very cool but a bit buried, I had completely misunderstood what I was looking at. Sadly it didn’t help, I think my module is a bit dodgy, won’t be dusting off with it anytime soon."
24,Issues with M10 GPS via CAN Bus,2,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!","This has been brought up in the Developer meeting Probably make sure you set GPS_GNSS_MODE to the minimum number of constellations that work reliably for you, no more than two."
24,Issues with M10 GPS via CAN Bus,3,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!",Or try Master V4.4.0-dev as a fix has been merged. You may not want to fly on Master but it could give you an indication that it is indeed the problem.
24,Issues with M10 GPS via CAN Bus,4,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!","Another Update: I’ve tried the new AP_GPS firmware & 4.4.0, not much has changed except that now I max out at about 9 sats with crappy HDOP. I’ve got a another model sitting right next to it with an M9-5883 (serial), Lux H7 running 4.3.0 that gets HDOP under 1 in 1:40. I believe this is a hardware problem (with this particular unit) that only a new one will solve. Thank you!"
24,Issues with M10 GPS via CAN Bus,5,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!",It will likely get attention soon as there is a Dev proposal to acquire a couple of these and do some fast auto mission work with them.
24,Issues with M10 GPS via CAN Bus,6,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!","Yet another exciting update: This information was provided by Matek support. desolder these 2 resistors to disconnect UART connection between M10 module and STM32L431 MCU then connect RXD TXD G 5V to a USB-TTL adapter. connact M10 module to u-center After doing this, solder back that 2 resistors, or bridge the resistor pads with a drop of tin. Matek_Service This is nice information because it allows one to talk to the M10 directly with the ublox center software. I’m pretty sure the unit I have is defective and I’ve replaced it with an M9N-5883 but the M10-L4-3100 is a pretty cool, inexpensive CAN bus solution (3 peripherals with 4 wires) if it worked."
24,Issues with M10 GPS via CAN Bus,7,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!",Same here. received the Mateksys M10-L4-3100 few days ago. Connected to FC Matek H743 Wing v3 and the FC Matek H743 slim V3 . Both still on the bench and loaded with FW ArduPlane. No GPS -Fix yet with both FC. All other older GPS units connected to a Cube -orange and also a Pixracer are having excellent fix in the same environment. I am pleased I found  your explanation here and will follow closely your topic. There is definitely something wrong with the M10-L4-3100 I have here.
24,Issues with M10 GPS via CAN Bus,8,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!",Is anybody around who purchased that M10 L4-3100 and has it working fine?
24,Issues with M10 GPS via CAN Bus,9,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!",I think Matek are going to send me one
24,Issues with M10 GPS via CAN Bus,10,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!",Thanks Andy. BTW  -   I did comment to you at YouTube yesterday.
24,Issues with M10 GPS via CAN Bus,11,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!","Today I had another look at my new  Matek M10-L4-3100 CAN-GPS. I connected it via CAN to an old Pixhawk Cube black out of a TREX Helicopter 600 which is dismantled. Upgraded the FC to copter FW, the latest stable. The MatekGPS worked as the GPS2, now without a problem. GPS 1 is a very old original 3DR-GPS. Both had 3D-fix at the same time after about 10 minutes. Still on the bench but the Matek GPS M10-L4-3100  seams to be not faulty what I can see. I want to use it  in a plastic-Plane which I am going to 3D print. That will take me a long time."
24,Issues with M10 GPS via CAN Bus,12,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!",So its working now? Or is something still broken?
24,Issues with M10 GPS via CAN Bus,13,"Hi, I’ve been having flakiness issues with the GPS on a M10-l4-3100 module that I have connected to a LUX H7 board via CAN, sometimes I get 20 Sats other times nothin. I contacted Matek and they recommend I try * which appears to be a small pre-compiled module. My question is how to I load this with 4.3.0? Thank you!","It definitely works connected to the Pixhawk Cube Black. Have not tried again with the Matek H743 Slim V3. I am sure  most likely that I have done something wrong with the Matek FC, will find out."
25,Holybro Kakute H7 V2 Questions,1,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",Yes. By default it is setup as RELAY2 so you can use a RELAY2 RC function to control it. No. To get logs you have to download them via mavproxy or MissionPlanner. Note that I recently found a performance issue that means log download is quite slow at the moment - *
25,Holybro Kakute H7 V2 Questions,2,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",* Thanks for that information! Do you have an estimate when the log download speed will be fixed?
25,Holybro Kakute H7 V2 Questions,3,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!","Hopefully will be merged this week, whether it makes it into 4.3 is up to *"
25,Holybro Kakute H7 V2 Questions,4,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",Thanks again. The H7 V2 looks good!
25,Holybro Kakute H7 V2 Questions,5,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",It should be in 4.3beta2
25,Holybro Kakute H7 V2 Questions,6,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!","My data flash on this board is f__k up. It does not record logs anymore. I tried clearing the logs in mission planner but this did not fix the issue. When I flashed the FC with Betaflight, there is a function in Betaflight to clear the data flash. I cleared it.  When I re-flashed Ardupilot, I was abel to see two logs. Deleted the logs but since then it has again stop recording logs. Very frustrating because when you have a problem, the developers always request the logs. I guess a physical SD card is still better because you can replace it when something goes wrong. This one, once it stops recording, that’s it. And scripts are not supported. And as Andy noted, it is slow. No pros on this board. Its all cons.My big regret choosing this board."
25,Holybro Kakute H7 V2 Questions,7,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!","How are you clearing logs? You want to select the “clear all logs” option as that does a full chip erase like betaflight does, you should then have no problem with logging."
25,Holybro Kakute H7 V2 Questions,8,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!","Yes that’s what I did. Clear all logs. But the FC still does not record logs. Very strange. After I’ve seen the functions of Betaflight, I think I will not fly my quad with it. It lacks all those whistles and bells that Ardupilot has. I hope the arming issue and the logging will soon be resolved."
25,Holybro Kakute H7 V2 Questions,9,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",I clear logs like this on a KakuteH7v2 and it records logs absolutely fine. What happens if you use mavproxy and log list
25,Holybro Kakute H7 V2 Questions,10,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",I have not used Mavproxy. I only started this QUAD I think around 3to4 months ago and have not explpored all the tools. What is Mavproxy if you don’t mind? Is it an APP that I need to install in my PC?
25,Holybro Kakute H7 V2 Questions,11,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",*
25,Holybro Kakute H7 V2 Questions,12,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",Thanks. I will have a read.
25,Holybro Kakute H7 V2 Questions,13,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",*
25,Holybro Kakute H7 V2 Questions,14,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!","According the the free memory size, there is no file saved in the data flash. I’m still trying to follow how to use MAVPROXY."
25,Holybro Kakute H7 V2 Questions,15,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!","RAM != FLASH - you are looking at RAM, FLASH is entirely different"
25,Holybro Kakute H7 V2 Questions,16,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",Opsss… Sorry. My bad.
25,Holybro Kakute H7 V2 Questions,17,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",Is this a similar issue I am experiencing? I don’t have the techncial expertice to verify.
25,Holybro Kakute H7 V2 Questions,18,"I plan to use Arducopter one of these boards for an AOS 7 build and ask if anyone help with these questions? Can the VTX ON/OFF Pit Switch on the H7 V2 be configured in ArduCopter? If so, how is it done? It looks like it is set up for Betaflight only? Concerning the 128 MB Flash for logging which replaces the SD card, after loading Copter will this just appear as drive in windows explorer? Any help would be appreciated!",I doubt it - you can verify by looking at the chip - send a photo
26,How long does the setup and tuning process usually take?,1,"Hi! I have flown some drones before, but I am new to ArduPilot / ArduCopter. While I am waiting for all the parts to arrive (mainly my * flight controller), I am planning the next steps on creating my drone, setting it up, … I want / have to get the drone up and running as soon as possible. Only speaking about the software setup (install Mission Planner, flash ArduCopter, initialize gps, accel, gyro, tune drone, setup receiver, …): What would be your estimate - from your experiences - on how long the setup takes? From the documentation and videos I get the impression, that the setup (everything but tuning the drone), as well as the tuning should each take about a day. What do you think / What are your experiences? Thanks!","It will always depends on the level of complexity that your drone has (like additional sensors for instance). For a very basic setup, I would say one entire day of work, specialy considering you are new to this… don’t make it a rush and remember to carefuly read all first flight setup docs before trying a real flight. It all depends also… tuning is not a very straight-forward process… it can involve some initial debugs and try-and-error procedures (like reducing vibration levels, motors imbalance, compass/motor calibration, notch filter tuning etc). It also depends on what you consider your tuning as really good, there is always margin for improvements, specially if you start to play with new features along your UAV lifecycle. I hope this can help you!"
26,How long does the setup and tuning process usually take?,2,"Hi! I have flown some drones before, but I am new to ArduPilot / ArduCopter. While I am waiting for all the parts to arrive (mainly my * flight controller), I am planning the next steps on creating my drone, setting it up, … I want / have to get the drone up and running as soon as possible. Only speaking about the software setup (install Mission Planner, flash ArduCopter, initialize gps, accel, gyro, tune drone, setup receiver, …): What would be your estimate - from your experiences - on how long the setup takes? From the documentation and videos I get the impression, that the setup (everything but tuning the drone), as well as the tuning should each take about a day. What do you think / What are your experiences? Thanks!","Yes, that really helps. Thank you very much! I am trying to prepare everything (hardware & software) and read all the important documentation before my flight controller finally arrives. I don’t want to waste any time and start getting my drone safely in the air as soon as possible."
26,How long does the setup and tuning process usually take?,3,"Hi! I have flown some drones before, but I am new to ArduPilot / ArduCopter. While I am waiting for all the parts to arrive (mainly my * flight controller), I am planning the next steps on creating my drone, setting it up, … I want / have to get the drone up and running as soon as possible. Only speaking about the software setup (install Mission Planner, flash ArduCopter, initialize gps, accel, gyro, tune drone, setup receiver, …): What would be your estimate - from your experiences - on how long the setup takes? From the documentation and videos I get the impression, that the setup (everything but tuning the drone), as well as the tuning should each take about a day. What do you think / What are your experiences? Thanks!",You’re welcome! Let us know if you face any kind of trouble.
26,How long does the setup and tuning process usually take?,4,"Hi! I have flown some drones before, but I am new to ArduPilot / ArduCopter. While I am waiting for all the parts to arrive (mainly my * flight controller), I am planning the next steps on creating my drone, setting it up, … I want / have to get the drone up and running as soon as possible. Only speaking about the software setup (install Mission Planner, flash ArduCopter, initialize gps, accel, gyro, tune drone, setup receiver, …): What would be your estimate - from your experiences - on how long the setup takes? From the documentation and videos I get the impression, that the setup (everything but tuning the drone), as well as the tuning should each take about a day. What do you think / What are your experiences? Thanks!","Set it all up and go through all mandatory calibrations, set up voltage and current monitoring, do the Initial Parameters section (do not skip the battery failsafe stuff ! ) Do the MissionPlanner motor test again and again until you are sure the correct motors are spinning the correct direction and in the correct order. Start you own thread and post the parameter file for us to check, with some description of parts, like ESCs, motors, props, frame size. This can be a significant short cut if we spot something you missed. When you do fly you want to use Stabilise and AltHold first up. Depending on  familiarity with the setup process and parameters your store of your own default parameters (or what to look for) what you discover in motor tests first flight performance  set up from start to flying properly can be anything from a couple of hours  to a week  I know of an entire EDU450 assembled from parts in the field, configured and used for work, when copters had hardware fails and could no longer be used for the job. So it can be done in a very short time when you know what you are doing."
26,How long does the setup and tuning process usually take?,5,"Hi! I have flown some drones before, but I am new to ArduPilot / ArduCopter. While I am waiting for all the parts to arrive (mainly my * flight controller), I am planning the next steps on creating my drone, setting it up, … I want / have to get the drone up and running as soon as possible. Only speaking about the software setup (install Mission Planner, flash ArduCopter, initialize gps, accel, gyro, tune drone, setup receiver, …): What would be your estimate - from your experiences - on how long the setup takes? From the documentation and videos I get the impression, that the setup (everything but tuning the drone), as well as the tuning should each take about a day. What do you think / What are your experiences? Thanks!","Okay, thank you very much! My flight controller will be delivered in about 2-3 weeks. I am planning to read the entire setup documentation (and other stuff I might need) until then. I will create a new post here (and link to it in this post), when everything is assembled and set up. Since this is a university project for my bachelor thesis I am already documenting everything I do / will do. Looking at your fast, long and very helpful replies, I am happy to have chosen ArduPilot with it’s great forum & community!"
27,System Identification Flight Mode,1,"I’m using a Pixhawk 2.1 on my Align T-Rex 500. I’m trying to use the sytem identification mode operation. I can choose it from the available flight modes, but when I try to switch to that mode, I get a message saying that the mode does not exist. I’m also running the lastest version of MissionPlanner. Also, I cannot find the SID_AXIS on the parameter list. Only SYSID parametera are availabe. What can I do to finally be able to use mode?",I suppose because it’s an F4 it’s feature limited including perhaps that feature. Try the Custom Firmware Builder and enable it in the build.
27,System Identification Flight Mode,2,"I’m using a Pixhawk 2.1 on my Align T-Rex 500. I’m trying to use the sytem identification mode operation. I can choose it from the available flight modes, but when I try to switch to that mode, I get a message saying that the mode does not exist. I’m also running the lastest version of MissionPlanner. Also, I cannot find the SID_AXIS on the parameter list. Only SYSID parametera are availabe. What can I do to finally be able to use mode?","By F4, do you mean the Omnibus? Due to the flash memory limitations, I must try the custom firmware builder to choose which features will be available?"
27,System Identification Flight Mode,3,"I’m using a Pixhawk 2.1 on my Align T-Rex 500. I’m trying to use the sytem identification mode operation. I can choose it from the available flight modes, but when I try to switch to that mode, I get a message saying that the mode does not exist. I’m also running the lastest version of MissionPlanner. Also, I cannot find the SID_AXIS on the parameter list. Only SYSID parametera are availabe. What can I do to finally be able to use mode?","* No, that Flight Controller has an F4 processor  and many of those are feature limited. Yes, try the Build Server, enable that feature, disable  something else you will not use and see if it builds."
27,System Identification Flight Mode,4,"I’m using a Pixhawk 2.1 on my Align T-Rex 500. I’m trying to use the sytem identification mode operation. I can choose it from the available flight modes, but when I try to switch to that mode, I get a message saying that the mode does not exist. I’m also running the lastest version of MissionPlanner. Also, I cannot find the SID_AXIS on the parameter list. Only SYSID parametera are availabe. What can I do to finally be able to use mode?","* what version of software did you load?  You may try to use an older stable version. I don’t think they have fixed the build server so that you get a stable version. I believe it gives you Master. By going to a previous stable version, it will go back to where sysid was part of the common build. I am running 4.0.7 on a pixhawk 1 and sysid is part of the build. So start with 4.2.3 and work backwards.  The next major release would be 4.1.5. You can select these from mission planner setup tab."
28,Sonar Maxbotix only be used pointing down?,1,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *",did you set proximity1 to use rangefinders?
28,Sonar Maxbotix only be used pointing down?,2,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *","Hi, yes set to 4."
28,Sonar Maxbotix only be used pointing down?,3,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *",I’m using exactly this sensor in i2c with FW 4.4 dev custom (custom fw server) because I have a kakute F4 1MB flash.
28,Sonar Maxbotix only be used pointing down?,4,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *","Hi *, I think this should work and the settings shown above look ok except that RNGFND1_ORIENT should be set to zero (forward)… can you provide an onboard log?"
28,Sonar Maxbotix only be used pointing down?,5,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *","thank you very much! I attach two logs with option log_disarmed=1. With RNGFND =25 and with RNGFND =0 I noticed that with RNGFND =25 sonar range works, while with RNGFND =0 sonar range reads 0 but the screen (ctrl F) proximty works. I’m in trouble… However the final configuration would be a small 4"" quad with sonar for altimeter and frontal  TF luna lidar for obstacle avoidance. Both sensors on I2c. Thank you!"
28,Sonar Maxbotix only be used pointing down?,6,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *","Ah, if you’re seeing the distance on the proximity radar screen then it is working as expected. I think the sonarrange field that you’re looking at is only ever used for downward facing lidar (on Copter at least)."
28,Sonar Maxbotix only be used pointing down?,7,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *","Thanks Randy, yes the radar works! Then I’ll do a test flight even if sonar range is zero. In the log I see the PRX data only if RNGFND ORIENTED=0, the PRX data disappears for RNGFND ORIENTED=25. Correct? However sonarrange works with sonar if (pointed downwards (see pictures above). Down only. In case of RNGFND ORIENTED = 0 SONARRANGE no longer works"
28,Sonar Maxbotix only be used pointing down?,8,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *",This all sounds correct to me.
28,Sonar Maxbotix only be used pointing down?,9,"I have a sonar MAXBOTIC i2c that works if I put 25 in the full param list, but I would like to use it as a front sensor to avoid obstacles. However if I put 0 the reading stops and I always get the message “Prearm prx1 no data” *","Yeah, everything you described is the normal operation of it."
29,Copter-4.3.2-rc1 available for beta testing,1,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",*
29,Copter-4.3.2-rc1 available for beta testing,2,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","Is this the same firmware that you linked in the discussion bout the internal error with Leonard? And also, does this firmware include Leonards new controller mechanics? Thanks!"
29,Copter-4.3.2-rc1 available for beta testing,3,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","These appear to be some pretty big changes! I installed RC1 on a brand new EDU-450 build earlier today (before the announcement) and flew a few short tuning flights without significant issue. I’m seeing some yaw realignments that I’d prefer to eliminate, but I’ll chalk that up to calibration for now. It does retain the “disabled channel” bug that apparently has been fixed in master, but that was quite annoying when my LED script caused prearm issues. Might be nice to see that backported."
29,Copter-4.3.2-rc1 available for beta testing,4,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","*, This release is very similar to *.  It includes the fix so that Loiter doesn’t twitch due to main loop slowdowns.  It does not include Leonard’s more complete enhancement that allows the controllers to more accurately handle main loop slowdowns. I think we will discuss at tomorrow’s dev call when we should include Leonard’s more complete fix."
29,Copter-4.3.2-rc1 available for beta testing,5,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","Hi *, Thanks for testing! I’m not aware of the “disabled channel” bug (I’m not tracking it on the *).  I guess * knows about this one?"
29,Copter-4.3.2-rc1 available for beta testing,6,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","I’m waiting for parts for my test rig now but I should get them by the end of the week. I’ll test Leonards firmware as soon as I get into the air again! If you guys come up with something you need to test regarding Leonards firmware on tje dec call, just write here and I can do the tests!"
29,Copter-4.3.2-rc1 available for beta testing,7,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","The specific prearm message is “PreArm: SERVO14_FUNCTION=94 on disabled channel.” * and I had a short Discord conversation about it today, since I thought it may be related to script development. Relevant PR appears to be this one: *"
29,Copter-4.3.2-rc1 available for beta testing,8,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","Ah yes, that one.  Ok, thanks very much for clearing that up."
29,Copter-4.3.2-rc1 available for beta testing,9,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",Hi Why did you change to using 2nd IMU as primary ?
29,Copter-4.3.2-rc1 available for beta testing,10,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",My understanding is that some CubeOranges had some sort of hardware issue that caused the first IMU to reset quite often.  My understanding is that the 1st and 2nd IMUs are both of the same quality so using the 2nd one is a better default choice. I’m afraid I don’t have any information on how many CubeOranges are affected.  I fly them all the time and I haven’t noticed any issues and I haven’t heard of any crashes because of this issue… but I’m really not the expert on this issue. FYI *
29,Copter-4.3.2-rc1 available for beta testing,11,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","Flight Mode 5 is configured to SPORTS but even if the switch is positioned at Flight Mode 5, the current mode says STABILIZED. Please refer to screenshot. And YAPPU is also reporting STABILIZED as the flight mode.  * (19.5 KB)"
29,Copter-4.3.2-rc1 available for beta testing,12,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",I thought Sport Mode was removed. Not surprised it still shows up in Mission Planner.
29,Copter-4.3.2-rc1 available for beta testing,13,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",Well its still there. But it cannot be used. Confusing cause its still in WIKI. I suggest it must also be taken out from WIKI. Was there a replacement for Sports?
29,Copter-4.3.2-rc1 available for beta testing,14,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","No. Nobody used it, removed to save space."
29,Copter-4.3.2-rc1 available for beta testing,15,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","Yup, I’ve already taken it out. Thanks."
29,Copter-4.3.2-rc1 available for beta testing,16,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",I would like to test Throw flight mode in replacement for Sports. Any advice if this is safe and what preparations should be made?
29,Copter-4.3.2-rc1 available for beta testing,17,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",Thanks for the report.  * is right of course although we haven’t completely removed the flight mode but it requires using the * to add it to the firmware.  I’ve added a * to make this clear.
29,Copter-4.3.2-rc1 available for beta testing,18,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","I endeavoured building a custom firmware but never succeeded. Is it possible to say in the builder to copy the firmware of say KAKUTEH7V2 and then the user will just add what they want? This way, it’s safer rather than manually choosing everything. Just a suggestion if possible."
29,Copter-4.3.2-rc1 available for beta testing,19,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","There is a comprehensive Wiki entry for that, it’s not a 4.3.2-rc1 Beta Release question."
29,Copter-4.3.2-rc1 available for beta testing,20,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",I’m hoping this is the fix for a Oscillating issue i reported In Copter during Loiter some time back. Thanks!
29,Copter-4.3.2-rc1 available for beta testing,21,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","It could be, but I’ve seen it is more like a defined twitch and maybe some unsteadiness too… We could hear the motor noise is not quite right too If it’s just the oscillation then it could be reduced or solved by cutting these to about half their default values, starting with reducing the PSC_VELXY_D first to see if that helps. PSC_POSXY_P,0.5 PSC_VELXY_D,0.25 PSC_VELXY_I,0.5 PSC_VELXY_P,1.0"
29,Copter-4.3.2-rc1 available for beta testing,22,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!",Good to know. I got just the copter to test it’s a newer build… I will give the changes you posted a try. I also have VTOL_quicktune now that is helpful in simulations.
29,Copter-4.3.2-rc1 available for beta testing,23,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","Almost all good news: After a few iterations with MagFit along with properly calibrating the battery/current sense values, I have things working quite well with this release candidate. My repeated inflight alignments and EKF warnings have subsided. The new TKOFF parameters work great, as mentioned to * in his thread on the subject. A single run through autotune seemed to improve upon the already useful preload settings from * for this frame. Something to fix? I am getting repeated startup tones on the ESC (Hobbywing XRotor 4-in-1) prior to pushing the safety switch. After hitting the switch, the ESC behaves properly with no issues for flight. Not sure if that’s user error or an errant signal from ArduPilot during prearm checks."
29,Copter-4.3.2-rc1 available for beta testing,24,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","Re the ESC tones, you probably already know but before the safety switch is pushed no PWM signals are sent from the autopilot so many ESCs will beep.  This is all normal but if the beeps are annoying maybe disable the safety switch (BRD_SAFETYENABLE = 0)?"
29,Copter-4.3.2-rc1 available for beta testing,25,"Copter-4.3.2-rc1 is available for beta testing and can be downloaded using MP or QGC’s “Beta firmwares” link.  The change vs 4.3.1 are in the * and copied below.  Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE) uBlox M10 fixes to reliably provide 5hz updates Autopilot specific changes a) CubeOrange defaults to using 2nd IMU as primary b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro Bug fixes a) AutoTune gains loaded correctly during pilot testing b) Camera driver’s CAM_MIN_INTERVAL fix to cope with mission and pilot triggering c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings d) Main loop slowdown after arming fixed (parameter logging was causing delays) e) Main loop’s fast tasks always run (caused twitches in Loiter on heavily loaded CPUs) f) MAVLink commands received on private channels checked for valid target sysid g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly) h) Param reset after firmware load fixed on these boards - BeastF7v2 - CubeYellow-bdshot - f405-MatekAirspeed - FlywooF745Nano - KakuteF4Mini - KakuteF7-bdshot - MatekF405-bdshot - MatekF405-STD - MatekF405-Wing-bdshot - MatekF765-SE - MatekF765-Wing-bdshot i) Siyi A8 gimbal support fixed j) Windows builds move to compiling only 64-bit executables  WARNING: we have a report that the first item (the main loop arming check) may interfere with the * and * features.  This is not dangerous but may be annoying and we may need to drop this arming check for now. Thanks for any help you can provide with testing!","I’ve used a version of this ESC before without the annoying behavior. I’ll dig into its settings a bit and see if I missed something. Otherwise, I’ll either live with it or skip the safety switch as you say."
30,Distance travelled wrong,1,"Hello everyone, I’m trying to get the distance travelled information from my last mission, but unfortunately the log index shows a wrong value, way higher than possible. Unfortunately my drone wasn’t connected to the ground station while operating so i couldn’t analyze Tlogs. Here is the dataflash log, hope you can help me find out what’s the problem! The real distance travelled should be around 7/8 Kms i guess (it was a 10km mission but had to terminate it before ending it). * Thanks a lot in advance",I used MissionPlanner dataflash logs tab to create a GPX file then loaded it in * so this will be including the acro and everything from the start of the flight  You can drill down quite a bit on the track to get distances and info for particular legs
30,Distance travelled wrong,2,"Hello everyone, I’m trying to get the distance travelled information from my last mission, but unfortunately the log index shows a wrong value, way higher than possible. Unfortunately my drone wasn’t connected to the ground station while operating so i couldn’t analyze Tlogs. Here is the dataflash log, hope you can help me find out what’s the problem! The real distance travelled should be around 7/8 Kms i guess (it was a 10km mission but had to terminate it before ending it). * Thanks a lot in advance","That’s amazing, thank you so much!"
30,Distance travelled wrong,3,"Hello everyone, I’m trying to get the distance travelled information from my last mission, but unfortunately the log index shows a wrong value, way higher than possible. Unfortunately my drone wasn’t connected to the ground station while operating so i couldn’t analyze Tlogs. Here is the dataflash log, hope you can help me find out what’s the problem! The real distance travelled should be around 7/8 Kms i guess (it was a 10km mission but had to terminate it before ending it). * Thanks a lot in advance","I took the liberty of using a 3rd party website, they dont seem to upload and keep your file. In MissionPlanner it’s already got a graph for distance from origin, but it’s not total distance traveled unfortunately. And my MissionPlanner seems to be having a day off sick"
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,1,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",I have this FC and have been flying it fine for a while - no issues with arming. I suspect this might be down to your ESCs. What ESCs are they? Can you post your parameters?
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,2,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","Hi Andy, Thanks for getting back to this. I tried to download the log only to find out that the FC is not recording any log at all. So I followed my workaround to arm the quad and hover it a bit but still there is no log that is being recorded. I will get back to you once I figure out how to fix the logging issue. On the ARMING_CHECKS, Logging Available is set. LOG_DISARMED is also set to 1. This FC has been recording logs in the past. This morning when I launch Mission Planner, there was a message that a new version is available and I decided to install the new update. I woudln’t belive that this has cause the issue. We’ll keep on looking. By the way, the ESC is Holybro Tekko32 F4 50A 4in1 ESC running on BLHeli.   ![image|654x119]"
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,3,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Just post the parameter file.
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,4,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","In the BLHELI ESC settings turn OFF Low RPM Power Protect It’s OK to set the Temperature Protection to 90 or 100, but that wont immediately affect flight"
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,5,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","I have that ESC - works fine with my KakuteH7 v2. On the logging, these boards log to flash and it’s possible to corrupt the flash. Try erasing the chip (clear logs in MP or something like that) to get logging back. Post your params - I will be able to double-check if you do."
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,6,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Parameter file attached. * (19.5 KB)
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,7,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Yeah this is a common mistake - if you set SERVO_BLH_MASK you must set SERVO_BLH_OTYPE as well. In your case setting both to 0 is the right thing to do.
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,8,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","I tried setting SERVO_BLH_MASK and SERVO_BLH_OTYPE both to zero (left screen shot) but I still need to implement the workaround to arm the motors. I also tried to set the SERVO_BLH_MASK for motors 1 - 4 and SERVO_BLH_OTYPE = 1 (right screen shot) just for curiosity but it did not make a difference. I really don’t know what the problem with my flight controller is. Is it defective? It is flying well after you arm the motors (almost any flight mode including missions, flips and break). But it’s making me think now that there might be a problem and might not be safe to fly with it. What do you think? The only painful part is I need to always bring a USB Power brick to arm it. Quite embarrassing at the club because people are asking why do you need to do that? Some suggested try betaflight but I have to start from the beginning to learn how to use betaflgiht which is a lot of reading. FYI, Carlou"
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,9,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Not sure if it will make any difference to arming but having variable PWM low and hi the same defeats the purpose of the feature I would think. Low is commonly set… well low. Also you don’t need Auto Telemetry enabled. And not that  it will make any difference but Low RPM Power Protect On will be fine with the kV of the motors you are using. This is only a problem with low kV motors.
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,10,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","I re-uploaded Copter 4.3.1 firmware hoping that it will fix the currupted flash and will be able to record logs again but it did not help. I also tried to clear the logs from MP but it also did not fix the recording of the logs. I assume that this flight controller has a problem. Can you recommend a better flight controller with the same form factor? I thought of replacing this crap flight controller now. Thanks, Carlou"
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,11,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","If I get a chance I will test mine, but got a lot of things going on right now. Nothing wrong with that flight controller."
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,12,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","Hi Dave, What do you mean by PWM Low and Hi. Do I need to change any ESC settings? Kindly advice. I am happy to test even if the chance of solving the problem is small. Regatds, Carlou"
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,13,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",In your ESC settings you posted the image for it shows 96khz for both low and hi PWM. Google “blheli_32 variable pwm” for information. But generally just drag the low setting to minimum. Turn off Auto Telemetry also.
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,14,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","I’ve set the low PWM at its min and has also turn off Auto Telemetry. I’ve also implemented the recommendation of Shawn. It did not fix the arming problem but I feel the throttle response is less jumpy which I like.  This motor arming is really a pain at the back to troubleshoot. If Andy is not experencing it, then its a setup problem on my side that needs to be fixed. But aside from this issue, the quad is really flying awsome. People from my club says first time they saw a quad running on Ardupilot but flies like a racing beast. I cannot comment as this is my first quad. But I have no compalin about how it flies. PERFECT. Just this little arming issue to use a power brick. I think, the logging issue is alrready hopeless."
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,15,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",What’s that music note message on esc 1 there for? And you didn’t have to disable Low RPM Power Protect. Is that the lowest the low pwm will go?
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,16,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","I did not intentionally put that music on ESC 1. I disabled it but it did not help eleviate the problem.  Regarding the Low RPM Power Protect, I tried it based on the recommendation of Shawn just in case this is the root cause. But still no luck."
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,17,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","OK, as I mentioned it can  be an issue with low kV motors which you don’t have.  But no matter, either way no consequence for you. Regarding logging, you could try a total reset by loading Rover and then Copter back on. Save your parameter file before and be prepared for some manual parameter resets after. Loading the saved parameter file once likely won’t get you back. If you want another Flight Controller Matek H743-Slim is a good choice. But, I have had no issues with HolyBro FC’s, have a couple."
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,18,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Whar ESC did you use for the Matek FC. I better use the same that is already tested.
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,19,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Try the BlueJay timing - see if that helps - SERVO_DSHOT_ESC = 2
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,20,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",You mean in my current 4-in-one ESC?
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,21,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Yes. These kinds of arming issue are usually down to dshot/blheli timing problems
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,22,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",I don’t see BlueJay timing. Maybe its not supported. 
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,23,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","No, its an ArduCopter setting"
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,24,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Oh… I will try to locate it. Thanks.
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,25,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","Update on my troubleshooting to get rid of the workaround to arm the motors. I tried to search for the Bluejay timing in the parameter settings but I was not able to find it. I found something in WIKI but it looks like I have to install bluejay firmware to the ESC. I’m a bit worried that the issue might become worst so I did not proceed. What I have done are:   Change the firmware to Betaflight and activated the Compass, Accelerometer and GPS and configured Betaflight until I am able to arm the motors. This is to verify if I have to also implement the workaround in Betaflight to arm the motors. But it turns out that the motors can be armed without implementing the workaround.   Re-flashed the Ardupilot back to the FC but this time, I disabled FENCE and set GPS_TYPE = 0 (Meaning no GPS). To my surprised, I can now arm the motors without implementing the workaround.   So weird why the activation of GPS is impacting the arming of the motors. I hope I was able to give a clue on how to solve this issue as I don’t want to fly without the GPS."
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,26,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",You need to set SERVO_DSHOT_ESC to 1 since you are using blheli_32 ESC as per your blheli screenshot
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,27,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","I tried to set SERVO_DSHOT_ESC to 1 with high hopes that this is the answer to my issue. But after testing for some reason, I still need to implement the workaround to arm the motors. What did the de-activation of the GPS has something to do with the Arming of the motors? Why is it that after I deactivated the GPS, the motors will arm without implementing the workaround? Here’s the latest BIN file * (19.5 KB)"
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,28,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou",Can I have the specs of the motor you are using or you recommend motor? I’m considering replacing the motors.
31,Workaround to Arm KAKUTE H7 V2 Flight Contgroller,29,"Hi, I’ve posted some questions before why the Kakute H7 V2 flight controller takes between 5-10min before you hear the motors play the arming tune. I found that after the FC has acquired GPS Lock for some reason, the motors will not play the Arming tune and you will not be able to ARM the motors even when Fence is not enabled. To make the motors play the arming tune, here’s what I am doing and its been consistent.   Plug the main batteries   Wait until GPS 3D fix lock is acquired.   Plug in a USB back-up power.   Un-plug the main batteries.   Plug in the main batteries - This time the motors will play the arming tune.   * If FENCE is not enabled, then you can already arm the motors and fly, otherwise you have to wait for GPS Home to be acquired. Is this a Kakute FC issue or a program error? I suspected that the supply voltage of the Kakute is below the threshold. Measured it but its 4.6V. To eliminate the double, I installed a 5V BEC but this did not solve the problem. The Quad is uploaded with Copter 4.3.1-rc. The quad has been flying very nice and I am enjoying it. But if the additional steps to make the motors arm can be elimnated, then I don’t have to carry a backup USB Power anymore. Here’s a video of the workaround.      Regards, Carlou","On my 7"" on 6S:  T-Motor F90 2806.5 1300kV or The iFlight XING Motors."
32,Request Advice from Experts for Hexacopter instead of electric motors,1,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",Ic engines are too slow for the application. The vehicle will probably be unstable. But at very least it will be very hard to tune. Are you experienced in tuning large electrical UAVs?
32,Request Advice from Experts for Hexacopter instead of electric motors,2,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","If you want to use IC engines, then look at using them for a generator to power the electric motors, or look at a helicopter/pitch controlled system.  I agree that IC engines will not have the responsiveness needed to fly a fixed pitch multirotor."
32,Request Advice from Experts for Hexacopter instead of electric motors,3,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","There are examples of IC powered multirotors working, I agree these sorts of motors aren’t a great choice compared with electric motors. amazingdiyprojects on YouTube made an octocopter using IC motors. Skip ahead a few minutes to see his amazing death machine in flight.      A flight controller should be able to control IC throttles using servos. Just because it can be done doesn’t mean it’s a good idea."
32,Request Advice from Experts for Hexacopter instead of electric motors,4,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",As * suggests a Hybrid power system would be a much better choice. Search the forum here for “hybrid power” and you will find use cases.
32,Request Advice from Experts for Hexacopter instead of electric motors,5,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",Agreed.  I’ll take my lumps because I didn’t think it could be done.  But after watching that my opinion of it hasn’t changed.  Especially with a person on board… yikes.
32,Request Advice from Experts for Hexacopter instead of electric motors,6,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",That’s called the multi-blade  guillotine.
32,Request Advice from Experts for Hexacopter instead of electric motors,7,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","yes, i am experienced in large electrical UAV and studied the captive power plant with IC engine too, IC engines are slow, however where there is a application where refueling or recharging at destination not possible, i need to in for IC engine based concepts. thanks a lot for advice, keep writing."
32,Request Advice from Experts for Hexacopter instead of electric motors,8,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","yup, hybrid power systems are available, i understand and studied them too., thanks"
32,Request Advice from Experts for Hexacopter instead of electric motors,9,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","any specific flight controller you would like to recommend which has has a servo throttle control for hexacopter , i see most of them focus on driving the ESC then an motor. there are controls for servo and they are used for camera shttuer, drop object, drop landing gear. I am looking something ahead of this."
32,Request Advice from Experts for Hexacopter instead of electric motors,10,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","in particular i need to know how i can configure the pixhawk FC outputs ( motor) to drive servo, i mean all the ouput ( motor) to drive servo for throttle positioning ?  if yes, how can i do ?"
32,Request Advice from Experts for Hexacopter instead of electric motors,11,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",Just configure the outputs to PWM. Typically most servos support that
32,Request Advice from Experts for Hexacopter instead of electric motors,12,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","99% of servos support pwm, you can drive the servos the same exact way you would drive an ESC."
32,Request Advice from Experts for Hexacopter instead of electric motors,13,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","thanks a lot for the reply, I have another query, if i configure the outputs as PWM, would i get the same benefits of a Collective throttle and turning direction algorithms will get implied to Servo ? I would like to know since use the servo for throttle control as for a hexacopter there would be 6 engines, the 6 throttle controls would be used by this servo, however as an FC, the alogorithm applies to Motor interms of RPM, an different RPM for turning for each motor and same rpm for all motors for collective climb up or down.  May please share your experience on this."
32,Request Advice from Experts for Hexacopter instead of electric motors,14,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",IMO you should use closed loop controllers for prop RPM (something that will turn PWM into controlled RPM) not open loop throttle control. Though I think it would be better to use variable pitch propellers at fixed RPM as it would get you the fastest possible response preferably with mechanically coupled rotors as it will prevent violent attitude loss on loss of the motor also better moment of inertia with engine close to CoM.
32,Request Advice from Experts for Hexacopter instead of electric motors,15,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.", this is my high level diagram.         
32,Request Advice from Experts for Hexacopter instead of electric motors,16,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.","i agree lupus, thanks for the response.  Yes, i am pursuing from the start for PLL type of function where the RPM is constantly measured, see attached high level diagram. "
32,Request Advice from Experts for Hexacopter instead of electric motors,17,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",Unfortunately as far as I know no board has support for running 6 RPM governors. Trad-heli supports one IIRC. You would need external governors or use one big engine running fixed RPM with variable pitch.
32,Request Advice from Experts for Hexacopter instead of electric motors,18,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",I don’t think you will find much if any experience because its a bad idea. Why did you post in Arduplane>VTOL ?
32,Request Advice from Experts for Hexacopter instead of electric motors,19,"hi, I am working on a Design of Hexacopter with IC Engines, i would like to understand whether Flight Controllers can be used instead of ESC and Motors then to use only servo to control throttle and get feedback from Engine on the RPM. may kindly advice Flight controller for 6 servo throttle control and input from Engine for RPM.",Arducopter supports that. Check out Heliquad.
33,Flip flight mode,1,"At the end of the flip, the copter will climb. Is it possible to control how much the copter rises during the climb (increase or decrease the climb distance depending on a parameter)?","*, I’m afraid not.  Flip simply increases the throttle by 20% and this percentage is not configurable… "
33,Flip flight mode,2,"At the end of the flip, the copter will climb. Is it possible to control how much the copter rises during the climb (increase or decrease the climb distance depending on a parameter)?",Is it possible to request it to be configurable on a future release?
33,Flip flight mode,3,"At the end of the flip, the copter will climb. Is it possible to control how much the copter rises during the climb (increase or decrease the climb distance depending on a parameter)?","Yes, enhancement requests can be added by anyone (with a GitHub login) to *.  We can’t promise when it will be implemented though because each developer decides what they want to work on and the list of to-do items is always growing."
33,Flip flight mode,4,"At the end of the flip, the copter will climb. Is it possible to control how much the copter rises during the climb (increase or decrease the climb distance depending on a parameter)?",IMO it qualifies as a good first issue. Though I would add sanity checks on the parameter.
34,Copter-4.3.0 released!,1,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.",*
34,Copter-4.3.0 released!,2,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.",Hi * i have contacted benewake for H30 radar but they said we don’t have such sensor like this. Do you have any data sheets or purchase link where it will be available ?
34,Copter-4.3.0 released!,3,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","Hi *, Perhaps there was some miscommunication somewhere so I’ve asked * if he can clarify (*)"
34,Copter-4.3.0 released!,4,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.",I’ve been scouring web😂
34,Copter-4.3.0 released!,5,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","*, *, I checked with Benewake and they say that the H30 hasn’t completed certification yet so it isn’t on sale yet… so I guess it will be a couple more months. -Randy"
34,Copter-4.3.0 released!,6,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.",What is this new > “Motors spin underscore on higher than spin underscore min” speech that now won’t allow me to arm my craft?
34,Copter-4.3.0 released!,7,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.",What’s the actual error message?
34,Copter-4.3.0 released!,8,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.",Something is wrong with your MOT_SPIN_ARM and MOT_SPIN_MIN values.  Likely the min value is less than the arm value.  ARM should be less than MIN.  This has always been the case but now it’s part of the arming checks.  See item 7-r above.
34,Copter-4.3.0 released!,9,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","Yes, thanks. Went on the Ardupilot fb forum and said the same thing. So MOT_SPIN_ARM became from 0.08 to 0.03 and MOT_SPIN_MIN became 0.03 to 0.08, it worked without really understanding these 2 setting values."
34,Copter-4.3.0 released!,10,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","Hello, Does the “–enable-opendroneid” is enabled in this release? Regards,"
34,Copter-4.3.0 released!,11,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.",RemoteId support is included in 4.3.  You’ll need to compile your own firmware though as described in the video on *.  Support isn’t included by default because the US regulations include a “tamper resistant” requirement which means some additional configuration is required.
34,Copter-4.3.0 released!,12,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","I got an internal error after updating to 4.3.0, flow of control Maybe you * could take a look, you seem to know alot ablut the firmware changes. My craft flew fine on 4.2.x"
34,Copter-4.3.0 released!,13,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","*, I may be doing something incorrectly, but 4.3 seems to not update the S-Bus output when commanded by the Herelink.  We use the S-Bus to control a Gremsy gimbal angle.  I used an O-Scope to look at the S-Bus data stream, and none of the PWM channels change when the scroll wheel is used, or the joy sticks are manipulated.  I don’t think it is a Herelink problem, because when I downgraded the cube to 4.1.5 (our latest tested version) the S-Bus performs properly with channels changing based on inputs.  Is there some parameter you need to set for the S-Bus signals from the Orange Cube to mirror the RC control inputs?  I posted in the developer channel, but I don’t seem to be getting any traction.  We were planning to go into production shortly and need to get the S-Bus issue resolved.  Thank you!"
34,Copter-4.3.0 released!,14,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","OK, I’ve added it to *. I suspect you don’t want to change the setup close to production but in case you didn’t see it we have an improve *."
34,Copter-4.3.0 released!,15,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","* , Possibly loosely related to Bridgerman’s finding, after upgrading to 4.3 from 4.1.5, I am receiving the following prearm error: RNGFND1_PIN=103, set SERVO3_FUNCTION=-1. Pin 103 is of course the SBUS port, which I’m using to read an analog ultrasonic rangefinder - this works fine in 4.1.5, and the sensor data is being read correctly* in 4.3.  Servo 3 is the third motor on the quadrotor, so obviously disabling that wouldn’t be good, haha. Thanks! Regards, -Luke *Edit: while data is being read, the reported ranges are not correct in 4.3, and were in 4.1.5; going to roll back to 4.1.5, to see if it’s just a coincidental hardware issue, or something else.  Should have mentioned, this is on an Orange Cube. **Confirmed that rolling back to 4.1.5 produces normal/correct rangefinder values (calculated range and voltage)."
34,Copter-4.3.0 released!,16,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","I have a downward-facing LW20C rangefinder, I like to know what can this new param * help me with. I also like to know how critical the * setting is."
34,Copter-4.3.0 released!,17,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","When I load 4.2.3 params onto a 4.3.0 drone, I get this error in MP: Is this something I should worry about? I set up a notch filter in 4.2.3 but do I have to do it again?"
34,Copter-4.3.0 released!,18,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","They were not found because the default for INS_HNTCH_ENABLE is 0. If you were to enable it 1st, which will then load all the optional parameters, and then load the 4.2.3 file you wouldn’t see that. I rarely load a parameter file for any reason. But if you do then go thru the Full Parameter list and make sure everything is right."
34,Copter-4.3.0 released!,19,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","Okay, so basically it is a quirk of MP. One would think that to load params from a file, you would enable the “parent” params first and then set the “children” params that were dependent on those. As it is, after loading the params I see the “INS_HNTCH_ENABLE” is set to 1 (the box is filled in green) but “INS_HNTCH_ATT” etc do not exist."
34,Copter-4.3.0 released!,20,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","Right. Refresh parameters and then try again if you want to load the file.  A long time ago before there were Main and sub-parameters this issue, if you want to call it that,  didn’t exist  I suppose the “load from file” routine would have to be revised to load it once, refresh parameters and load it again within one function. Perhaps there is a down side to that but not immediately seeing it."
34,Copter-4.3.0 released!,21,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","We fixed a bug with the RSSI pin voltage scaleing, it’s voltage was reported 3 times too big. You will have to divide your set offsets by three and scale factor times by three for it to come good again. (if you have linear or inverted scaling type, hyperbola you would divide the scale by three) This is the PR: The pre-arm is a bug because we have a two pin 103’s. One it a analogue input (the one your using), the other is a digital output shared with main 3 that would be conflicting. We should have a fix for the next release."
34,Copter-4.3.0 released!,22,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","So this is a bug in the prearm logic, not an actual hardware conflict?  If so, is there a workaround, or should I just avoid using the pin 103 analog input for the time-being?"
34,Copter-4.3.0 released!,23,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","Correct, just a bug in the pre-arm. Fix here: Unfortunately the only way to get past is to turn off arming checks, which is not a good idea. As you say you could swap to another pin, or wait for the fix to make it into the next release. Sorry."
34,Copter-4.3.0 released!,24,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.","No worries, I agree, arming checks stay on.  I just picked up a little serial LIDAR, so this just is the nudge I needed to get that wired in, it’s all good!"
34,Copter-4.3.0 released!,25,"After months of beta testing Copter-4.3.0 has been released as the official (e.g. default) firmware for multicopters and helicopters. If upgrading from an earlier firmware version there should be no need to backup and restore parameters.  This should all be done automatically. The full list of changes are in the * and copied below. Changes from 4.2.3  New autopilot support and autopilot specific enhancements a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M, SkystarsH7HD-bdshot i) AIRLink autopilot supports UART2 j) CUAV V6X supports CAN battery monitor by default k) MatekF405-CAN board uses less memory to fix compass calibration issues l) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space m) SkystarsH7HD supports VTX power by default n) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs d) EKF3 altitude error fix when using dual GPSs and affinity enabled e) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch f) Notch filter slew limit reduces chance of notch freq moving incorrectly RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes r) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Scripting enhancements and fixes a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) f) Scripting support for multi-byte i2c reads g) Scripting supports implementing AUX functions h) Scripting random number generator fix Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Other minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height k) DO_JUMP mission command fixed if active command changed before changing to Auto mode l) FFT indexing bug fixed m) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) n) MSP fix to report arm status to DJI FPV goggles o) Notch fix for non-throttle notch (was being incorrectly disabled) p) OSD fixes for params, font and resolution q) RPM reporting from harmonic notch fixed r) “Sending unknown message (50)” warning removed s) SBF/GSOF/NOVA GPS auto detction of baud rate fixed t) VideoTX fixes for buffer overruns and Tramp video transmitter support u) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) v) BRD_SAFETY_MASK fix for enabling outputs when safety is on w) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) x) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm) y) BMI085 accel scaling fixed z) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous aa) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt g) Build with gcc 11.3 fixed (developer only)  Thanks very much to all the developers and beta testers who contributed to this release! If you find any issues please feel free to create a new topic and if possible include an onboard log file.",Sorry for taking so long to investigate this but I’ve confirmed that at a basic level at least the SBUS output on a CubeOrange is working.  The way I tested was to:  connected the CubeOrange’s SBUSo port to the RCIN port set BRD_SBUS_OUT = 1 (50hz) rebooted the autopilot re-connected with MP and check the Data screen’s Messages tab and saw “RCInput: decoding SBUS(1)”  This last message means that the autopilot is receiving a valid SBUS input which means that the SBUS output is also valid. I then turned on MP’s live graphing of “ch10in” and used MP’s Servo/Relay tab to channel the Ch10 output (which is fed back in as ch10 input) and again it seems OK. My guess is that the problem is the SERVOx_FUNCTION for the SBUS channels that you’re trying to feed into the Gremsy gimbal.  I suspect if you use MP’s tuning screen and try to graph the servo output (e.g. “ch10out”) you’ll find that they’re also not moving with the RC input.  So the issue is not actually the SBUS output but the way the servo output is configured. Could you provide an onboard log?
35,Slow Parameter Loading in 4.3,1,"After updating a few flight controllers that were running ArduCopter 4.2.X to the latest 4.3.1, the initial GCS connection and loading of parameters takes much longer than usual. I am connected directly via USB cable on baud 115200, which would take around 5 seconds to load on 4.2.X versions, but now takes up to two minutes on Mission Planner and seems to outright give-up on QGroundControl (it returns a “Vehicle 1 did not respond to request for parameters” message). On Mission Planner I have been able to work around by connecting, waiting until it begins loading parameters, pressing “cancel”, and then navigating to the Config > Full Parameter Tree and pressing “Retry now” or “refresh” if some parameters already loaded. Then it takes only a few seconds to load all of the parameters. I am using a version of Mission Planner from within the last month and using the latest QGroundControl on mobile.","I have not experienced that, maybe just do the MissionPlanner beta updates?? Do you have one of the “ENABLE” parameters on a RC switch or in LUA scripting? This came up recently: * In the release notes there’s only this: “Log download speed improved for boards with “block” backends”"
35,Slow Parameter Loading in 4.3,2,"After updating a few flight controllers that were running ArduCopter 4.2.X to the latest 4.3.1, the initial GCS connection and loading of parameters takes much longer than usual. I am connected directly via USB cable on baud 115200, which would take around 5 seconds to load on 4.2.X versions, but now takes up to two minutes on Mission Planner and seems to outright give-up on QGroundControl (it returns a “Vehicle 1 did not respond to request for parameters” message). On Mission Planner I have been able to work around by connecting, waiting until it begins loading parameters, pressing “cancel”, and then navigating to the Config > Full Parameter Tree and pressing “Retry now” or “refresh” if some parameters already loaded. Then it takes only a few seconds to load all of the parameters. I am using a version of Mission Planner from within the last month and using the latest QGroundControl on mobile.","Interesting, but no, I only have an RC switch set to 19 (gripper) and another to 153 (arm/disarm).  After updating to 4.3.1, I did add the gripper RC switch option, but I’m not sure how that would cause the slow loading. I will try with it removed anyways and then followup. I am more concerned that the issue also seems to be happening on QGroundControl, but because it refuses to load all of the parameters, all of the available vehicle settings are completely missing. This effectively makes it unusable. Maybe this is due to a difference in how QGC handles waiting for a response / timeout. Could this be an issue with how the parameters are saved, or the flight controller bootloader or flash memory?"
35,Slow Parameter Loading in 4.3,3,"After updating a few flight controllers that were running ArduCopter 4.2.X to the latest 4.3.1, the initial GCS connection and loading of parameters takes much longer than usual. I am connected directly via USB cable on baud 115200, which would take around 5 seconds to load on 4.2.X versions, but now takes up to two minutes on Mission Planner and seems to outright give-up on QGroundControl (it returns a “Vehicle 1 did not respond to request for parameters” message). On Mission Planner I have been able to work around by connecting, waiting until it begins loading parameters, pressing “cancel”, and then navigating to the Config > Full Parameter Tree and pressing “Retry now” or “refresh” if some parameters already loaded. Then it takes only a few seconds to load all of the parameters. I am using a version of Mission Planner from within the last month and using the latest QGroundControl on mobile.","Could it be an Antivirus/antimalware issue on the computer you are using? I’ve not noticed this issue with any recent firmware versions and there’s no similar reports. I’m not saying it’s not a real issue, but I can’t see it being common."
35,Slow Parameter Loading in 4.3,4,"After updating a few flight controllers that were running ArduCopter 4.2.X to the latest 4.3.1, the initial GCS connection and loading of parameters takes much longer than usual. I am connected directly via USB cable on baud 115200, which would take around 5 seconds to load on 4.2.X versions, but now takes up to two minutes on Mission Planner and seems to outright give-up on QGroundControl (it returns a “Vehicle 1 did not respond to request for parameters” message). On Mission Planner I have been able to work around by connecting, waiting until it begins loading parameters, pressing “cancel”, and then navigating to the Config > Full Parameter Tree and pressing “Retry now” or “refresh” if some parameters already loaded. Then it takes only a few seconds to load all of the parameters. I am using a version of Mission Planner from within the last month and using the latest QGroundControl on mobile.","I downgraded back to 4.2.3 and parameters loaded without issue again so I don’t think it is antivirus or anything like that. You’re right in that it may be specific to this setup, unfortunately. For context: I am using the Pixracer flight controller. I discovered that part of the issue with QGroundControl was that I had installed an outdated version (4.1.1) from the app store for Android. On QGC’s downloads page they list it as being “temporarily unavailable” on the app store, so I downloaded the APK directly from there and it is now the most recent version (4.2.4). I can get the flight controller to connect quickly on APM 4.2.3 and QGC 4.2.4. I now also have the latest version of Mission Planner, with same behavior as before."
35,Slow Parameter Loading in 4.3,5,"After updating a few flight controllers that were running ArduCopter 4.2.X to the latest 4.3.1, the initial GCS connection and loading of parameters takes much longer than usual. I am connected directly via USB cable on baud 115200, which would take around 5 seconds to load on 4.2.X versions, but now takes up to two minutes on Mission Planner and seems to outright give-up on QGroundControl (it returns a “Vehicle 1 did not respond to request for parameters” message). On Mission Planner I have been able to work around by connecting, waiting until it begins loading parameters, pressing “cancel”, and then navigating to the Config > Full Parameter Tree and pressing “Retry now” or “refresh” if some parameters already loaded. Then it takes only a few seconds to load all of the parameters. I am using a version of Mission Planner from within the last month and using the latest QGroundControl on mobile.","*, My guess is that MAVFTP cannot be used because the board is running low on RAM.  Could you provide an onboard log of 4.2 and 4.3 if possible? I’ve added this to the *. EDIT: I tested with my own Pixracer using Copter-4.3.2 with a gripper enabled and the parameter download using a USB cable was extremely quick.  This doesn’t mean that there isn’t a problem, it just means that I couldn’t reproduce it.  An onboard log might help us narrow down on what the issue is."
36,Copter low thrust help,1,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?",Not enough information. Questions: What 930kv motors Prop size and pitch Take-off-weight (incl battery)
36,Copter low thrust help,2,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?",motors: GARTT 2CW 2CCW ML2212S 920KV props: 1045 weight: 1300~900g
36,Copter low thrust help,3,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","OK, ~1kg would be about right for that kit of hardware on 3S but it should lift off at 1.3kg. You wouldn’t want to fly at that weight though. Attach a link to a .bin flight log of a take off attempt."
36,Copter low thrust help,4,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","* There are tweo files only one armed, sorry I don’t know which one, haven’t learned to read this yet. I suppose the heavier file is the one that armed."
36,Copter low thrust help,5,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","1045 props should work for that but something isn’t happy.  Motor 3 is hitting max so even on 3S that quad should be moving.  There’s also some high vibrations but if the quad is bouncing on the ground that could be misleading information. There’s a bias to the right side of the quad, like it’s leaning to the right.  Was the quad level when you started? Some things to check:  Are the props installed in the right places? Is all the hardware tight? How is the flight controller mounted?  Is it secured or is it moving?  Has it been moved on the airframe since you did the initial calibrations? Are all the arms secured?  You weren’t tethering the drone?"
36,Copter low thrust help,6,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","Yes the props are on the correct side inverted from one another. Well, the drone is ~30g heavier on the right side and the floor is like 5 degrees to the right also. The controller is at the front center, and everything is very tight. No thether, it only hopped/stumble around a 100cm area at most. The controller was not attached to the drone at the moment of calibrating."
36,Copter low thrust help,7,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?",Did you use the motor test in Mission Planner to verify the motor spin direction?
36,Copter low thrust help,8,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","Yes, I also used it to see the dead zone of the esc."
36,Copter low thrust help,9,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","A couple observations. You have Dshot configured but on a Cube Orange Dshot must be assigned to the Aux outputs. You have them on the main outputs. Also, you have MOT_SPIN_ARM higher than MOT_SPIN_MIN. This is incorrect. And where did you come up with these? PSC_ACCZ_I,1.08 PSC_ACCZ_P,0.54"
36,Copter low thrust help,10,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","Wow didn’t know that, and kinda smells that it could be it! let me reconfigure and I’ll let you know tomorrow. Here in Europe is very late, thanks for your help so far. No f**ing clue about those, honestly I don’t even remember them. Should I set them to 0?"
36,Copter low thrust help,11,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","Ha, no. If you don’t know you should set everything back to default (start over) and then re-calibrate,  re-run the Initial Parameter Setup and assign the motors to the Aux outputs. That would be baseline. Then you would setup to configure the dynamic notch filter because that’s the next step assuming it lifts off the ground. What ESC’s are they because there are other parameters to set or potentially a different firmware to flash."
36,Copter low thrust help,12,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?",This might help:
36,Copter low thrust help,13,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","Ok so I did not go to bed, rearranged the cables to aux 1234 to their corresponding escs, and set default everything. Re calibrated things, chose servos 9 10 11 12 as motors, disabled the safetyswitch to arm to 0 AND the esc beeps constantly when un-armed after arming they spin and seem to have power, but as soon as I disarm it beeps all the time like 1 time per second. Also how do I tun off mission planner audio warnings?"
36,Copter low thrust help,14,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?",This is normal operation… it is simply your ESCs complaining about lack of PWM signal… It is under Settings → Planner if I am not mistaken.
36,Copter low thrust help,15,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","Yea, I would like to do the same for the esc beeps."
36,Copter low thrust help,16,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","To stop the ESCs beeping when not armed set this: MOT_SAFE_DISARM,0"
36,Copter low thrust help,17,"Hi, I have an orange cube on a 4 rotor with dshot esc with a 3s battery. According to the motor’s specs 930kv and esc specs of 35A everything should work. I already calibrated everything but the copter doesn’t want to liftoff, at most I only get jumps or hops. Any idea?","Cool, I think one thing is setting up the Fc armed and having the beeps start after a few minutes. So we need a target like turn off ECS beep after armed."
37,No Terrain data mode change to RTL,1,AC 4.3.1 TF02 pro configured for downward facing for terrain follow. RNGFND_ MAX = 2500 I have created waypoint height as a terrain .all waypoint height set was 50m. In auto mode after reached 20+ m height mission planner says “terrain data missing mode changed to RTL” I suspect that after range finder data missing it changed to RTL… Can’t it use SRTM data which provide by mission planner for terrain information.it relay only on Rangefinder?,"* You are saying to ardupilot system that your rangefinder can only have reliable readings upon 25 meters and sending your drone to 50 meters of height, so in this case, when your drone reaches 25 meters, ardupilot will change to RTL responding to a terrain failsafe… so it is all expected behaviours. * I don’t know if it is possible to have a “hybrid” configuration like this, ie, reading rangefinder inputs upon some height and then transitioning to SRTM… * any thoughts about it? I know that some paid GCSs has some Software processing on the terrain maps prior to send a mission to the drone, so it can calculate relative heights that compensate for accidented terrains… just an idea."
37,No Terrain data mode change to RTL,2,AC 4.3.1 TF02 pro configured for downward facing for terrain follow. RNGFND_ MAX = 2500 I have created waypoint height as a terrain .all waypoint height set was 50m. In auto mode after reached 20+ m height mission planner says “terrain data missing mode changed to RTL” I suspect that after range finder data missing it changed to RTL… Can’t it use SRTM data which provide by mission planner for terrain information.it relay only on Rangefinder?,"*, *, I’m afraid that AP does not have a hybrid method (aka terrain database + rangefinder) although it has been brought up before (*).  It’s actually not that easy to mix them because they can quite easily be 20m apart because the terrain database doesn’t include trees or buildings while a rangefinder will see these."
37,No Terrain data mode change to RTL,3,AC 4.3.1 TF02 pro configured for downward facing for terrain follow. RNGFND_ MAX = 2500 I have created waypoint height as a terrain .all waypoint height set was 50m. In auto mode after reached 20+ m height mission planner says “terrain data missing mode changed to RTL” I suspect that after range finder data missing it changed to RTL… Can’t it use SRTM data which provide by mission planner for terrain information.it relay only on Rangefinder?,* So if i want fly the drone over big mountain at an altitude of 400m AGL with terrain altitude method I shouldn’t use down facing lidar since any way it doesn’t meet that height requirements for terrain to be follow. AP can’t use the hybrid terrain method then there is no use of down facing lidar.
37,No Terrain data mode change to RTL,4,AC 4.3.1 TF02 pro configured for downward facing for terrain follow. RNGFND_ MAX = 2500 I have created waypoint height as a terrain .all waypoint height set was 50m. In auto mode after reached 20+ m height mission planner says “terrain data missing mode changed to RTL” I suspect that after range finder data missing it changed to RTL… Can’t it use SRTM data which provide by mission planner for terrain information.it relay only on Rangefinder?,thanks * for the clarification!
37,No Terrain data mode change to RTL,5,AC 4.3.1 TF02 pro configured for downward facing for terrain follow. RNGFND_ MAX = 2500 I have created waypoint height as a terrain .all waypoint height set was 50m. In auto mode after reached 20+ m height mission planner says “terrain data missing mode changed to RTL” I suspect that after range finder data missing it changed to RTL… Can’t it use SRTM data which provide by mission planner for terrain information.it relay only on Rangefinder?,"If I am not mistaken, when you use a downfacing rangefinder, it can be used to aid in the final portion of the Land, but I don’t know if this is that valuable for you… maybe just in the case you have to land in other place than home and there is a huge barometric discrepancy between home and actual land point."
37,No Terrain data mode change to RTL,6,AC 4.3.1 TF02 pro configured for downward facing for terrain follow. RNGFND_ MAX = 2500 I have created waypoint height as a terrain .all waypoint height set was 50m. In auto mode after reached 20+ m height mission planner says “terrain data missing mode changed to RTL” I suspect that after range finder data missing it changed to RTL… Can’t it use SRTM data which provide by mission planner for terrain information.it relay only on Rangefinder?,"Yes, that’s right.  For missions using terrain altitudes, you can force them to use the terrain database (and not the rangefinder) by setting WPNAV_RFND_USE = 0.  This could allow you to leave the rangefinder attached in case you wanted to use it for other things."
38,Drone experiences extreme delay when letting off on joysticks,1,"I’ve been noticing some weird behavior lately when flying in loiter mode. The issue is that there is sometimes up to a 3 second delay between letting off on the joystick and when the drone responds. It consistently seems to appear when the drone is unable to reach its desired target speed for an extended length of time. This is exaggerated when flying into a headwind which seems to make it even more apparent. It can be forced by limiting the max angle to say 10 degrees, but setting the max loiter speed to say 30 m/s. With these settings the drone will never be able to reach the max loiter speed and might top out at around 10 m/s or so. If it’s held at 10 m/s with a target speed of 30 m/s and then I let off on the joystick, it’ll take some amount of time for the drone to respond that is longer than normal.  It almost seems like an I term issue in the PID loop somewhere but I haven’t been able to make any changes that seem to have any improvement. I’ve adjusted the PSC_VELXY_P,I,D terms as well as the LOIT_ACC_MAX, LOIT_BRK_ACCEL, and LOIT_BRK_DELAY and haven’t noticed any changes in the behavior. I’ve attached a log that shows this behavior at around 733 Seconds. If you display the pitch angle of the drone and RC2 input it will be noticeable. * Log: *","Disable EKF 2 if there’s no very special reason to use it. EK2_ENABLE,0 I would use the Initial Parameters section of MissionPlanner to set all of the battery voltage levels correctly and these BATT_FS_CRT_ACT,1 BATT_FS_LOW_ACT,2 Also Use Initial Parameters to set your gyro and filter frequencies - basically accept everything it offers except maybe your existing ATC_ACCEL values. These are the Loiter values I use, works out well for most multirotors, cant say for sure for a tricopter though LOIT_ACC_MAX,600 LOIT_ANG_MAX,30 LOIT_BRK_ACCEL,300 LOIT_BRK_DELAY,0.3 LOIT_BRK_JERK,300 and PSC_VELXY_D would normally be around 0.25 to 0.5 Tuning is bit of an issue, not too bad, but could be a bit better. I think most of the “delay” issues you see are because of the copter not able to react as you expect. Generally it is doing its best to follow RC inputs. Start with these FFT_MINHZ,30 FFT_MAXHZ,250 INS_ACCEL_FILTER,10 INS_FAST_SAMPLE,7 INS_HNTCH_ENABLE,1 ← set this then refresh params to see the rest INS_HNTCH_MODE=4 INS_HNTCH_REF=1 INS_HNTCH_FREQ=60 INS_HNTCH_BW=30 INS_HNTCH_OPTS=2 INS_LOG_BAT_MASK,1 INS_LOG_BAT_OPT,4 Can you do another test flight in AltHold with mostly just hover and a few gentle movements, nothing too radical ? Let’s see that log and make some more corrections. The PIDs look a bit manually tuned, which is good when they work. I think Autotune could do a very good job on pitch and roll after we nail down a few more things. Yaw might need a manual tune for this copter."
39,CAM versus TRIG messages in wiki reversed?,1,I’m setting up a camera with a hot shoe. When I used the Mission Planner geotag utility before - without a hot shoe - I seem tor recall that it was using CAM messages from the log. Maybe I have that wrong. The wiki says that the default message for camera shutter events is a TRIG message.  And it says that CAM messages are recorded when a hot shoe signal is detected. It’s quite possible that I simply misunderstood all this when I was working through it over a year ago. But if my memory is correct - does the wiki perhaps have the function of TRIG and CAM reversed? *,"You can evaluate it enabling your LOG_DISARMED parameter and sending some camera commands with the camera feedback connected, and then disconnected and analyzing the log. It was a long long time ago the last time I used a camera with drones, but from what I remember, the wiki was correct, despite of the log messages convention not being much easy to remember."
39,CAM versus TRIG messages in wiki reversed?,2,I’m setting up a camera with a hot shoe. When I used the Mission Planner geotag utility before - without a hot shoe - I seem tor recall that it was using CAM messages from the log. Maybe I have that wrong. The wiki says that the default message for camera shutter events is a TRIG message.  And it says that CAM messages are recorded when a hot shoe signal is detected. It’s quite possible that I simply misunderstood all this when I was working through it over a year ago. But if my memory is correct - does the wiki perhaps have the function of TRIG and CAM reversed? *,"I conducted the test as you suggested today. It appears that CAM messages are logged with or without the hot-shoe active. When you do the Mission Planner geo-tag process with a BIN file where the hot-shoe was used, the “pre-process” step where the number of messages and images are compared says that CAM messages have been applied to the images. At this point, nothing has been added to the EXIF on the images, but supporting files such as the location.csv file get created - with location data. When doing the final step of applying the geotags, the new “geo-tagged” directory is created, and the GPS location is saved in the EXIF files of those images. What I can’t tell is if both CAM and TRIG messages are recorded.  The GPS location stored in the location.csv file is likely the TRIG captured locations - as it would be more accurate. Lots of tricky little details to sort out."
39,CAM versus TRIG messages in wiki reversed?,3,I’m setting up a camera with a hot shoe. When I used the Mission Planner geotag utility before - without a hot shoe - I seem tor recall that it was using CAM messages from the log. Maybe I have that wrong. The wiki says that the default message for camera shutter events is a TRIG message.  And it says that CAM messages are recorded when a hot shoe signal is detected. It’s quite possible that I simply misunderstood all this when I was working through it over a year ago. But if my memory is correct - does the wiki perhaps have the function of TRIG and CAM reversed? *,Open your logs at * and check it out.
39,CAM versus TRIG messages in wiki reversed?,4,I’m setting up a camera with a hot shoe. When I used the Mission Planner geotag utility before - without a hot shoe - I seem tor recall that it was using CAM messages from the log. Maybe I have that wrong. The wiki says that the default message for camera shutter events is a TRIG message.  And it says that CAM messages are recorded when a hot shoe signal is detected. It’s quite possible that I simply misunderstood all this when I was working through it over a year ago. But if my memory is correct - does the wiki perhaps have the function of TRIG and CAM reversed? *,Good idea - thanks! I’ll do that today.
39,CAM versus TRIG messages in wiki reversed?,5,I’m setting up a camera with a hot shoe. When I used the Mission Planner geotag utility before - without a hot shoe - I seem tor recall that it was using CAM messages from the log. Maybe I have that wrong. The wiki says that the default message for camera shutter events is a TRIG message.  And it says that CAM messages are recorded when a hot shoe signal is detected. It’s quite possible that I simply misunderstood all this when I was working through it over a year ago. But if my memory is correct - does the wiki perhaps have the function of TRIG and CAM reversed? *,"For some reason * isn’t cooperating for me.  It did display some messages once - not sure why that one time worked. The messages however are the same ones displayed by MavExplorer - which doesn’t include CAM (or TRIG) messages. I suspect both CAM and TRIG messages are captured when using a hot-shoe input.  The reason I suspect that is because when you Trigger Message, and Pre-process - the output shows CAM messages are used. In this pre-processing, Mission Planner makes the supporting files -  but does not create the directory of the geo-tagged image files. The file location.csv does have the geotag data in it - I can only guess it’s using data from CAM messages. Once you do the GeoTag Images function, the new directory is created with the geotagged version of the image files. Once I actually fly a real test mission, I should be able to see if there is a difference between the CAM and TRIG geotags by comparing the gps locations in the location.csv file and the gps location in the EXIF of the geotagged images. I know this is all more than you may be interested in - but I’ve included it here for the benefit of others that might be doing a search on this topic."
40,Real-time Plotting of Rate Achieved vs. Desired Values,1,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke","Well…  Now I feel a bit stupid.  Rereading documentation and doing a bit of testing, the PID message is for the rate loops.  I don’t know why I thought it was for attitude; got my wires crossed there. Obviously, the logical follow-up question is can I do the exact same plot except for the attitude setpoints?  (i.e. I tune the inner/rate loops, now I want to tune the outer/attitude loops?)  Again, I see the achieved vs. desired attitude variables in the onboard logs - are those downlinked?"
40,Real-time Plotting of Rate Achieved vs. Desired Values,2,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke","Hopefully this isn’t rude, but by way of a bump, I’ll try and clarify my question: Is there a MAVLink message that is currently implemented in Arducopter that includes the equivalent data to the DataFlash log parameters ATT.DesRoll, ATT.DesPitch, ATT.DesYaw? Edited, I keep asking dumb questions - obviously, the pitch/roll/yaw is downlinked, but still interested in the setpoint values (and any means to plot them in real time, using MP, QGCS, et al.)"
40,Real-time Plotting of Rate Achieved vs. Desired Values,3,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke","Ah.  After going line-by-line through the MAVLink Inspector list, I realized that the attitude setpoints are contained in NAV_CONTROLLER_OUTPUT. This will definitely help next time I’m tuning - not being able to look at comparisons of setpoints vs. actuals without landing and pulling logs was a significant drawback, coming from Paparazzi."
40,Real-time Plotting of Rate Achieved vs. Desired Values,4,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke",Mission Planner offers exactly the functionality you desire via GCS_PID_MASK and the tuning function on the main tab.
40,Real-time Plotting of Rate Achieved vs. Desired Values,5,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke","But isn’t the GCS_PID_MASK only to tune the rate loops?  Is there a bit/parameter to switch it over to attitude? (Per the edit in the first message, I thought it was the other way around, and unfortunately, I can’t edit the thread title.)"
40,Real-time Plotting of Rate Achieved vs. Desired Values,6,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke",In Mission Planner you select Tuning on the map area  Then you double-click on the resulting graph and there’s many things to select including basic attitude and PIDs  
40,Real-time Plotting of Rate Achieved vs. Desired Values,7,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke","Yes, I’m well aware, and in fact, the attitude setpoints are in that list, but not under PIDs, but instead under nav_pitch, nav_roll, nav_bearing. Per the MAVLink documentation (and verified by test) the GCS_PID messages only display rate-loop-related values, and I was not able to find any references to being able to switch that."
40,Real-time Plotting of Rate Achieved vs. Desired Values,8,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke",Luke you are correct that feature is missing. Care to do a GitHub pull request? Ps are you aware of our work in system identification? *
40,Real-time Plotting of Rate Achieved vs. Desired Values,9,"Hello all, I feel like I must be missing the forest for the trees here, but is there an existing MAVLink message that contains the desired attitude rates?  I’d like to be able to do real-time plots (via MAVLink Inspector in QGC) of the achieved vs. desired values, for tuning the inner loops - the GCS_PID_MASK parameter only handles the attitude loops, if I’m not mistaken? Alternatively, how are people tuning the rate loops, other than using the autotuner?  Fly, step inputs, shut down, pull/review logs, repeat? Thanks! Regards, -Luke","Sure, I’ll write something up, though end of the day, the nav controller messages do provide the basic functionality I was looking for.  I’ll definitely take a look at the system ID work."
41,BRD_SAFETY_MASK which outputs are which?,1,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?","indeed, Blacks 1-8 Whites 9-14"
41,BRD_SAFETY_MASK which outputs are which?,2,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?","I don’t think BRD_SAFETY_MASK works the way you would like it to work.  BRD:SAFETY_MASK: A bitmask which controls what outputs can move while the safety switch has not been pressed  If you include your landing gear channel in this bitmask, landing gear movement would be enabled before the safety switch has been pressed."
41,BRD_SAFETY_MASK which outputs are which?,3,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?","Thinking about it a bit more, I’m not sure there is a way to disable Copter landing gear (disarmed) without scripting. I hope someone proves me wrong. I can envision a script that would not only prevent landing gear movement while disarmed but also assert a prearm flag to prevent arming with the gear switch up."
41,BRD_SAFETY_MASK which outputs are which?,4,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?",It sounds like you’ve got a PR ready to go Yuri 
41,BRD_SAFETY_MASK which outputs are which?,5,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?","Would you (or the community) like a native feature like that? Worth submitting a PR to the source code rather than using a script? I don’t have anything written, but I can’t imagine it would be difficult via script or C++."
41,BRD_SAFETY_MASK which outputs are which?,6,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?","A real PR is beyond my programming skills, but I can follow your scripts once you write them. Thinking about it , this is like a couple of different cases, maybe best with a script… Although it wouldnt be bad as an Option in the firmware and probably not a big code change. That would suit companies that do many builds and would like to set read-only firmware defaults for their aircraft.  drone crew grabs their multirotor out of the shipping box, landing gear is retracted for transport, connect battery and lower the landing gear before setting it on the ground. Also have to retract after disarming to pack everything away → need to operate landing gear anytime drone newbie accidentally retracts gear before launching, damages payload → disallow landing gear changes when not flying should there be a delay? landing gear can be changed while disarmed within the first xyz seconds of powering up, or only after xyz seconds after disarming  We’re getting into a few scenarios and more complexity  I’m sure the Devs are fully loaded with more critical things. I feel like I’m overthinking it now, the current LGR params arent too bad."
41,BRD_SAFETY_MASK which outputs are which?,7,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?","I think the “right” answer is to enable a WOW switch in Copter (I think it’s Plane only right now). Otherwise, a script is the way to go. How’s that for a compromise?"
41,BRD_SAFETY_MASK which outputs are which?,8,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?",Weight on Wheels and others are already there in copter too
41,BRD_SAFETY_MASK which outputs are which?,9,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?","Well that’s easy then! Plus, a WOW switch doesn’t even really need to be enabled in firmware. Just have it interrupt the power circuit to the gear when actuated. KISS. In the script, I think a double switch actuation would suffice for disarmed behavior. In other words, if the gear is up for transport and needs to be lowered for launch, flick the switch twice within one second. Otherwise, no change (other than a text warning)."
41,BRD_SAFETY_MASK which outputs are which?,10,"I’m trying to disable the output for my landing gear when disarmed using the BRD_SAFETY_MASK param.  I can’t find any explanation of which outputs correspond to which outputs on the Cube carrier board.  I know there are 14 total; 8 for motors, then another 6 pwm outputs.  But how is the ordering of them?   Looks like:  The one I am trying to disable while disarmed is the #6 highlighted by white.  Would this be output #14 for the bitmask?  This would assume outputs start with the motor outputs 1-8 then 1-6 highlighted in white corresponding to 9-14.  Right?","I’m not sure we’re talking abut the same thing, but I have what I am wanting working on two copters and via very simple means of:  * After changing this parameter (a bitmask,) I am no longer able to accidentally flip my landing gear switch while the safety switch is not enabled, in other words, before launching or while on the ground.  I’ve disabled “Output14” which corresponds to the black on white “6” on the outputs on the back of my carrier board: * This is all I was wanting to do, and satisfies my needs.  I think in my post, I used the term “armed” in lieui of what I meant, which was with the safety switch not depressed.  It satisfies my needs, but I think your idea to work it into an actual “armed” state, since lots of people don’t use the hardware safety switch, would be great and maybe better even for people who do. To me it seems like it would be a useful and much appreciated feature that might save a lot of people a lot of money into landfill waste. "
42,How to get signals from sBuso to sBus in?,1,"I’ve tried everything.  I can’t seem to get any sbus signals out of the sBuso port.  Do I need to enable it somehow? The situation is that I have a sbus ready gimbal (Movi M5) that works fine when connected to the receiver via sbus, but I can’t get any response when trying to use the sBuso port on the Cube carrier board. My params: * (17.6 KB)",Set the Mount type
42,How to get signals from sBuso to sBus in?,2,"I’ve tried everything.  I can’t seem to get any sbus signals out of the sBuso port.  Do I need to enable it somehow? The situation is that I have a sbus ready gimbal (Movi M5) that works fine when connected to the receiver via sbus, but I can’t get any response when trying to use the sBuso port on the Cube carrier board. My params: * (17.6 KB)","I’ve tried setting it to each option, then rebooting and testing.  None of the options changes anything.  I think it should be set to “7,” as per the instructions.  Should I be setting it to something not listed or other than 7? Another detail I am unsure of is the part of the instructions: "" * = 163 (“Mount Lock”) to switch between “lock” and “follow” mode with RC channel 8"" My gimbals have three “modes:” off, handheld, remote control.  I’ve assigned my “mode” switch to go between these three, but it’s not communicating.   It works fine via any means other than the sBuso of the flight controller (joystick, receiver.) I did not assign a pan rate channel.  I like to combine the tilt and pan rates into one, which I’ve assigned to channel 8. I’ve followed the instructions several times, thoroughly and the only thing that I am unsure about is the statement in the Ardupilot guide, "" Gimbals that accept PWM input or SBUS input to control the gimbal’s lean angle should work.""  I am unsure what “lean angle” means.  Maybe my gimbal can do this or not, but without some kind of definition, I’m not sure.  I can choose to move tilt by either rate or by angle, and I prefer and configured for angle, so maybe this is lean angle.  It’s the only thing I can imagine at this point.  I don’t know why it works with different receivers, and a joystick that I have as well, but seems like nothing comes out of the sBuso port at all.  I can’t get the “Gimbal Mode” switch (“Mount Lock” in Mission Planner) to turn the gimbal on or through the different modes, so I can’t get any response at all. I’ve also tried each different setting for sBuso frame rate.  Nothing changed. Params how I think it should work: * (17.9 KB) I’m using different channels than in the documentation’s instructions (as are my radio and gimbal, which work fine via receiver.)  I deviated from the min and max angles, etc. to match those set in my gimbal settings, but otherwise I think I’ve carefully followed the instructions. A couple years ago, I was trying to get a Gremsy gimbal (also sBus) working on either copter to no avail.  I’ll try that one again on both copters and see if anything changes or provides any clues. *update: Tried the Gremsy gimbal and it also does not seem to get sBus signals from either copter.  So neither gimbal on either copter getting signals…"
42,How to get signals from sBuso to sBus in?,3,"I’ve tried everything.  I can’t seem to get any sbus signals out of the sBuso port.  Do I need to enable it somehow? The situation is that I have a sbus ready gimbal (Movi M5) that works fine when connected to the receiver via sbus, but I can’t get any response when trying to use the sBuso port on the Cube carrier board. My params: * (17.6 KB)","I’ve decided that my gimbals just are not compatible. For anyone interested: The Movi M5 does not offer follow control while in dual operator mode and in single operator mode it does not accept rc input.  So as an FPV camera, you’d have to either only control tilt & roll, and forget about pan capabilities; or remember to point your camera when you yaw.  It does not respond to My Cube Orange sBus out.  It does allow me to control tilt by angle instead of rate, but not pan, maybe that’s why it does not work.  It might be a good gimbal for someone using a dual operator setup and using a receiver, but for a single operator/fpv it’s not going to be very useful. The Gremsy Gstabi H3 is a really great gimbal.  Tuning it is a lot easier than any gimbal I’ve used.  It also allows to control tilt by angle or rate, but for pan you can only adjust the pan speed and cannot adjust pan by angle.  So, as per the instructions,  Smartly, it only allows follow mode when using the rc, so can be useful as a single operator fpv camera, just not via the flight controller (via receiver.) This should not be taken lightly, as I did.   Lesson learned. I’m looking for recommendations on a gimbal that is known to work and carries cameras weighing about 7 lbs with lens.  I see the Gremsy T7 is known to be compatible, but I’m looking for something cheaper/older.  I want to get it right the third time."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,1,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Is a flow of control error related to the gps amd the position controller? I use gps for altitude. There was a parameter added to control when to use the gps value for altitude and when to fall back on barometer. I havent set this parameter. Is the flow of control error related to gps height estimation in any way?
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,2,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","update: I switched back to using barometer for altitude. The issue of the repeating jerks is still there and the internal error is still there (the same one) although the jerk movements occur less often. I also changed PSC_VELXY_FLTD back from 2.5 to 5 (default value) Log file: * Also, * * * I saw that you randy posted that this internal error of flow_of_ctr was going to be investigated. What I would like to ask you guys is if there is any value in me doing tests for you, since the issue is so apparent in my case, or if I could go back to 4.2.2 until this is resolved? If me helping with tests would make it easier to solve this, I can assist with that, but if not, it would be nice to be able to fly normally again. Thanks!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,3,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","What has happened before is a new release has a different level of error detection and there is no real “issue” just a different way, or a more stringent way, of detecting what was always there. I don’t know if this is the case with this message but the Dev’s know about it so we’ll see what happens. Personally I wouldn’t revert back. I would probably load the latest Dev version on a craft and see what happens  Case in point is the “failure to level, manual tune may be required” for Auto Tune. I think some asked if this was a Bug because it wasn’t seen in the previous release when run on the same craft. Well, no…"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,4,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Okay, I’ll stick to the latest than. I thaught there was no dev versions yet. I thaught that you guys worked on 4.3 untill it was ready, than moved to make 4.3.x beta firmwares I’ll look if there is any beta avalible. Also, if this is a timeing error, does that mean my fc it too old? Or not precise/exact enough, so that I will have to get a new one? I’m running a cube black at the moment"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,5,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","The Dev/Master version is 4.4.0-dev. New features are untested by users, that happens at the Beta level. But it’s available in the “Latest” directory for the non risk averse."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,6,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",So pressing the load beta firmwares in missionplanne wont give me the latest beta than?
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,7,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","No, but pressing Ctrl>Q will."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,8,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Pressing ctrl and Q won’t show me anything in my missionplanner
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,9,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Left click anywhere in the screen and then hit Ctrl>Q and you should see this: When you click OK they populate to this: Heed the warning!!
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,10,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Ah! Now it worked! Is there anywhere I can read up on what new features are being tested and report findings and resd about issues? When do a beta firmware get it’s own topic here? I’ve seen some 4.3 beta firmware topics
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,11,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I also saw this could that be a solution, or just hide the issue in some way, or maybe it’s bad to drop the rate frequency"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,12,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hi Dave, I haven’t got tested on 4.4.0 yet, but I wanted to ask you about the beta firmware button. If I press it i get 4.3.0 beta. I’ve read about, see below, 4.3.1 beta1 for example. How do I get that one? And if I press the beta firmware button, what does it really do? Since ctrl+Q gets me the dev beta? I’ve been reading a bit on github about the issues related to 4.3.0. I can see that the resolved issues has a note that says that on for example is resolved in 4.3.0 beta2 and another in 4.3.1 beta1. What does that really mean? Are both this issues resolved in 4.4.0 than? And is the one in 4.3.0 beta2 resolves in 4.3.0 stable?"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,13,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","There is Beta and there is dev or Master, they are not the same. dev/Master is the development release, not really for common use by users. Developers play in this ballpark to add and test new features. Beta is generally safe to fly but that’s a personal choice. Sometimes new boards or desired features are added to Beta or dev/master and you have no choice. Here is the best way to get the release you want: Go here and select Stable, Beta, or Latest (which is yet another term for dev or Master) * Then let’s say you picked Beta and you have a Cube Orange and select that: * Open the “git-version.txt” file and see what Beta version it is. In this case today it shows the Stable version so there is no Beta version available. But, say you want to install this anyway. Download the .apj file and then use Mission Planners “load custom firmware” option to flash the board. I see no evidence the issue(s) has been resolved in any release."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,14,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",That bring a lot of light to things! I’ll keep an eye on the github 4.3.0 issue list and see if/when the floew_of_crt issue gets moved to resolved and what version I need to fix it!
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,15,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",You can monitor the Discord channel also. It can be messy with people posting in the wrong threads but the Development> #general_dev or dev-team (which the rabble can’t post to) can offer some interesting dialog. There is some chatter about this issue.
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,16,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Thanks, I’ll do!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,17,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",This is a CubeBlack running three EKF. You are getting lots of long loops and this error happens when we detect that the position controller has not been run for 5 times the normal loop time. If you disable the third IMU I think you will get enough processing time back to keep up. INS_USE3	0 See how that goes.
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,18,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Ah, Has this always been a problem? As I understand it, it only shows as an error now because the checks have been made more strict? * is working on a fix. Would tht be a fix or just make the checks less strict for less processor powerful flight controllers?"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,19,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","This error has a number of causes. The main one we see is during start up where initialisation processors run long and the position controller has been started already, this is just annoying but should be fixed. We would also see this error if some process was running very slowly for some reason, this could be a serious issue. In your case I suspect it is simply you are overloading the processor on the autopilot. Every release we make things better but also increase the memory and processor usage. I think the features you have turned on are just pushing things just a little too hard. So this error isn’t a problem with the position controller, it is a problem with other areas that is detected by the position controller. I hope that by going from 3 EKF to 2 EKF you will have the extra processing time to keep up."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,20,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Ah, so the F3 shows its weaknesses. Would this mean that the Cube black is obsolete now? Maybe not for hobby crafts but for commercial once? The only extra feature I have is the notch filter running on esc rpm data. Not for all motors but only one  harmonic notch running of motor 1 frequency. There was some updates to the notch filter so maybe got better but a bit to much for my F3 Would I be able to see this issue if I look at the processor usage from the log file?"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,21,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",* yep cubes are obsolete!
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,22,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hope you only mean the cube black than, orange has an h7 so that would be more than sufficient"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,23,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",what would be my best course of action now?   Go back to 4.2.3 (it worked fine than) and wait for 4.3.2 when this might be fixed?   Disable one imu and stick to the latest (if it works)   Go back to 4.2.3 and wait for a fix but still disabling the third imu?   if you have a better sugestion   Thanks!
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,24,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Cube Black has an F427. But it’s still 2 generations old (F4>F7>H7). A H743 flight controller is available for $110. Well, in the US they are."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,25,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",This aircraft is already quite old and the cube has been really reliable hardware wise. So for the time being i think I’m goong to stick to it. My new commercial craft has a cube orange. And when I decide to upgrade this rig I will probably spend tje extra money for a new cube for this one too. For now I guess I’ll try to lighten the processor load and waot for the “fix” to get released
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,26,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",This reminds me of an old car I had with the check engine lamp on all the time. I fixed it by removing the bulb 
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,27,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hahaha, didn’t think of it like that but that’s basicaly what it is… I guess 4.2.3 was juat under the limit of what the cube black could handle"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,28,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Yea,  joking of course. It seems to me to be entirely plausible that a loop timing problem could cause a momentary stutter or similar response."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,29,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Guess we’ll see tomorrow. I’ll try and dissable the third imu and see if that helps
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,30,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Also make sure you’ve got FFT_ENABLE,0 If there’s still any doubts, use throttle based HNOTCH instead of ESC/motor RPM"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,31,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I wouldn’t say it is obsolete, you just have to manage the amount of processing power and memory you have. So running all three EKF and a bunch of harmonic notches is going to push things a bit too hard. Back off to two EKF and have a look at the PM message and see if you are still getting a lot of long loops and seeing this problem."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,32,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I looked at the logs and the PM tab. The new firmware uses a bit more processing power (usage %) and the long loops occur in large numbers through out the flight. Bit hard to see on this picture but blue is processor usage, red is long loops and green on the bottom is internal errors detected.  Before on 4.2.3 I didn’t get any internal errors but the long loops still spiked some times  How come this internal error didn’t show earlier since the loong loops still spiked? Is it because the checks have been made tighter."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,33,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","You only plotted the number of long loops, not the maximum time."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,34,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Ah, sorry. So the maximum time is important regarding this error? I’m on the road untill monday but I’ll get the maximum time posted too!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,35,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hi, I haven’t gotten an opportunity to test fly with the third imu disabled, it’s been snowing here and quite high winds. I’m going to try and test fly tomorrow and also test with 4.3.1 and 4.4.0 if the imu disabling doesn’t work. I’ve looked at the logs from a pre error flight on 4.2.3 and a flight with internal error on 4.3.0 and I can’t find that much of a difference in the long loop max time and peak number. Not much difference in CPU load neither. Pre error: * Flight with internal error: * I thought it’s better to send the logs rather than trying to plot the values in pictures, I’ll probably manage to make that pretty messy. Why would this error occur now? There is a higher number of long loops but not higher that it peaked before the issue. The processor load is also a bit higher, but not hitting like 90%. It goes up to 85 but that should work, right? It’s probably obvious why there is an issue and my lack in log analysis and system knowledge won’t help me. Maybe, if you got the time, you could take a quick look at the PM plots in the log and see if there is an apparent reason to why my processor can’t handle the load. * Also, if you want a pre error and during error log to compare between 4.2.3 and 4.3.0 you can use these. Just in case it would help!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,36,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Disabling the third IMU didn’t help, I still get the same internal error as before. Log  file: *"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,37,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",That log still has all three ekf running set: EK3_IMU_MASK	3 INS_LOG_BAT_MASK	0 Make sure you reboot the aircraft after making these changes. Thanks for your help and patience!
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,38,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Ah, my bad, I tested 4.2.3 again with no issues. Im out testing now. I’ll load 4.3.0 again and set the values you suggested"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,39,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I’m setting ins_use3 to 0 as well. You wrote that eirlier but I seem to have done something wrong when I set it. Edit: after a reboot, the ins use resets to 1 again The other two changed after reboot. Maybe I need to change the ekf one before I change the ins one?"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,40,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Good news! Disabling the third EKF and disabling the batch sampler did it! I n longer have flow_of_ctr internal error and the number of long loops have been cut in half on the plot. Log: * I have some questions though: Will I be able to use autotune for example, or other such features like using gps for altitude or will that put to much load on the processor? And also, I took a look at the RATE values in the log. All the out values should be under 0.1 if I recall right. I believe you wrote that at some point in some topic. Mine is a bit over 0.1 and I thought I could lover my rate filters and gyro filter (rate filters at 13 and gyro at 26 as of now) to maybe 11 and 22 or even 10 and 20 if needed. I wanted to ask you about this before I start to play around with it. Thanks!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,41,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Maybe this is interesting for you as well, as an aid to solve this “issue”. Mine seems jut to be that my FC is a bit old"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,42,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Dont change the Gyro and Accel filters from what they are now. You can still run Autotune just fine, it does increase some logging while it runs but that shouldnt be a problem, that’s been happening for years. I dont think using GPS for Alt will affect the load much, if any - the same data is still collected. If load (or long loops) is still an issue you can set INS_USE3,0"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,43,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Yeh, I have not looked at the code to work out exactly what they do over EK3_IMU_MASK. The EKF mask is going to be the main one though."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,44,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Try changing EK3_IMU_MASK,7 to EK3_IMU_MASK,3 That should sort it out"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,45,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",I’m in the same boat it seems with my Cube Black.  Problem is my EK3_IMU_MASK is already set to 3.  I’m running a throttle based notch filter and made sure the INS_LOG_BAT_MASK is set to zero.  The only thing different going from 4.2 to 4.3 is my INS_FAST_SAMPLE was set to 1 instead of the default 5.  Does that even make a difference?
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,46,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",* * Could tjis be an issue with the batch sampler? I also turnee mine off when it started working
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,47,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Can you provide a log please.
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,48,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",That may be part of the issue.
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,49,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I did an autotune with no good tesults. Maybe you could take a look at the log later of you got the time. But for now, I could load the privious parameters which had a decent but now perfect tune and test with the batch sampler on and off a couple of times if you would like?"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,50,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",I have been looking at this further and I suspect cube black’s will need to set: EK3_IMU_MASK 3 or 5 based on redundancy considerations (2 IMU’s) INS_ENABLE_MASK 3 or 5 (2 IMU’s) INS_USE	1 (not sure if they do anything any more) INS_USE2 0 or 1 (not sure if they do anything any more) INS_USE3 0 or 1 (not sure if they do anything any more) INS_LOG_BAT_MASK	0 INS_FAST_SAMPLE 0 Limit harmonic notch’s to two harmonics Don’t use any INS_HNTCH_OPTS FFT_ENABLE	0 INS_GYRO_RATE 0 SCHED_LOOP_RATE 400 I will need to get some more input from the other Dev’s on what to suggest. Another setting here that I would be interested to see if it helps is: INS_FAST_SAMPLE 0
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,51,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I was wondering about the INS_FAST_SAMPLE as well.  I’m going to give it a try tomorrow.  I thought updating to 4.3, adding a notch filter and getting a super tight autotune was going to be great.  This 6-year-old mapping drone has always flown flawlessly over thousands of missions.  That’s boring.  Now it’s full-on crazy lol!  I’m lucky I got it back on the ground in stabilize."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,52,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hi, I was out test flying today again, I use EKF mask 3 INS_USEx won’t  change even after reboot. LOG_BAT_MASK 0 notch OPTS 0 LOOP_RATE 400 With these settings it flew well with no internal errors. I also did a test flight with fast sample disabled if you wanted to see a log for that. Log, fast sample off: * Since autotune didn’t work for my aircraft, I tried a manual tune this morning. It flew well after, there was no wind so I’ll have to test that to, but could you maybe take a quick look at my log and see if I could improve my tuning somehow. Even if it won’t be noticeable during normal flying, I really want to learn as much as possible about tuning and ardupilot! If you got the time that is! Tuning log: * The log is for a quite long flight where I take off and land a couple of times. On the last flight I’m done tuning so only that portion of the log is important if you would decide to take a look at it. Edit: I tried a little investigating myself, looking at the ATT plots on roll and pitch. I can see that they are tracking quite well although a slight overshoot on both. A bit worse on roll. Especially on small aggressive inputs. I would increase the D gain on roll and pitch just a tiny bit. Maybe slightly more on roll. Is this the right thing to do or should I decrease P? Also, if there is any other test you would like me to do regarding the internal error issue or anything else I would gladly do so!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,53,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Thanks for your help * ! I don’t want to turn this thread into a tuning support thread but your tune looks good. We have put over load handling into the scheduler to ensure all processes continue to run when the processor can’t keep up. However, we have not put much in the way of warning messages or instructions in place on how to handle overloaded processors. As a result we are seeing Cube Blacks with 12.5% of their loops running as slow as 1/3 normal rate. The average loop time is something in the order of 112% to 130% normal rate from what I can work out. When I designed the controllers it was done with the assumption that the update rate would be close to the specified value (400 Hz normally). I assumed incorrectly that any timing issues would be a temporary problem that would be rectified by the user. Now the kicker, this slow down directly scales the D terms and I terms. So a 30% increase in loop time will increase the D term by 30% and reduce the I term by 30%. This is enough to move many aircraft to near oscillation. Further this is random so it is also adding noise to the outputs. Finally all the navigation updates are running slower so from the perspective of the position controller the aircraft is moving 30% faster than it should be. For example, it is reporting the correct velocity but on each time step moving further than the position controller expected because the time step is larger than the position controller is using. This is also true for the velocity to acceleration relationship. From what I can see there are three parts to the solution to this problem:  Users need to be mindful to keep CPU load to a reasonable level by limiting the features being used on lower boards. We need to provide better reporting and instructions for users to help them manage that load. I need to rewrite the PID objects, internal filters, Attitude Control, Position Control, and Waypoint Navigation to update based on the measured loop time.    Some work to do…"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,54,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I made those change and tested it in a nice controlled environment. 7 solid hours of mapping tailing pond wall. On average, every leg ascends and descends about 300m within 1km. Lots of up and down. Today was super special, constant 17km winds gusting to 25. Oh, and -5c, too much fun. Back to its boring flights, not a hint of crazy town😂 Thanks Leonard!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,55,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Oh damn… Would my cube be affected in a way that my pids are wrong at the momentet. I have limited the processor as you suggested and the error is gone. Am I still affected by the D and I term getting messed up? Also, this is only for processor weak FCs, right? I have a cube orange built comming up, will that one be affected?"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,56,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hi *, Your last log was fine. Your loops needed very little extra time to ensure all tasks were completed. The scheduler was only hinting at needing extra time. On average 1 in 40 loops were long. An interesting thing to note that your longest loops are still about 4000. So you are effectively seeing no gain changes. 10 Hz loops include:  update_batt_compass arm_motors_check auto_disarm_check auto_trim update_altitude ekf_check check_vibration gpsglitch_check landinggear_update lost_vehicle_check avoidance_adsb_update  I wonder if any of them have had a significant update for 4.3…"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,57,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Maybe * knows of there was any changes to the 10hz loops. Tell me if there is anything else that needs to be tested!
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,58,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","You said you would rewrite the PID loops etc, that sound painful and time consuming so I would assume that’s going to take a while. When you are finished, will there be any sort of announcement somewhere since that’s quite a big change?"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,59,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Not as bad as it sounds. I have been planning this for a long time and wrote them with this in mind. So it is mostly checking a few things to make sure there are no hidden problems. I got started on it straight away and it looks like there are no compromises, only benefits. It will take some time to get in but I would expect it to be in master by the new year."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,60,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Oh, by new year!!! That’s quick. I’ll be sure to keep an eye on the betas so I can test it when it comes out. Is there anywhere I can see when this makes it into beta? Thanks!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,61,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","* I am wary that there may be a more serious underlying issue that is causing a more significant slow down and triggering these issues. I am interested to see a direct comparison between 4.2 and 4.3 using the same aircraft, same settings and enabled features. It would be good to see a back to back comparison with everything pretty much identical, basically the same flight if possible. If there is something else going on here I would like to get to the bottom of it. * Not really but it could be helpful if you were willing to do some test flying once it goes into master. I could port it onto 4.3 and give it to you. That would be early in the new year. The only difference it would make to you is your navigation and tune wouldn’t be impacted by the slower loop rates. That direct 4.2 vs 4.3 comparison is where I could really do with some help!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,62,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I read the discussion on GitHub, really interesting although I don’t understand much of the code related. I could absolutely do a 4.2 to 4.2 comparison I posted two logs from each firmware but the flights where not identical. Here is a log on 4.2.3 with no issue Log nr 1). Right after I updated to 4.3 and collected a log (log nr 2) Log 1: * Log 2: * These tests where not conducted in the best way. I could do two more flights, on each on 4.2.3 and 4.3.0 with a more planned flight path. What should I include in these logs. I usually always start in alt.hold, do some light maneuvers and than some more aggressive once. Than more into loiter. Maybe you have something you want included in the flight? I will also happily help to test the new system once it’s developed enough!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,63,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I would suggest:  Start in Alt_Hold Test basic flight maneuvers for 30 seconds Switch to Loiter Test basic flight maneuvers for 30 seconds Fly 100m away Switch to RTL Let the aircraft return and land.  That would give me a range of loads. If you are comfortable in Stabilize that would also be good to have 30 seconds of that too. Those two logs you sent me arn’t bad, not perfect as you say but not bad. Everything has increased: NLon ~ 103% MaxT ~ 126% Ex ~ 237% I can only compare the Alt Hold section though. A very interesting data point, Thank you! Just adding some data to make it easer to understand the load: EK3_IMU_MASK,7 INS_ENABLE_MASK,127 INS_FAST_SAMPLE,5 INS_GYRO_RATE,0 INS_LOG_BAT_MASK,1 INS_HNTCH_ENABLE,1 INS_HNTCH_HMNCS,3 INS_HNTCH_MODE,3 INS_HNTCH_OPTS,0 INS_HNTC2_ENABLE,0 INS_USE,1 INS_USE2,1 INS_USE3,1 SCHED_LOOP_RATE,400"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,64,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Ok, so I might be able to provide you with logs tomorrow. My thought is,   Stabilize hover 30 seconds   Light movements of pitch, roll and yaw individually. About two twitches/movements for each axis. First two light that two larger.   Forward flight with braking   Backwards flight with braking (back to takeoff point)   Forwards flight with wide 180 degree turn, than a sharper 180 when I get back to the takeoff point.   Alt hold hover 30 sec   Repeat all maneuvers   Loiter 30 sec   Repeat all maneuvers   RTL from 100 meters   That should give you a set of maneuvers and tests to look at. When you have implemented the new controller I can do the same exact test to compare all three"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,65,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",That would be perfect!!
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,66,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","My INS_FAST_SAMPLE is set to 0 and my INS_LOG_BAT_MASK is also set to zero, Should I change those settings on my craft. I think the batch sampler/log bat mask causes issues regarding this issue. There was someone else who posted here about changing that which solved the issue I think. Maybe it’s using a lot of processing power"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,67,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",That is what I would recommend for less powerful autopilots. Lets keep it running reasonably. There may be some value in loading things up and redoing the tests but for now I would like to get some baseline data.
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,68,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Ok, I’ll set the settings you provided and conduct the tests. It’s almost 1 am here so I’ll have to get some sleep before I can test. But I’ll try and get the tests done tomorrow!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,69,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Thanks * ! I am not sure what settings you are talking about here. I would suggest you do the back to back test with the parameters that are safely working in 4.3. To test what is causing the high load I would test 4.3 back to back with different things enabled.
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,70,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","These. The bat mask is at 1, I have it at 0 now. And the fast sample at 5, I have it at 0 now to. Did you get these values from the logs I gave you? Because I have now disabled the batch sampler and that cealred my internal error. I also dissabled fast sampler as a test to. So the parameters you listed are not the once I fly on now. I should have been more clear on that, the logs I posted was a bit old. I do think I need to enable the batch sampler so that I get the internal error for the test on 4.3.0 right?"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,71,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Yes, those were the values in those logs to make it easy to see what the key parameters were for those numbers I gave. I don’t need the error to show up. What we are looking at here is the increase in load on the cube black to get a better understanding of the underlying problem. So keep your parameters set to the safe values for the 4.2 to 4.3 comparison. I don’t see any point at this stage of exposing you to any additional risk."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,72,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Ah okay, The fast sampling, is that for the actual control loop or juat for logging? I won’t get an error with the fast sampling on so I can have that on if it gives better resolution in the logs. The batch sampler kind of “causes” the issue. Or tipps it over the line so that one needs to be off."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,73,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Fast sampling increases the load due to filtering I believe but I have not broken down the impact of each parameter yet. I would use what ever you intend to run on 4.3.
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,74,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Do fast sampling have any effect on my flight perfoarmance. If processor load is ignored. Do the controlers get better resolution?
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,75,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",I believe the filters are running at full rate resulting in less low freuqency noise due to the higher aliasing frequency. So any performance improvements are small.
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,76,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Such a small benefit isn’t worth it here. This is just a test aircraft. Better to save processor capacity. I’ll post my test logs here tomorrow hopefully!
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,77,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Sadly enough it has been raining here all day so tests have to wait. Hopefully tomorrow I will bebable to do the testflights
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,78,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",looking forward to your update
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,79,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",Do you have the latest test results?
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,80,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","* * Sorry, it’s been raining here the past days, I’ll try and get some flights in today if possible."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,81,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","All good Axel, you can only do what you can do. We appreciate your help!!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,82,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","I was able to fly and gather at least some data. I had to make it  bit quicker than I initially thought since it’s still some rain in the air. I put some tape over the ports on the cube and went anyways, worked out nicely since there was so little rain. Here is the 4.2.3 flight: * Here is the 4.3.0 flight: * It felt like it flew better on 4.2.3 than on 4.3.0. Don’t know it if that’s actually how it is but maybe you could take a look at that when you look over the logs, maybe some filter thing or PID thing, should not be PID though since all is same but it might just be me overthinking."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,83,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","We (mostly Leonard and Tridge) have a number of bug fixes and enhancements that we hope will resolve the internal errors and control issues caused by overloaded CPUs here and in other threads (*, *). Below are links to firmwares for a few different boards.  In each download are two firmwares, the “432rc1” firmware includes simpler bug fixes while the “432rc1-withdt” additionally includes Leonard’s control timing improvements.  I’m happy to pre-build firmwares for other boards upon request.  CUAVv5Nano-432rc1 CubeBlack-432rc1 CubeOrange-432rc1 Luminousbee5-custom-432rc1  FYI *, *, *, *, *"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,84,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hi Axel, Thanks for all your help with this problem. I think we have fixed a range of issues and the binaries that Randy link to will improve the handling of these problems dramatically. Both of your longs are very similar with just a little more load on 4.3 as we expect. I am not seeing anything to suggest that 4.2 is flying better than 4.3 now you have backed off the load. However, have a look at the binaries that Randy links too and see if you feel any improvement there if you have time."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,85,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hi, I’ve experienced a minor incident so I’m waiting on some new propellers. No issue with my vehicle, just with me, was over 2 years ago since I had an incident so I feel kind of dumb now… Although I will test the new firmware (the one with the new controllers) once I get my new propellers and have conducted a full hardware inspection on my craft. Everything seems fine so I’ll probably be able to test as soon as I get propellers, but I haven’t done all the system and hardware tests yet so might have to swap something more… Thanks!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,86,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","On another note, I’m trying to learn as much as possible about tuning and I just wanted to ask you if you got a log from a perfectly tuned aircraft I could look at as a benchmark for good tuning. I know you work with this and that you won’t be able to just post logs for vehicles you build but if you have any log you can post It would be appreaciated!"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,87,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",I might be able to help with that. I’ve got a couple of logs of different sized quads I can send to you I PM’ed you a couple of links and photos
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,88,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","*, just curious, in your original post you mentioned that takeoffs were ‘sporty’: “My quad makes like a jump into the air. I raise the throttle slowly like I always do.” I believe you ultimately concluded that this was not an issue in your use case, but I’m curious if addressing the internal errors helped mitigate it, or if it is just characteristic of 4.3.x? I also noticed this when I switched to 4.3.0 on a Orange Cube; it was inconsistent, but compared to 4.1.5, it was startling.  I experimented briefly with the TKOFF_SLEW_TIME, but did not observe any change in behavior.  While it isn’t problematic on smaller aircraft, doing a full-power ‘send’ for the first couple feet of takeoff on a big ship would be…  Terrifying, haha! Regards, -Luke"
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,89,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *","Hi Luke, I did experience the jumpy takeoff and still do on 4.3.0. I haven’t tested 4.3.1 yet so don’t know if it’s still there. It did go away and came back each time I switched between 4.2.3 and 4.3.0 during my testing. Currently, I’m on 4.2.3 and don’t experience the jump on takeoff. Although I will soon test the 4.3.2 firmware including Leonards new control loop mechanics. I came to the conclusion that it’s an intended maneuver done by the drone to get some height right after takeoff. I thought it might had something to do with the slew parameter since it was the only new parameter listed regarding takeoff, but I might have been wrong. Maybe * knows if there has been any changes that would result in this, and if there is any parameter to make it smoother again. You could make a new post about it if you want to discuss it with the developers. I bet all feedback regarding new flight behavior is welcome, and maybe others also have some feedback to give as well."
43,Internal errors 0x100000 I:921 flow_of_ctr Twitching motion in loiter during forward flight,90,"This is a follow up post on: * The internal error in the title appeared along with the symptoms described in the initial post. It has come to my attention that the same internal error appeared on the new rover release as well. I got the suggestion to create a new post to bring the attention to this internal error in particular. To read about the behavior in flight, pleas read the linked post. This is the initial log file where the issue first appeared (the first flight of 4.3.0) * Second log file after parameter PSC_VELXY_FLTD was changed from 5 to 2.5 * Flow of messages  *",* and * Could you post logs and observations about the takeoff behaviour in 4.3 here so I can go over the logs and see if there are any issues or if I can help you.
44,Drone not sending MISSION_REQUEST_INT after initial MISSION_COUNT,1,"Hi everyone. I’ve run into an issue where I am able to send a MISSION_COUNT messages (as per the mission protocol) to a drone, but the drone does not respond with the necessary MISSION_REQUEST_INT in order to process each waypoint. This is working fine in the SITL, and other messages such as COMMAND_LONG and PARAM_SET are taken onboard by the drone. Does anyone have any ideas? Thanks in advance!",Why did you not tell which fw version are you using?
44,Drone not sending MISSION_REQUEST_INT after initial MISSION_COUNT,2,"Hi everyone. I’ve run into an issue where I am able to send a MISSION_COUNT messages (as per the mission protocol) to a drone, but the drone does not respond with the necessary MISSION_REQUEST_INT in order to process each waypoint. This is working fine in the SITL, and other messages such as COMMAND_LONG and PARAM_SET are taken onboard by the drone. Does anyone have any ideas? Thanks in advance!","I believe it is the latest Arducopter fw (4.3.1?). I don’t get any messages telling me to update it anyway. Strangely it lets me upload missions through something like QGC but not from the missions I send. The packets look identical, even in the headers. Not sure what could cause the MISSION_COUNT to be completely ignored."
45,Obstacle avoidance with UAV R21F,1,how can i use UAV-R21F CAN  obstacle avoidance module with orange cube. If i want more CAN sensors with orange do i have to use CAN splitter ? this the link of the sensor *,"First of all, you have to check if this sensor is already supported by Arducopter, by checking the ArduCopter user guide *. I never heard about of this sensor, I fear that it is not supported yet… but conduct a research by yourself. If it is not available it, you can develop the sensor driver and contribute to the community. I do not have much knowledge on this, and most probably the answer is “depends”, but maybe * can clarify it for you."
45,Obstacle avoidance with UAV R21F,2,how can i use UAV-R21F CAN  obstacle avoidance module with orange cube. If i want more CAN sensors with orange do i have to use CAN splitter ? this the link of the sensor *,"Yes a driver has to be written, it should be relatively easy to reuse an existing CAN proximity driver. Looking at the manual, it seems it is just outputting distance within a 28 deg FoV with no Bearings… making it less interesting for avoidance * is working on a multibackend proximity driver that should be released soon, making it possible to connect multiple proximity sensor on the same bus, providing the sensor can have adressing capability"
45,Obstacle avoidance with UAV R21F,3,how can i use UAV-R21F CAN  obstacle avoidance module with orange cube. If i want more CAN sensors with orange do i have to use CAN splitter ? this the link of the sensor *,This sensor is working under Benewake CAN sensor type.
46,Problem in Copter 4.3 with the subsytem led preventing the drone from startup,1,"Hello everyone . I want to report an issue we are experiencing with the use of Copter-4.3. In order not to repeat myself during this post , I am giving you the link of the issue I created ( this has been added to the official issue list of Copter-4.3 by *  : * To update it to date, the problem is also present in the official Copter-4.3.1. The Issue:###################### The problem occurs on a luminousbee5 drone , which has vanilla Ardupilot Copter-4.3 firmware on it , but not with vanilla Ardupilot Copter-4.2.3 firmware. When using the led subsystem via a lua script(*),(or with other systems) , to turn on a number of leds, equal to or greater, than 44 , the entire drone stops working , thus preventing connection to it via USB or UDP with Mission Planner . As you can see from the screen below , the whole system seems to freeze or go into error , after printing the debug message from the lua script : LEDs started , and after turning on the LEDs.  I want to specify that the lua script used for this test has already been tested and is working with Copter 4.2.3. The possible problem and the partial solution found : ###################### By researching various parameters in Ardupilot we realized , that by varying a particular parameter the problem is triggered . The parameter is SCHED_LOOP_RATE , if this parameter is set to 800 , the problem I described above occurs . HOWEVER , if you set this parameter to 400 , the problem disappears and the drone starts up normally.And we can connect to the drone without any problem , from Mission Planner via usb. Also with the SCHED_LOOP_RATE parameter set to 400 , every combination with the SERVO_DSHOT_RATE parameter do not create the problem described. By setting the parameter SCHED_LOOP_RATE to 800 , every combination with the parameter SERVO_DSHOT_RATE create the described problem. With Copter-4.2.3, on the other hand, there was never any problem even keeping the parameter to SCHED_LOOP_RATE set to 800. The tests done with the various frequencies:###################### We then did various tests of combinations between the parameter SCHED_LOOP_RATE and SERVO_DSHOT_RATE and these are the results : LOOP_RATE |DSHOT_RATE |RESULT 400-------------                400---------------                  WORKING BUT ONLY 41 LED TURN ON 400-------------                800---------------                   WORKING BUT ONLY 41 LED TURN ON 400-------------                1600-------------                WORKING BUT ONLY 20 LED TURN ON 400-------------                1000-------------                WORKING BUT ONLY 32 LED TURN ON 800-------------                800---------------               DON’T WORK(CRASH) 800-------------               1000-------------              DON’T WORK(CRASH) 400-------------               1600-------------              DON’T WORK(CRASH) ######################################################################### So I ask the main developers of ardupilot to investigate about this problem to arrive at a solution . Thanks to all ","Since in 4.2.3 it does not happen with loop rate at 800 and in 4.3 at 400 it works but no longer with loop rate 800 it makes me suspicious of the “long loops” and increased computation occupancy that is emerging in 4.3. *  just posted this alpha version, it would be very interesting to try it out *"
46,Problem in Copter 4.3 with the subsytem led preventing the drone from startup,2,"Hello everyone . I want to report an issue we are experiencing with the use of Copter-4.3. In order not to repeat myself during this post , I am giving you the link of the issue I created ( this has been added to the official issue list of Copter-4.3 by *  : * To update it to date, the problem is also present in the official Copter-4.3.1. The Issue:###################### The problem occurs on a luminousbee5 drone , which has vanilla Ardupilot Copter-4.3 firmware on it , but not with vanilla Ardupilot Copter-4.2.3 firmware. When using the led subsystem via a lua script(*),(or with other systems) , to turn on a number of leds, equal to or greater, than 44 , the entire drone stops working , thus preventing connection to it via USB or UDP with Mission Planner . As you can see from the screen below , the whole system seems to freeze or go into error , after printing the debug message from the lua script : LEDs started , and after turning on the LEDs.  I want to specify that the lua script used for this test has already been tested and is working with Copter 4.2.3. The possible problem and the partial solution found : ###################### By researching various parameters in Ardupilot we realized , that by varying a particular parameter the problem is triggered . The parameter is SCHED_LOOP_RATE , if this parameter is set to 800 , the problem I described above occurs . HOWEVER , if you set this parameter to 400 , the problem disappears and the drone starts up normally.And we can connect to the drone without any problem , from Mission Planner via usb. Also with the SCHED_LOOP_RATE parameter set to 400 , every combination with the SERVO_DSHOT_RATE parameter do not create the problem described. By setting the parameter SCHED_LOOP_RATE to 800 , every combination with the parameter SERVO_DSHOT_RATE create the described problem. With Copter-4.2.3, on the other hand, there was never any problem even keeping the parameter to SCHED_LOOP_RATE set to 800. The tests done with the various frequencies:###################### We then did various tests of combinations between the parameter SCHED_LOOP_RATE and SERVO_DSHOT_RATE and these are the results : LOOP_RATE |DSHOT_RATE |RESULT 400-------------                400---------------                  WORKING BUT ONLY 41 LED TURN ON 400-------------                800---------------                   WORKING BUT ONLY 41 LED TURN ON 400-------------                1600-------------                WORKING BUT ONLY 20 LED TURN ON 400-------------                1000-------------                WORKING BUT ONLY 32 LED TURN ON 800-------------                800---------------               DON’T WORK(CRASH) 800-------------               1000-------------              DON’T WORK(CRASH) 400-------------               1600-------------              DON’T WORK(CRASH) ######################################################################### So I ask the main developers of ardupilot to investigate about this problem to arrive at a solution . Thanks to all ",I have sent our hwdefs to *  privately on discord . We are waiting for his reply
46,Problem in Copter 4.3 with the subsytem led preventing the drone from startup,3,"Hello everyone . I want to report an issue we are experiencing with the use of Copter-4.3. In order not to repeat myself during this post , I am giving you the link of the issue I created ( this has been added to the official issue list of Copter-4.3 by *  : * To update it to date, the problem is also present in the official Copter-4.3.1. The Issue:###################### The problem occurs on a luminousbee5 drone , which has vanilla Ardupilot Copter-4.3 firmware on it , but not with vanilla Ardupilot Copter-4.2.3 firmware. When using the led subsystem via a lua script(*),(or with other systems) , to turn on a number of leds, equal to or greater, than 44 , the entire drone stops working , thus preventing connection to it via USB or UDP with Mission Planner . As you can see from the screen below , the whole system seems to freeze or go into error , after printing the debug message from the lua script : LEDs started , and after turning on the LEDs.  I want to specify that the lua script used for this test has already been tested and is working with Copter 4.2.3. The possible problem and the partial solution found : ###################### By researching various parameters in Ardupilot we realized , that by varying a particular parameter the problem is triggered . The parameter is SCHED_LOOP_RATE , if this parameter is set to 800 , the problem I described above occurs . HOWEVER , if you set this parameter to 400 , the problem disappears and the drone starts up normally.And we can connect to the drone without any problem , from Mission Planner via usb. Also with the SCHED_LOOP_RATE parameter set to 400 , every combination with the SERVO_DSHOT_RATE parameter do not create the problem described. By setting the parameter SCHED_LOOP_RATE to 800 , every combination with the parameter SERVO_DSHOT_RATE create the described problem. With Copter-4.2.3, on the other hand, there was never any problem even keeping the parameter to SCHED_LOOP_RATE set to 800. The tests done with the various frequencies:###################### We then did various tests of combinations between the parameter SCHED_LOOP_RATE and SERVO_DSHOT_RATE and these are the results : LOOP_RATE |DSHOT_RATE |RESULT 400-------------                400---------------                  WORKING BUT ONLY 41 LED TURN ON 400-------------                800---------------                   WORKING BUT ONLY 41 LED TURN ON 400-------------                1600-------------                WORKING BUT ONLY 20 LED TURN ON 400-------------                1000-------------                WORKING BUT ONLY 32 LED TURN ON 800-------------                800---------------               DON’T WORK(CRASH) 800-------------               1000-------------              DON’T WORK(CRASH) 400-------------               1600-------------              DON’T WORK(CRASH) ######################################################################### So I ask the main developers of ardupilot to investigate about this problem to arrive at a solution . Thanks to all ","* *, I’ve added Luminousbee5-custom binaries *. I get the impression from AndyPiper that this is all unrelated but let’s see. Txs for helping testing."
46,Problem in Copter 4.3 with the subsytem led preventing the drone from startup,4,"Hello everyone . I want to report an issue we are experiencing with the use of Copter-4.3. In order not to repeat myself during this post , I am giving you the link of the issue I created ( this has been added to the official issue list of Copter-4.3 by *  : * To update it to date, the problem is also present in the official Copter-4.3.1. The Issue:###################### The problem occurs on a luminousbee5 drone , which has vanilla Ardupilot Copter-4.3 firmware on it , but not with vanilla Ardupilot Copter-4.2.3 firmware. When using the led subsystem via a lua script(*),(or with other systems) , to turn on a number of leds, equal to or greater, than 44 , the entire drone stops working , thus preventing connection to it via USB or UDP with Mission Planner . As you can see from the screen below , the whole system seems to freeze or go into error , after printing the debug message from the lua script : LEDs started , and after turning on the LEDs.  I want to specify that the lua script used for this test has already been tested and is working with Copter 4.2.3. The possible problem and the partial solution found : ###################### By researching various parameters in Ardupilot we realized , that by varying a particular parameter the problem is triggered . The parameter is SCHED_LOOP_RATE , if this parameter is set to 800 , the problem I described above occurs . HOWEVER , if you set this parameter to 400 , the problem disappears and the drone starts up normally.And we can connect to the drone without any problem , from Mission Planner via usb. Also with the SCHED_LOOP_RATE parameter set to 400 , every combination with the SERVO_DSHOT_RATE parameter do not create the problem described. By setting the parameter SCHED_LOOP_RATE to 800 , every combination with the parameter SERVO_DSHOT_RATE create the described problem. With Copter-4.2.3, on the other hand, there was never any problem even keeping the parameter to SCHED_LOOP_RATE set to 800. The tests done with the various frequencies:###################### We then did various tests of combinations between the parameter SCHED_LOOP_RATE and SERVO_DSHOT_RATE and these are the results : LOOP_RATE |DSHOT_RATE |RESULT 400-------------                400---------------                  WORKING BUT ONLY 41 LED TURN ON 400-------------                800---------------                   WORKING BUT ONLY 41 LED TURN ON 400-------------                1600-------------                WORKING BUT ONLY 20 LED TURN ON 400-------------                1000-------------                WORKING BUT ONLY 32 LED TURN ON 800-------------                800---------------               DON’T WORK(CRASH) 800-------------               1000-------------              DON’T WORK(CRASH) 400-------------               1600-------------              DON’T WORK(CRASH) ######################################################################### So I ask the main developers of ardupilot to investigate about this problem to arrive at a solution . Thanks to all ",I’ve already indicated that this is a limitation due to the width of the gap between dshot pulses. You are unfortunately not going to be able to have more than 44 LEDs without major rework. There was a bug in 4.2 in this area which meant instead we could not send dshot pulses (very bad) which has been fixed in 4.3.
46,Problem in Copter 4.3 with the subsytem led preventing the drone from startup,5,"Hello everyone . I want to report an issue we are experiencing with the use of Copter-4.3. In order not to repeat myself during this post , I am giving you the link of the issue I created ( this has been added to the official issue list of Copter-4.3 by *  : * To update it to date, the problem is also present in the official Copter-4.3.1. The Issue:###################### The problem occurs on a luminousbee5 drone , which has vanilla Ardupilot Copter-4.3 firmware on it , but not with vanilla Ardupilot Copter-4.2.3 firmware. When using the led subsystem via a lua script(*),(or with other systems) , to turn on a number of leds, equal to or greater, than 44 , the entire drone stops working , thus preventing connection to it via USB or UDP with Mission Planner . As you can see from the screen below , the whole system seems to freeze or go into error , after printing the debug message from the lua script : LEDs started , and after turning on the LEDs.  I want to specify that the lua script used for this test has already been tested and is working with Copter 4.2.3. The possible problem and the partial solution found : ###################### By researching various parameters in Ardupilot we realized , that by varying a particular parameter the problem is triggered . The parameter is SCHED_LOOP_RATE , if this parameter is set to 800 , the problem I described above occurs . HOWEVER , if you set this parameter to 400 , the problem disappears and the drone starts up normally.And we can connect to the drone without any problem , from Mission Planner via usb. Also with the SCHED_LOOP_RATE parameter set to 400 , every combination with the SERVO_DSHOT_RATE parameter do not create the problem described. By setting the parameter SCHED_LOOP_RATE to 800 , every combination with the parameter SERVO_DSHOT_RATE create the described problem. With Copter-4.2.3, on the other hand, there was never any problem even keeping the parameter to SCHED_LOOP_RATE set to 800. The tests done with the various frequencies:###################### We then did various tests of combinations between the parameter SCHED_LOOP_RATE and SERVO_DSHOT_RATE and these are the results : LOOP_RATE |DSHOT_RATE |RESULT 400-------------                400---------------                  WORKING BUT ONLY 41 LED TURN ON 400-------------                800---------------                   WORKING BUT ONLY 41 LED TURN ON 400-------------                1600-------------                WORKING BUT ONLY 20 LED TURN ON 400-------------                1000-------------                WORKING BUT ONLY 32 LED TURN ON 800-------------                800---------------               DON’T WORK(CRASH) 800-------------               1000-------------              DON’T WORK(CRASH) 400-------------               1600-------------              DON’T WORK(CRASH) ######################################################################### So I ask the main developers of ardupilot to investigate about this problem to arrive at a solution . Thanks to all ",yes there are two issues that are happening here. The first one is that with 4.2.3 we have 41 LEDs working even using main loop rate at 800 while with the new 4.3 it is NOT working anymore as described in this topic. That is why it might be interesting to try the new 4.3 linked above by Randy. The second issue is deeper and concerns the current limit of Ardupilot to drive more than 41-44 led with main loop 800 as you described in depth.
46,Problem in Copter 4.3 with the subsytem led preventing the drone from startup,6,"Hello everyone . I want to report an issue we are experiencing with the use of Copter-4.3. In order not to repeat myself during this post , I am giving you the link of the issue I created ( this has been added to the official issue list of Copter-4.3 by *  : * To update it to date, the problem is also present in the official Copter-4.3.1. The Issue:###################### The problem occurs on a luminousbee5 drone , which has vanilla Ardupilot Copter-4.3 firmware on it , but not with vanilla Ardupilot Copter-4.2.3 firmware. When using the led subsystem via a lua script(*),(or with other systems) , to turn on a number of leds, equal to or greater, than 44 , the entire drone stops working , thus preventing connection to it via USB or UDP with Mission Planner . As you can see from the screen below , the whole system seems to freeze or go into error , after printing the debug message from the lua script : LEDs started , and after turning on the LEDs.  I want to specify that the lua script used for this test has already been tested and is working with Copter 4.2.3. The possible problem and the partial solution found : ###################### By researching various parameters in Ardupilot we realized , that by varying a particular parameter the problem is triggered . The parameter is SCHED_LOOP_RATE , if this parameter is set to 800 , the problem I described above occurs . HOWEVER , if you set this parameter to 400 , the problem disappears and the drone starts up normally.And we can connect to the drone without any problem , from Mission Planner via usb. Also with the SCHED_LOOP_RATE parameter set to 400 , every combination with the SERVO_DSHOT_RATE parameter do not create the problem described. By setting the parameter SCHED_LOOP_RATE to 800 , every combination with the parameter SERVO_DSHOT_RATE create the described problem. With Copter-4.2.3, on the other hand, there was never any problem even keeping the parameter to SCHED_LOOP_RATE set to 800. The tests done with the various frequencies:###################### We then did various tests of combinations between the parameter SCHED_LOOP_RATE and SERVO_DSHOT_RATE and these are the results : LOOP_RATE |DSHOT_RATE |RESULT 400-------------                400---------------                  WORKING BUT ONLY 41 LED TURN ON 400-------------                800---------------                   WORKING BUT ONLY 41 LED TURN ON 400-------------                1600-------------                WORKING BUT ONLY 20 LED TURN ON 400-------------                1000-------------                WORKING BUT ONLY 32 LED TURN ON 800-------------                800---------------               DON’T WORK(CRASH) 800-------------               1000-------------              DON’T WORK(CRASH) 400-------------               1600-------------              DON’T WORK(CRASH) ######################################################################### So I ask the main developers of ardupilot to investigate about this problem to arrive at a solution . Thanks to all ","From andyp1per reply in GitHub issue : At 400Hz the maximum slot you will be allowed is 2.5ms at 800Hz maximum allowed is 1.25ms. Default dshot rate is 1Khz so maximum allowed is 1ms. Dshot is constrained to be minimum 800Hz, so you only ever get 1.25ms maximum - but you never get that because dshot pulses get prioritized over LEDs - so the most you can ever hope for is 1.25ms - dshot pulse time. And : The solution here is to have a thread-per-timer - then the LEDs can run for as long as you want without disrupting dshot"
47,Servo gripper strange behavior,1,"I have configured the gripper functionality using a servo motor and have been able to both release and grab with it successfully. However, there are two strange issues I have come across (that may be related):   Whenever the flight controller is restarted or first powering on, the gripper releases. It does so on its own, with no radio connected and the copter in a disarmed state. I would prefer not to have to reattach and re-grab the package if I attach it before powering on the controller or if I have to restart for whatever reason.   The flight controller sometimes restarts when the gripper enters the “grabbed” state. First, I noticed that the servo motor pin does not push far enough to completely and securely lock the package when grabbed, with GRIP_GRAB set to 800 (the listed PWM minimum). So, I tried lowering it to 600 and this indeed made it grab more securely but with the added effect of suddenly restarting the flight controller!   I am wondering if I am missing something in configuration or if this is a known issue perhaps caused by the flight controller I/O hardware, and if there is any workaround. Flight controller: mRo Pixracer Pro Relevant parameters: GRIP_AUTOCLOSE,0 GRIP_CAN_ID,0 GRIP_ENABLE,1 GRIP_GRAB,800 GRIP_NEUTRAL,800 GRIP_REGRAB,0 GRIP_RELEASE,1350 GRIP_TYPE,1 SERVO5_FUNCTION,28 SERVO5_MAX,1350 SERVO5_MIN,800 SERVO5_REVERSED,0 SERVO5_TRIM,800 RC5_MAX,2000 RC5_MIN,999 RC5_OPTION,19 RC5_REVERSED,0 RC5_TRIM,999 Thanks",To problem 1): If I’m not mistaken all output channels are set to high state when FC is powered on. - More info about this in the docs. 2) Sounds to me the servo is using to much current which causes a drop of voltage forcing a FC reboot. → need to have only the signal wire connected to the FC. Power the servo directly from a BEC. If you are doing this already then it may not be powerful enough or you may have to add a capacitor in the powerline of the servo in order to deal with the sudden increase of current.
47,Servo gripper strange behavior,2,"I have configured the gripper functionality using a servo motor and have been able to both release and grab with it successfully. However, there are two strange issues I have come across (that may be related):   Whenever the flight controller is restarted or first powering on, the gripper releases. It does so on its own, with no radio connected and the copter in a disarmed state. I would prefer not to have to reattach and re-grab the package if I attach it before powering on the controller or if I have to restart for whatever reason.   The flight controller sometimes restarts when the gripper enters the “grabbed” state. First, I noticed that the servo motor pin does not push far enough to completely and securely lock the package when grabbed, with GRIP_GRAB set to 800 (the listed PWM minimum). So, I tried lowering it to 600 and this indeed made it grab more securely but with the added effect of suddenly restarting the flight controller!   I am wondering if I am missing something in configuration or if this is a known issue perhaps caused by the flight controller I/O hardware, and if there is any workaround. Flight controller: mRo Pixracer Pro Relevant parameters: GRIP_AUTOCLOSE,0 GRIP_CAN_ID,0 GRIP_ENABLE,1 GRIP_GRAB,800 GRIP_NEUTRAL,800 GRIP_REGRAB,0 GRIP_RELEASE,1350 GRIP_TYPE,1 SERVO5_FUNCTION,28 SERVO5_MAX,1350 SERVO5_MIN,800 SERVO5_REVERSED,0 SERVO5_TRIM,800 RC5_MAX,2000 RC5_MIN,999 RC5_OPTION,19 RC5_REVERSED,0 RC5_TRIM,999 Thanks","I moved the servo signal wire to a different PWM output on the flight controller and it seems to have resolved the first issue. Perhaps it was crosswired somehow to one of the motor outputs, so it was receiving signal from those on startup. Not sure. Otherwise, if all the output channels are set to high state when the FC is powered on, I guess I will just have to deal with it if the problem recurs. The second problem was indeed the servo drawing too much current. It is now powered with a separate BEC and behaves normally. Thanks!"
47,Servo gripper strange behavior,3,"I have configured the gripper functionality using a servo motor and have been able to both release and grab with it successfully. However, there are two strange issues I have come across (that may be related):   Whenever the flight controller is restarted or first powering on, the gripper releases. It does so on its own, with no radio connected and the copter in a disarmed state. I would prefer not to have to reattach and re-grab the package if I attach it before powering on the controller or if I have to restart for whatever reason.   The flight controller sometimes restarts when the gripper enters the “grabbed” state. First, I noticed that the servo motor pin does not push far enough to completely and securely lock the package when grabbed, with GRIP_GRAB set to 800 (the listed PWM minimum). So, I tried lowering it to 600 and this indeed made it grab more securely but with the added effect of suddenly restarting the flight controller!   I am wondering if I am missing something in configuration or if this is a known issue perhaps caused by the flight controller I/O hardware, and if there is any workaround. Flight controller: mRo Pixracer Pro Relevant parameters: GRIP_AUTOCLOSE,0 GRIP_CAN_ID,0 GRIP_ENABLE,1 GRIP_GRAB,800 GRIP_NEUTRAL,800 GRIP_REGRAB,0 GRIP_RELEASE,1350 GRIP_TYPE,1 SERVO5_FUNCTION,28 SERVO5_MAX,1350 SERVO5_MIN,800 SERVO5_REVERSED,0 SERVO5_TRIM,800 RC5_MAX,2000 RC5_MIN,999 RC5_OPTION,19 RC5_REVERSED,0 RC5_TRIM,999 Thanks","Must have been entirely a power board issue (not able to supply enough current when the servo needed it). I am now using a different power board that is able to supply and have no issue. The servo now behaves as it should and the correct parameters have actually changed to be much higher: GRIP_GRAB,1100 GRIP_NEUTRAL,1100 GRIP_RELEASE,2000 SERVO5_MAX,2000 SERVO5_MIN,1000 SERVO5_TRIM,1500 Setting the servo_trim and grip_neutral appears to have properly caused the servo to close or remain closed on startup."
48,"Clarification of aux port ""relay"" function",1,"I’m sorting through the relay function for a camera shutter.  This is my first time since the changes in relay function since the Copter 4.1 and 4.2 changes. As I understand the wiki docs - when the “relay” is LOW, no voltage is present between the Aux port signal pin and the ground pin - and the resistance is more or less infinite. When the ""relay: goes HIGH, it presents 3v or 5v between the signal and ground pins - depending on the flight controller. When I connect a meter between the signal and ground - this what the meter shows. In testing, when the “relay” goes HIGH, the voltage is only momentary.  In fact, with my inexpensive meter, the voltage is present for such a short period of time, it doesn’t fully register. Earlier today I thought I could get a steady 3V when the relay commanded HIGH (using the Mission Planner servo/relay control screen) but I can’t seem to make it do that now - not sure why. While this function is called a “relay” - it seems to me it’s really more of a 3V/5V power switch - something that might momentarily activate a relay.  To keep the relay in the activated state, the voltage would have to stay present when the “relay” is HIGH. When connected to a circuit of the right polarity, this can appear as a “relay” because it allows current to flow - along with the voltage the Aux port presents. This is how it’s working when I have my camera shutter leads connected to the Aux port for that relay. I’ve searched the WIKI docs for a more detailed description of how this functions, but can’t seem to find anything. Is there such a document?  If now - I’d appreciate comments that help me fully understand the “relay” function. Thank you!",It is using a GPIO as a GPO so you should threat it as microcontroller output with fairly limited current capabilities. Driving small transistors or MOSFETS is fine putting a meaningful load on it is not.
48,"Clarification of aux port ""relay"" function",2,"I’m sorting through the relay function for a camera shutter.  This is my first time since the changes in relay function since the Copter 4.1 and 4.2 changes. As I understand the wiki docs - when the “relay” is LOW, no voltage is present between the Aux port signal pin and the ground pin - and the resistance is more or less infinite. When the ""relay: goes HIGH, it presents 3v or 5v between the signal and ground pins - depending on the flight controller. When I connect a meter between the signal and ground - this what the meter shows. In testing, when the “relay” goes HIGH, the voltage is only momentary.  In fact, with my inexpensive meter, the voltage is present for such a short period of time, it doesn’t fully register. Earlier today I thought I could get a steady 3V when the relay commanded HIGH (using the Mission Planner servo/relay control screen) but I can’t seem to make it do that now - not sure why. While this function is called a “relay” - it seems to me it’s really more of a 3V/5V power switch - something that might momentarily activate a relay.  To keep the relay in the activated state, the voltage would have to stay present when the “relay” is HIGH. When connected to a circuit of the right polarity, this can appear as a “relay” because it allows current to flow - along with the voltage the Aux port presents. This is how it’s working when I have my camera shutter leads connected to the Aux port for that relay. I’ve searched the WIKI docs for a more detailed description of how this functions, but can’t seem to find anything. Is there such a document?  If now - I’d appreciate comments that help me fully understand the “relay” function. Thank you!","Thanks - that confirms what I suspected. It’s not really all that important, but I’m curious why the terminology is “relay” - as the states aren’t just “open” and “closed”. I haven’t had the occasion to use them, but I have some semiconductor activated relays on my parts shelf that may work perfectly when I need a relay that handles significant load."
48,"Clarification of aux port ""relay"" function",3,"I’m sorting through the relay function for a camera shutter.  This is my first time since the changes in relay function since the Copter 4.1 and 4.2 changes. As I understand the wiki docs - when the “relay” is LOW, no voltage is present between the Aux port signal pin and the ground pin - and the resistance is more or less infinite. When the ""relay: goes HIGH, it presents 3v or 5v between the signal and ground pins - depending on the flight controller. When I connect a meter between the signal and ground - this what the meter shows. In testing, when the “relay” goes HIGH, the voltage is only momentary.  In fact, with my inexpensive meter, the voltage is present for such a short period of time, it doesn’t fully register. Earlier today I thought I could get a steady 3V when the relay commanded HIGH (using the Mission Planner servo/relay control screen) but I can’t seem to make it do that now - not sure why. While this function is called a “relay” - it seems to me it’s really more of a 3V/5V power switch - something that might momentarily activate a relay.  To keep the relay in the activated state, the voltage would have to stay present when the “relay” is HIGH. When connected to a circuit of the right polarity, this can appear as a “relay” because it allows current to flow - along with the voltage the Aux port presents. This is how it’s working when I have my camera shutter leads connected to the Aux port for that relay. I’ve searched the WIKI docs for a more detailed description of how this functions, but can’t seem to find anything. Is there such a document?  If now - I’d appreciate comments that help me fully understand the “relay” function. Thank you!",I don’t know why the name was chosen but I would expect it to be related to Arduino times heritage. Besides using a voltage controlled switch (a relay or nowadays a MOSFET) is a standard way of dealing with switching anything other than very small loads. Mavproxy uses HIGH and LOW which is appropriate for GPIOs. I used one of the AUX ports on a cube black to drive MOSFET controlling a LED (IIRC 200-300mA) worked like a charm.
48,"Clarification of aux port ""relay"" function",4,"I’m sorting through the relay function for a camera shutter.  This is my first time since the changes in relay function since the Copter 4.1 and 4.2 changes. As I understand the wiki docs - when the “relay” is LOW, no voltage is present between the Aux port signal pin and the ground pin - and the resistance is more or less infinite. When the ""relay: goes HIGH, it presents 3v or 5v between the signal and ground pins - depending on the flight controller. When I connect a meter between the signal and ground - this what the meter shows. In testing, when the “relay” goes HIGH, the voltage is only momentary.  In fact, with my inexpensive meter, the voltage is present for such a short period of time, it doesn’t fully register. Earlier today I thought I could get a steady 3V when the relay commanded HIGH (using the Mission Planner servo/relay control screen) but I can’t seem to make it do that now - not sure why. While this function is called a “relay” - it seems to me it’s really more of a 3V/5V power switch - something that might momentarily activate a relay.  To keep the relay in the activated state, the voltage would have to stay present when the “relay” is HIGH. When connected to a circuit of the right polarity, this can appear as a “relay” because it allows current to flow - along with the voltage the Aux port presents. This is how it’s working when I have my camera shutter leads connected to the Aux port for that relay. I’ve searched the WIKI docs for a more detailed description of how this functions, but can’t seem to find anything. Is there such a document?  If now - I’d appreciate comments that help me fully understand the “relay” function. Thank you!","I like knowing the history of things - it often helps fit the puzzle pieces together. When the first of the recent changes to relay function (version 4.1??) I had Naked GoPro with a Aux port controlled shutter.  That was the last time I looked into all this.  As I recall, there was an issue with how the relay functioned when the firmware booted up.  The result was that the GoPro’s shutter was activated when the ArduPilot firmware booted up.  One of the DEV’s (*  as I recall) mentioned that there’s something in the bootloader that caused this. He reported that he thought it was done that way a long time ago for some reason, but couldn’t recall what that reason was.  And because it’s in the bootloader, it can’t be simply changed in the ArduPilot firmware code. As it happened, I was using the Naked GoPro to record video - so the video would just start recording when the copter booted up.  Frequently I just left it on - and edited out the first couple of minutes before takeoff. In my present project I’m using the Aux port relay to control the shutter of a Foxtech Map-02 (a naked Sony A5100) - and it’s working fine in manual operation.  I hope it works as well with 1-second or less shutter intervals on mapping missions. One of the reasons I think it’s important to make the distinction about how the Aux port relay functions is that because it’s applying voltage, polarity may be an issue.  I think that’s the case for my Foxtech camera.  I saw nothing in the wiki that mentioned that. There are two more things I’d like to know - but aren’t essential to my project right now.  I’d like to know how to set the relay to HIIGH and have it stay at HIGH until commanded back to low. And I have I faint recollection that it’s possible to set the initial condition to either HIGH or LOW.  I may be mistaken about that - I haven’t been able to find it in the wiki. Thanks for all your help!  I appreciate it."
49,A question about MavLink versus R/C control of camera shutter,1,"As I understand the wiki docs - a “trigger camera shutter” event in ArduPilot can have multiple inputs - and multiple outputs. As inputs - either a MavLink command or a R/C channel signal can initiate the “trigger camera shutter” process. As outputs - the “trigger camera shutter” can be configured to either operate a relay, or send a PWM signal out an Main or Aux port. For a photogrammetry mission, the ArduPilot is controlling the “trigger camera shutter” process according to the mission parameters.  I don’t know if MavLink is involved or not. So here’s my question - for manual control from my HereLink, I have two choices.  I can either configure a button to send a PWM signal out a channel (probably channel 7) - or use the Apps (Solex or QGC) functions for commanding the “trigger camera shutter.” Which is better?  Or what’s the advantages of either? Right now I’m using an Aux port relay to activate my shutter.  In bench testing, when I do the “toggle” button in the Mission Planner Relay/Servo screen, it activates the shutter pretty quickly.  But when I right click on the Mission Planner map and choose the “Take Picture NOW” option - there a several second delay. So I thought it might be worth digging into this a little bit to see what the best configuration options might be. Thanks for any comments or insights.",In principle sending commands is more efficient than using whole RC channel. I would go with sending commands wherever you can. For example Herelink manual explicitly advises user not to use RC channel emulation for changing flight modes. User should use QGC or Solex to send mode change commands to FC.
50,"PreArm: ""Internal errors 0x100000 l:921 flow_of_ctrl""",1,I get the “Internal errors 0x100000 l:921 flow_of_ctrl” after some minutes of flight.  * Is this message important? Here is my log: *,"There’s some discussions and work being done on this already. I’ve found if you get that error during or after flight, you cant arm again without a power-cycle. You can try some mitigations to reduce the CPU load and long loops: EK3_IMU_MASK,3 (was 7) INS_FAST_SAMPLE,1 (was 5) INS_USE3,0 (was 1, it may even reset to 1) Separately, the quad is flying OK but you’ve got a bunch of default PID values and things - we could make that quad fly better. Yell out if you want help with that. Current monitoring would be nice if you can set that up. It’s also a bit overweight, just, so consider ways to reduce weight or make serious changes if you ever need to add payloads."
50,"PreArm: ""Internal errors 0x100000 l:921 flow_of_ctrl""",2,I get the “Internal errors 0x100000 l:921 flow_of_ctrl” after some minutes of flight.  * Is this message important? Here is my log: *,"Hello Shawn. I have a question about the EKF lanes. What amount of difference between the values of the EKF lanes is acceptable? according to the figure below, there are about 4 degrees of differences between the first and second lanes for the pitch angle. It seems that the first and third lanes have close values.  Isn’t it better to set EK3_IMU_MASK = 5?"
50,"PreArm: ""Internal errors 0x100000 l:921 flow_of_ctrl""",3,I get the “Internal errors 0x100000 l:921 flow_of_ctrl” after some minutes of flight.  * Is this message important? Here is my log: *,I would be grateful if you could guide me in this matter. I really appreciate your help.
50,"PreArm: ""Internal errors 0x100000 l:921 flow_of_ctrl""",4,I get the “Internal errors 0x100000 l:921 flow_of_ctrl” after some minutes of flight.  * Is this message important? Here is my log: *,Just to keep discussions linked we’ve got two other discussions of the Internal Error 921 * and *.
50,"PreArm: ""Internal errors 0x100000 l:921 flow_of_ctrl""",5,I get the “Internal errors 0x100000 l:921 flow_of_ctrl” after some minutes of flight.  * Is this message important? Here is my log: *,"The third IMU is not vibration-isolated in your Cube Black, making it the one least likely to be relied upon. Best to use the first two IMUs making the mask 1+2 = 3 , instead of 7 for use everything. You definitely only want to fast sample the first IMU too. Do a test flight and see if you still get the errors. As Randy mentioned there’s other discussions, and there’s work going on in the background."
50,"PreArm: ""Internal errors 0x100000 l:921 flow_of_ctrl""",6,I get the “Internal errors 0x100000 l:921 flow_of_ctrl” after some minutes of flight.  * Is this message important? Here is my log: *,I’ve placed links to some * that may help resolve these issues. No pressure of course but if people are happy to help us test these binaries that would be a great help!
51,GF: upload failed |,1,"Hello, does anyone know how to solve these errors: GF: upload failed: Generic error / not accepting mission commands at all right now. GF: upload failed: Coordinate frame is not supported. I’m using Mavros, a Mocap System to estimate position and i want to send a Polygon Fence in Local Frame NED. I initially run these commands:  roslaunch mavros apm.launch roslaunch mocap_optitrack mocap.launch rosrun topic_tools relay /mocap_node/cialdellaMav/pose /mavros/vision_pose/pose I’m able to see /mavros/local_position/pose (because I’ve enabled “vision_pose_estimate” plugin in apm_pluginlists.yaml included in mavros package)  But then i wrote this code to create a polygon fence through mavros services (Waypoint) and i obtain those errors. #!/usr/bin/env python3 import rospy from mavros_msgs.msg import Waypoint from mavros_msgs.srv import WaypointPush, WaypointClear rtl_command = 5000 vertex_inclusion_command = 5001 frame = 1 def create_polygon(): waypoint_clear() wl = [] * def waypoint_clear(): try: response = rospy.ServiceProxy(‘mavros/geofence/clear’, WaypointClear) return response.call().success except rospy.ServiceException as e: print(“Service call failed: %s” % e) return False if name == ‘main’: rospy.init_node(‘polygon_node’, anonymous=True) create_polygon() I tried a lot of “frame” in ENUM MAV_FRAME and I’ve also tried to send these messages by publishing on “mavros/geofence/waypoints” topic or by sending Mavlink messages but with no success. Please help me. Thansk in advance.",Update to ArduCopter 4.3.1 and re-test.
51,GF: upload failed |,2,"Hello, does anyone know how to solve these errors: GF: upload failed: Generic error / not accepting mission commands at all right now. GF: upload failed: Coordinate frame is not supported. I’m using Mavros, a Mocap System to estimate position and i want to send a Polygon Fence in Local Frame NED. I initially run these commands:  roslaunch mavros apm.launch roslaunch mocap_optitrack mocap.launch rosrun topic_tools relay /mocap_node/cialdellaMav/pose /mavros/vision_pose/pose I’m able to see /mavros/local_position/pose (because I’ve enabled “vision_pose_estimate” plugin in apm_pluginlists.yaml included in mavros package)  But then i wrote this code to create a polygon fence through mavros services (Waypoint) and i obtain those errors. #!/usr/bin/env python3 import rospy from mavros_msgs.msg import Waypoint from mavros_msgs.srv import WaypointPush, WaypointClear rtl_command = 5000 vertex_inclusion_command = 5001 frame = 1 def create_polygon(): waypoint_clear() wl = [] * def waypoint_clear(): try: response = rospy.ServiceProxy(‘mavros/geofence/clear’, WaypointClear) return response.call().success except rospy.ServiceException as e: print(“Service call failed: %s” % e) return False if name == ‘main’: rospy.init_node(‘polygon_node’, anonymous=True) create_polygon() I tried a lot of “frame” in ENUM MAV_FRAME and I’ve also tried to send these messages by publishing on “mavros/geofence/waypoints” topic or by sending Mavlink messages but with no success. Please help me. Thansk in advance.",Sorry for not specifying. I’m already using the latest version of Ardupilot (4.3.1) but it doesn’t work anyway.
51,GF: upload failed |,3,"Hello, does anyone know how to solve these errors: GF: upload failed: Generic error / not accepting mission commands at all right now. GF: upload failed: Coordinate frame is not supported. I’m using Mavros, a Mocap System to estimate position and i want to send a Polygon Fence in Local Frame NED. I initially run these commands:  roslaunch mavros apm.launch roslaunch mocap_optitrack mocap.launch rosrun topic_tools relay /mocap_node/cialdellaMav/pose /mavros/vision_pose/pose I’m able to see /mavros/local_position/pose (because I’ve enabled “vision_pose_estimate” plugin in apm_pluginlists.yaml included in mavros package)  But then i wrote this code to create a polygon fence through mavros services (Waypoint) and i obtain those errors. #!/usr/bin/env python3 import rospy from mavros_msgs.msg import Waypoint from mavros_msgs.srv import WaypointPush, WaypointClear rtl_command = 5000 vertex_inclusion_command = 5001 frame = 1 def create_polygon(): waypoint_clear() wl = [] * def waypoint_clear(): try: response = rospy.ServiceProxy(‘mavros/geofence/clear’, WaypointClear) return response.call().success except rospy.ServiceException as e: print(“Service call failed: %s” % e) return False if name == ‘main’: rospy.init_node(‘polygon_node’, anonymous=True) create_polygon() I tried a lot of “frame” in ENUM MAV_FRAME and I’ve also tried to send these messages by publishing on “mavros/geofence/waypoints” topic or by sending Mavlink messages but with no success. Please help me. Thansk in advance.",Please post on the correct topic. It prevents us from wasting our time asking and you answering that.
52,Copter-4.3.1 released!,1,"Copter-4.3.1. has been released as the stable version for multicopters and helicopters and can be installed using MP, QGC or downloaded directly from *. WARNING: Mission Planner has been recently updated to fix an issue downloading the firmware.  If you see a “Failed download” message please try updating Mission Planner using the Help screen’s “Check for Updates” button WARNING2: an issue has been found with the Siyi A8 support which will be fixed in 4.3.2. Changes vs 4.3.0 are in the * and also copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  Thanks again to those who provided feedback on this beta release.  Beta testing is really important actually so we very much appreciate it.",For some reason its failing to update for me.
52,Copter-4.3.1 released!,2,"Copter-4.3.1. has been released as the stable version for multicopters and helicopters and can be installed using MP, QGC or downloaded directly from *. WARNING: Mission Planner has been recently updated to fix an issue downloading the firmware.  If you see a “Failed download” message please try updating Mission Planner using the Help screen’s “Check for Updates” button WARNING2: an issue has been found with the Siyi A8 support which will be fixed in 4.3.2. Changes vs 4.3.0 are in the * and also copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  Thanks again to those who provided feedback on this beta release.  Beta testing is really important actually so we very much appreciate it.",“or downloaded directly from” * Chose your flight controller and download the .apj file. Then use Mission Planners “load custom firmware” option and chose that file.
52,Copter-4.3.1 released!,3,"Copter-4.3.1. has been released as the stable version for multicopters and helicopters and can be installed using MP, QGC or downloaded directly from *. WARNING: Mission Planner has been recently updated to fix an issue downloading the firmware.  If you see a “Failed download” message please try updating Mission Planner using the Help screen’s “Check for Updates” button WARNING2: an issue has been found with the Siyi A8 support which will be fixed in 4.3.2. Changes vs 4.3.0 are in the * and also copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  Thanks again to those who provided feedback on this beta release.  Beta testing is really important actually so we very much appreciate it.","*, Yes, you’re right, there’s an issue with MP downloading the firmware.  We’re looking into this and hopefully we can get it fixed asap. Thanks for the report."
52,Copter-4.3.1 released!,4,"Copter-4.3.1. has been released as the stable version for multicopters and helicopters and can be installed using MP, QGC or downloaded directly from *. WARNING: Mission Planner has been recently updated to fix an issue downloading the firmware.  If you see a “Failed download” message please try updating Mission Planner using the Help screen’s “Check for Updates” button WARNING2: an issue has been found with the Siyi A8 support which will be fixed in 4.3.2. Changes vs 4.3.0 are in the * and also copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  Thanks again to those who provided feedback on this beta release.  Beta testing is really important actually so we very much appreciate it.",Thank You! 
52,Copter-4.3.1 released!,5,"Copter-4.3.1. has been released as the stable version for multicopters and helicopters and can be installed using MP, QGC or downloaded directly from *. WARNING: Mission Planner has been recently updated to fix an issue downloading the firmware.  If you see a “Failed download” message please try updating Mission Planner using the Help screen’s “Check for Updates” button WARNING2: an issue has been found with the Siyi A8 support which will be fixed in 4.3.2. Changes vs 4.3.0 are in the * and also copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  Thanks again to those who provided feedback on this beta release.  Beta testing is really important actually so we very much appreciate it.",For those who are attempting to install using Mission Planner and seeing a “Failed download” message please try updating Mission Planner using the “Help” screen’s “Check for Updates” button (or alternatively “Check for BETA Updates”) 
52,Copter-4.3.1 released!,6,"Copter-4.3.1. has been released as the stable version for multicopters and helicopters and can be installed using MP, QGC or downloaded directly from *. WARNING: Mission Planner has been recently updated to fix an issue downloading the firmware.  If you see a “Failed download” message please try updating Mission Planner using the Help screen’s “Check for Updates” button WARNING2: an issue has been found with the Siyi A8 support which will be fixed in 4.3.2. Changes vs 4.3.0 are in the * and also copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  Thanks again to those who provided feedback on this beta release.  Beta testing is really important actually so we very much appreciate it.",This fixed my issue.  Updating MP from 1.3.78 to 79 worked. Thx!
52,Copter-4.3.1 released!,7,"Copter-4.3.1. has been released as the stable version for multicopters and helicopters and can be installed using MP, QGC or downloaded directly from *. WARNING: Mission Planner has been recently updated to fix an issue downloading the firmware.  If you see a “Failed download” message please try updating Mission Planner using the Help screen’s “Check for Updates” button WARNING2: an issue has been found with the Siyi A8 support which will be fixed in 4.3.2. Changes vs 4.3.0 are in the * and also copied below  Autopilot specific enhancements a) ARKV6X support b) MatekH743 supports 8 bi-directional dshot channels c) Pixhawk boards support MS5607 baros d) SpeedbyBee F405v3 support DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings EFI support (electronic fuel injection engines) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN Siyi gimbal support Bug fixes a) Arm check warning loses duplicate “AHRS” prefix b) AtomRCF405NAVI bootloader file name fixed c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU d) Compass calibration continues even if a single compass’s cal fails e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter g) Mode change to AUTOTUNE message shortened h) OSD stats screen fix i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last) j) RunCam caching fix with enablement and setup on 3-pos switch k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot l) SkyViper GPS fix m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)  Thanks again to those who provided feedback on this beta release.  Beta testing is really important actually so we very much appreciate it.","hi all, i discovered a “weird” behaviour in GUIDED mode while playing with SITL (with latest dev, actually. I don’t have opportunity to test it on 4.3.1 currently) and QGroundControl as GCS: if i click somewhere on the map and confirm “go here”, then, while quad is still moving, i click on Action button and change altitude, quad executes altitude change correctly but also turns itself 180° and goes back for some meters, then stops. If i comand stop guided before changing altitude, it does not show this behaviour. I don’t know if it a “feature” for something i don’t grasp or a bug"
53,A battery issue? Battery % drops like lead,1,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",What BATT params have you got?
53,A battery issue? Battery % drops like lead,2,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I’m not sure which ones, so here’s everything that comes up after searching for “batt”:"
53,A battery issue? Battery % drops like lead,3,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","One thing that looks wrong is that both battery monitors are using the same pin 14. BATT_VOLT_PIN and BATT2_VOLT_PIN should not be the same, try setting one of them to pin 13."
53,A battery issue? Battery % drops like lead,4,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I haven’t tried this yet… Honestly, I’m scared to.  Will pin 13 monitor my voltage correctly, even though I’m using Cube orange?  Did you also notice that my current pins for each battery monitor are the same (pin 15: Cube Orange)  What about those?  It seems like changing t he pins would also require re-wiring to the new pin designations?  Maybe I do not understand correctly… What exactly am I doing when I designate a new pin for voltage monitoring?  It seems like that is telling the flight controller to monitor a different pin, which is going to be something different, or basically read from a different wire/pin…  I’m researching it, but it is not clear to me yet."
53,A battery issue? Battery % drops like lead,5,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",What * pointed to you is that you are probably misconfiguring your battery monitor parameters… you can’t assign the same pin for two monitors (considering you have two different monitors).
53,A battery issue? Battery % drops like lead,6,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",If you’ve got a Mauch voltage and current sensor why have two different sensors configured in Ardupilot?
53,A battery issue? Battery % drops like lead,7,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I have two Mauch sensors; one for each battery.  Exactly this setup: When I went to configure the Battery Monitors in Mission Planner, for the first battery monitor, there is no option for “Cube Orange,” so I selected (as per instructions at Mauch) “Analog voltage and current.” For the second battery monitor, “Cube Orange” is what I’ve selected for both Volt Pin and current pin: Which brings to me to what * and * have brought up regarding the volt pin: I get what you’re saying about specifying the same volt pin for both battery monitors.  Before I change it though, I not noticed that I have also specified the same current pin for each monitor.  So when I change the volt pin, shouldn’t I also change the current pin for one of the monitors?  Otherwise it would be trying to monitor current for both from the same pin, but voltage for each from different pins…?  Then how can I be sure that pin 13 is the correct pin, and what pin for current on the second monitor if in fact I should change it.  I’m not understanding about the pin assignments.  Over at Cubepilot: * I’m seeing different pin numbers for each power connection, both connections only having pins1-6, so pins 13, 14, or 15 just are not making sense to me as to what those numbers are relating to exactly, and what I am doing when specifying the pins.  I’m thinking I’ve entered my battery monitoring settings incorrectly all the way around, as far as what I should have selected in Mission Planner."
53,A battery issue? Battery % drops like lead,8,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","OK then ! If you have the two current/voltage sensors plugged into a Sensor Hub, and that into Power 1 - then you effectively only have one current and voltage sensor. The Mauch instructions say to average the two voltage values supplied, and add the current values supplied.  Voltage divider = (Voltage divider sensor 1 + Voltage divider sensor 2) / 2 Amp/ Volt = Amp/V Sensor 1 + Amp/V Sensor 2  Put these calculated values into BATT_AMP_PERVLT BATT_VOLT_MULT Disable BATT2 by setting BATT2_MONITOR,0 The backup BEC can still plug into Power2 but doesnt need voltage and current monitoring. Just for reference, these are the BATT2 pins for Cube Orange BATT2_CURR_PIN 4 BATT2_VOLT_PIN 13"
53,A battery issue? Battery % drops like lead,9,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","Yep…  I read those instructions at one time,  but I know when I actually installed and went to configure I forgot all about them and was not factoring the sensor hub into the drone.  Forgot all about it, even while trying to solve it.  Thank you, thank you. In case I run into this issue on my next drone, and for anyone else trying to solve the same issue, I like to post the link to what I missed/solution.  Those instructions, not to be overlooked, are at: I think I’m ready for my first test flight (celebration time)"
53,A battery issue? Battery % drops like lead,10,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","Please, don’t forget to follow all instructions here: *"
53,A battery issue? Battery % drops like lead,11,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","For sure.  I’ve already gone over it several times, and I will go over it again to be certain.  Plus, I’ll check through everything; hardware and software… and I’ll be doing some ground testing before any taking off.  I’ve been working on this thing (and a couple others) off and on for about 3 years now, so you could say I’m not in a hurry, nor am I in any hurry to crash it due to not preparing."
53,A battery issue? Battery % drops like lead,12,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","Actually I spoke too soon. It’s not fixed. I still get my battery percentage dropping at almost 1% per second. This continues until I unplug it. Then when I plug it back in, it’s back at 90%. My battery works fine on my other copter and does not have the same problem. The .params for it are nearly identical. (my params:) s1000 (copter I’m working on): * (17.6 KB) s900 (other copter): * (17.5 KB)"
53,A battery issue? Battery % drops like lead,13,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I wouldnt worry about trying to enable the second battery monitor, not sure why MP would freeze up. I would have used the Full Parameter Tree anyway. In both those sets of parameters you have the low and critical mahr values crazy low! Around 80% of battery capacity used would be more typical. Like 20000 x 0.2 (20% remaining) = 4000 Have you checked that BATT_AMP_PERVLT is accurate? Here’s how to adjust your Amps Per Volt  Plug in a fresh battery and do a hover flight for 5 minutes or until you’ve used a signifcant amount of battery capacity Immediately unplug the battery and charge it, note how many mah’s it took to charge. Let’s say that was 1,500 mah Download your log and look at maximum CurrTot. Let’s say it was 1,300 mah Get your existing BATT_AMP_PERVOLT setting from Mission Planner  NEW_AMPS_PER_VOLT = OLD_AMPS_PER_VOLT x CHARGED_MAH / LOGGED_MAH With my example numbers, you’d get NEW_AMPS_PER_VOLT = 17 x 1,500 / 1,300 = 19.61  Set the new value in the BATT_AMP_PERVOLT parameter and save to your copter Fly to check, repeat until you’re happy the new value gives consistent readings "
53,A battery issue? Battery % drops like lead,14,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",this is different than what is expressed on the calibration wiki by *. will this result in similar or better calibration?     
53,A battery issue? Battery % drops like lead,15,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","Better - calibrating this way gives a surprisingly accurate BATT_AMP_PERVOLT For the test flights, mainly just hover, you want a constant current draw. It’s not so bad with a Mauch or other hall sensor where they can measure low currents accurately, but it cant hurt to verify."
53,A battery issue? Battery % drops like lead,16,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",cool I have always done it the old sketchy way spinning props upside down. Always worried the hell out of me doing it that way. You should maybe add a wiki entry for this method I think the community would greatly benefit from this method it seems much safer than flipping the props and spinning them up.
53,A battery issue? Battery % drops like lead,17,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I was only doing that to get the BATT2_CURR_PIN & BATT2_VOLT_PIN to show up.  Not having a Battery Monitor2 setup seems to have removed these params.  When I search for either, they do not exist in my list of params.  I was trying to enable them to check the pins (even though I’m not using them - I thought they could be conflicting if improperly set.) Thanks - I will update these to something more reasonable. Yes:  I can’t sly yet.  I can’t even arm.  This problem started when I went from a 1 battery system to a 2 battery system, or possibly in the upgrade to ArduCopter 4.3.  Before that I was ready to fly."
53,A battery issue? Battery % drops like lead,18,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I just discovered that I’ve not calculated my amps per volt correctly.  The instructions at Mauch say to add them, not average them, which is what I did for both the voltage divider and amps per volt. "
53,A battery issue? Battery % drops like lead,19,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",That was my next point - adding the Amps Per Volt values It looked suspicious in the params
53,A battery issue? Battery % drops like lead,20,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I adjusted the amps/volt, but still… My battery percentage still drops at a rate of about 1% per second.  My other copter, configured almost exactly the same, doesn’t have the problem using the same battery.  I’ve tried comparing params to find the difference without any luck finding anything. My params: S1000 (copter with problem): * (17.6 KB) s900 (copter without problem): * (17.5 KB)"
53,A battery issue? Battery % drops like lead,21,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",it could be a faulty item if all parameters are the same
53,A battery issue? Battery % drops like lead,22,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",I thought everybody did it the charged vs logged ratiometric way. I have seen this being described since 2015.
53,A battery issue? Battery % drops like lead,23,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",per the wiki that is not how the ardu team has asked to calibrate them so if that’s the better way and we want to keep pushing folks to the wiki it needs to be added. I have never done it this way so I am not the right person to add it to the wiki. Just because its described does not mean everyone has done it this way especially when the definitive source is the wiki doesn’t explain it that way.
53,A battery issue? Battery % drops like lead,24,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I too am not sure why it appears to be dropping so fast. What is the current draw while powered by battery? No USB cable connected I still think you need to set something like these, even bump them all up another 10% for extra safety BATT_ARM_MAH,6000 (70%) BATT_LOW_MAH,4000 (80%) BATT_CRT_MAH,2000 (90%) The values you have would kill the battery if the voltage levels werent set correctly."
53,A battery issue? Battery % drops like lead,25,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I think you’re right about a hardware issue; specifically my connecting of the new power modules and sensor hub.  On one copter, I did the wiring as sleekly as possible, nice and fitted, but on the copter experiencing the problem, I spliced the BEC wires in two places to lengthen it.  Then I added AS-150 connectors in between the sensors and another set of connectors to a y connector (so I could remove the “y” any time.)  Maybe all that wire and solder (and I also probably overdid it on the soldering) is causing resistance or somehow a problem.  The wiring bothers me a bit anyway, so I will redo the wiring. The params are so close to the same at this point that I’ve eliminated any other possible problem as far as I or anyone else seems to be able to tell. problem copter: * (17.6 KB) no problem copter: * (17.5 KB)"
53,A battery issue? Battery % drops like lead,26,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","I’ll check this out before I redo the wiring. Don’t worry, I’m only keeping them low for testing since the voltage drops so fast that I can’t even try to arm because of battery failsafe.  Before I fly, I will set these to reasonable levels and double check all my failsafes (again.)  Thanks to your posting it, I won’t forget. I’ll try this method once I get it airborn.  I am guessing that the reason it is more precise than the actual measurements from Mauch has something to do with the battery used, wiring, etc. of the entire system in use."
53,A battery issue? Battery % drops like lead,27,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",My issue has been resolved… But now you’ve got me thinking if I need the sensor hub at all and in fact if I am losing redundancy by using it?  Are you implying that I could choose to abandon the sensor hub and instead let Arducopter (by configuring two battery monitors) handle it?
53,A battery issue? Battery % drops like lead,28,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",I think it will be best to retain the sensor hub. Only remove it if you really need to save the weight.
53,A battery issue? Battery % drops like lead,29,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?",what resolved this issue? was it a setting or wrong number in a setting?
53,A battery issue? Battery % drops like lead,30,"When I go to arm, while awaiting prearm checks, the percentage on my battery drops ridiculously fast, yet the voltage stays the same.  I’ll start up and Yaapu reports my battery at 90%, then seconds later, I get an 80% alert, and by the time it acquires home, my battery is being reported at about 30% or less. If I disconnect and reconnect the battery, it starts at 90% again and drops fast again. My power setup is a dual 6s 10000 mAh lipo’s through: (2) Mauch 082: 2-6S BEC (2) Mauch 076: HS-200-HV I (think) I have this setup corectly: Battery Monitor 1:  *  Battery Monitor 2: * I also use two FLVSS voltage meters, which report expected voltages for each cell at about 4.2. So as far as I can tell, I am getting incorrect percentage readings only, but it is stopping me from being able to arm.  How does this make sense?","No, a wiring problem.  Too long wires, too many connectors and solder.  I mounted the BEC’s closer to the sensor hub and removed my convenience connectors that I had wired in.  I tested it today with a battery and it stayed firm at 99%. Ok.  I take it that the Mauch is more reliable than the Cube, handles the input better, is calibrated better or something?   I suppose the chances of a sensor hub failing might be less than a carrier board failing.  The reason I added the sensor hub and second sensor was because I want redundancy.  I’ve still got another 2 or 3 lbs payload capacity, so weight isn’t a concern."
54,Changing motor pin,1,"Hi everyone, I’m having trouble getting signal from the 1st motor pin. Each time I pug the battery I’m getting throttle inconsistent error from the 1st esc. Rest of the pins works as intended. In the past I had an accident and crashed my drone. Wasn’t a huge crash but while doing safety checks after the crash I plugged the battery and 1st motor got fried few seconds later (Full on black smoke). I assume it got damaged and short circuited when I plugged the battery. Anyway while I was changing the motor with a new one I also noticed that the ground cable which is located between my cube orange and esc was melted. I suspect the burning motor damaged the 1st motor pin since now I started to get error from the esc that I connected to the 1st pin. Long story short is there a way to get the 1st motor signal from one of the other motor pins that I’m not currently using (it’s a quad so 5th to 8th pins are empty)? I assume the servo output section is the place that I can do it but couldn’t decide if I should select 1st position as motor 5 or disable the 1st position and enable the 5th position as motor 1. Latter makes more sense but I just wanted to double check and ask for second opinion. Also is there a way for me to fix the 1st pin or is it just dead now? In addition to that is there a guide that you guys can recommend for the safety checks that I should do before flying again? I hope this would be an opportunity for everyone to learn from my mistakes as much as I can. Thanks for the answers in advance.",* Move it to any available output and set SERVOx_FUNCTION to that motor. * Probably not.
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",1,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","Need more info, like the flight controller, the Mount details and so on. Ideally set LOG_DISARMED,1 and reproduce the error then set LOG_DISARMED,0 Let’s see that .bin log. If you’ve got a Pixhawk1-1M or similar there are some features disabled in the newer firmware versions, you can use the custom firmware builder to add in required features - if that is the issue."
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",2,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.",I’m using an orange cube on an octocopter.  I’m not sure what you mean by “mount details” though… Here’s my log file: .bin: * .log: *
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",3,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","Problem still exists (thought I had it solved briefly)  I tried loading the old firmware version, and did not get the prearm warning."
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",4,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","An example of a mount is a gimbal, do you have any such gear mounted?"
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",5,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","No; I don’t think so.  I do have landing gear connected.  I tested it, and it’s working fine.  At one time I was also trying to get my gimbal working on it (without siccess,) so it’s possible I’ve adjusted something in the past with a gimbal.  Do you have suggestions of paramaters I should check? Here’s a look at my “Camera Gimbal” settings.  Notice that for “type” there are no options "
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",6,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","I haven’t looked at the mount parameters. We’ll probably have to wait until Xfacta answers, he might have used the mount feature before"
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",7,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","* (18.2 KB) I uploaded my params, in case it’s useful."
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",8,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","Change MNT1_TYPE,6 (Gremsy) to MNT1_TYPE,0 (none) or something else like 1 (servo) if you are going to set it up. You should be able to stay with the latest stable firmware"
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",9,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","This is a slightly old thread now but just to explain what happened, in 4.3 we improved the gimbal drivers a lot including adding health reporting.  Because MNT1_TYPE was set to a non-zero number AP was expecting a gimbal and when it couldn’t find it, it threw up the arming error."
55,"After Upgrading to 4.3 stable, I get: ""Prearm: Mount not healthy""",10,"I upgraded my firmware on my board, and now I get a new prearm message that: “Pre-arm: Mount not healthy” This doesn’t seem right.  The last time I tried arming it, I didn’t get any warning about a mount not being healthy, and haven’t flown it.","This was how to satisfy the warning, so it’s clear: Thanks for clarifying.  I’m sure anyone else experiencing a mount that they had partially setup in the old firmware will appreciate it as much as I do."
56,Some questions about my quad,1," Can uncalibrated ESC’s take away from radio TX resolution?  Was flying the other day and it was extremely difficult for me to find a steady hover in stabilize mode.  The tiniest amount of stick movement would make the quad either go up or down almost as if there were no in between or hover point. Is MOT_THST_EXPO a set in stone value for a given prop, or can I play around with this value? Is is ok to disable the IMU temp prearm check?  BRD_HEAT_TEMP  Thanks! ~Zach","1.That is typical of Stabilize mode, nothing to do with ESC calibration. Use Loiter mode, there are several parameters associated with Loiter that can be set to your liking. 2. Unless you have a thrust stand the suggested value works for most applications. There is some question about some T-Motor ESC’s related to perceived internal thrust linearization. 3. Why do that? Have your performed the IMU Temperature Calibration assuming your Flight Controller supports it? *"
56,Some questions about my quad,2," Can uncalibrated ESC’s take away from radio TX resolution?  Was flying the other day and it was extremely difficult for me to find a steady hover in stabilize mode.  The tiniest amount of stick movement would make the quad either go up or down almost as if there were no in between or hover point. Is MOT_THST_EXPO a set in stone value for a given prop, or can I play around with this value? Is is ok to disable the IMU temp prearm check?  BRD_HEAT_TEMP  Thanks! ~Zach",Leonard Hall explained setting and testing MOT_THST_EXPO  set too high you can see instability at low throttle set too low you can see instability at high throttle 
56,Some questions about my quad,3," Can uncalibrated ESC’s take away from radio TX resolution?  Was flying the other day and it was extremely difficult for me to find a steady hover in stabilize mode.  The tiniest amount of stick movement would make the quad either go up or down almost as if there were no in between or hover point. Is MOT_THST_EXPO a set in stone value for a given prop, or can I play around with this value? Is is ok to disable the IMU temp prearm check?  BRD_HEAT_TEMP  Thanks! ~Zach","*  I was curious because I had thought my ESC’s calibrated correctly through MP.  They didnt.  So I calibrated them manually with a frsky receiver I had laying around.  This actually worked since my motors now respond at the very bottom of the stick range.  And not only that, when testing the motors at the bench they spin and “sound” much smoother whereas before the calibration they sounded like they were screeching when raising the throttle.  It also feels like its using more of the throttle range. As for the IMU temp, I had to wait and use a good 10-15 mins of battery power before flight to warm up the IMU.  It was about 30-35° outside.  Will the calibration solve this problem?"
56,Some questions about my quad,4," Can uncalibrated ESC’s take away from radio TX resolution?  Was flying the other day and it was extremely difficult for me to find a steady hover in stabilize mode.  The tiniest amount of stick movement would make the quad either go up or down almost as if there were no in between or hover point. Is MOT_THST_EXPO a set in stone value for a given prop, or can I play around with this value? Is is ok to disable the IMU temp prearm check?  BRD_HEAT_TEMP  Thanks! ~Zach","I don’t have direct experience with a board heated IMU but on other IMU’s this has helped when there is a large temperature differential from arming thru flight. So, my thought was if you are going to set a lower BRD_HEAT_TARGET value it will better compensate for the higher range of temperature. I let my craft soak in a freezer and then run the compensation."
56,Some questions about my quad,5," Can uncalibrated ESC’s take away from radio TX resolution?  Was flying the other day and it was extremely difficult for me to find a steady hover in stabilize mode.  The tiniest amount of stick movement would make the quad either go up or down almost as if there were no in between or hover point. Is MOT_THST_EXPO a set in stone value for a given prop, or can I play around with this value? Is is ok to disable the IMU temp prearm check?  BRD_HEAT_TEMP  Thanks! ~Zach",Does the board have to be powered by the battery or just the USB after taking it out of the freezer and running the calibration?
56,Some questions about my quad,6," Can uncalibrated ESC’s take away from radio TX resolution?  Was flying the other day and it was extremely difficult for me to find a steady hover in stabilize mode.  The tiniest amount of stick movement would make the quad either go up or down almost as if there were no in between or hover point. Is MOT_THST_EXPO a set in stone value for a given prop, or can I play around with this value? Is is ok to disable the IMU temp prearm check?  BRD_HEAT_TEMP  Thanks! ~Zach","That might depend on the Flight Controller whether that will make a difference. On small boards with BECS and an OSD chip heating things up you want the battery connected. Or if it’s a FC/ESC stack, you want the battery connected. If it will heat up the Flight Controller you want it connected. Make sure once you start the procedure you don’t move it. And as per the Wiki if it has a board heater set it high for the test to get things cooking."
56,Some questions about my quad,7," Can uncalibrated ESC’s take away from radio TX resolution?  Was flying the other day and it was extremely difficult for me to find a steady hover in stabilize mode.  The tiniest amount of stick movement would make the quad either go up or down almost as if there were no in between or hover point. Is MOT_THST_EXPO a set in stone value for a given prop, or can I play around with this value? Is is ok to disable the IMU temp prearm check?  BRD_HEAT_TEMP  Thanks! ~Zach",Its the pixhawk cube black
56,Some questions about my quad,8," Can uncalibrated ESC’s take away from radio TX resolution?  Was flying the other day and it was extremely difficult for me to find a steady hover in stabilize mode.  The tiniest amount of stick movement would make the quad either go up or down almost as if there were no in between or hover point. Is MOT_THST_EXPO a set in stone value for a given prop, or can I play around with this value? Is is ok to disable the IMU temp prearm check?  BRD_HEAT_TEMP  Thanks! ~Zach",Did a temp calibration and I like to think I did it the right way.  INS_TCAL_ACC and INS_TCAL_GYR now showing all custom calibrated values.  So Im assuming this is correct.
57,Troubleshooting X-axis vibration,1,"I’m troubleshooting x-axis vibration on a re-engineered Hexsoon TD-650. The first version of this copter didn’t have this problem.  The Cube/carrier board mounting has not changed.  What has changed is:  4-in-1 ESC instead of 4 standard PWM ESC. Replaced Crossfire Diversity receiver and RFD900x with HereLink. Relocated the battery from a plate on standoffs above the top plate to a mount below the bottom plate.  I’ve tried to identify possible causes of frame issues such as how things are mounted - and added some rigidity in several places that seemed suspect…  I even tried re-installing the top battery plate, and using a thicker plate for the battery mount. What has worked the best was I installed 8 additional standoffs between the top and bottom plates - that cut the X-axis vibration substantially - but it’s still higher than I’d prefer. Attached is a vibe graph, photos of the copter, and an upload of the test flight used for the vibe graph. I’d appreciate suggestions on where to further investigate. Many Thanks! * * * *","When it’s just one axis the problem is usually something like wires pulled tight in one direction, or something rubbing against the FC. If it was motor or prop balance you’d expect to see vibes in X and Y of nearly equal amounts."
57,Troubleshooting X-axis vibration,2,"I’m troubleshooting x-axis vibration on a re-engineered Hexsoon TD-650. The first version of this copter didn’t have this problem.  The Cube/carrier board mounting has not changed.  What has changed is:  4-in-1 ESC instead of 4 standard PWM ESC. Replaced Crossfire Diversity receiver and RFD900x with HereLink. Relocated the battery from a plate on standoffs above the top plate to a mount below the bottom plate.  I’ve tried to identify possible causes of frame issues such as how things are mounted - and added some rigidity in several places that seemed suspect…  I even tried re-installing the top battery plate, and using a thicker plate for the battery mount. What has worked the best was I installed 8 additional standoffs between the top and bottom plates - that cut the X-axis vibration substantially - but it’s still higher than I’d prefer. Attached is a vibe graph, photos of the copter, and an upload of the test flight used for the vibe graph. I’d appreciate suggestions on where to further investigate. Many Thanks! * * * *","Hmmm… I had considered the wiring to the carrier board.  I thought it was OK, but I’ve re-routed them a bit - and made them as “loose” as I could manage.  I also re-balanced the props - one was just slightly out of balance. The result was about the same - if there is an improvement - it’s just marginal. Interesting that the 3rd IMU (hard mounted in the Cube as I recall) has significantly less vibration than the 1st and 2nd. I use the 3M mounting tape pads that came with the Cube - I’m wondering if I need to remove them and just use some VHB tape to mount the carrier board directly to the frame.  The 3M mounting tape pads have worked OK for me before. I’m also wondering if maybe there’s something a little loose in the carrier board itself.  And there is the ADSB antenna.  I’m wondering if I ought to tape it down to the side of the carrier board - as I’m not using ADSB. The “mean” vibes are all below 30 - which I’ve read is acceptable.  The 3rd IMU’s vibes are all below 25. It’s the peaks of the x-axis vibes that catch my attention - they aren’t uniform - there are in peaks every 2 to 5 seconds - not uniform.  It’s like something is loose that bangs around occasionally. My next step is to do an auto-tune - so I think I’ll go ahead and do that tomorrow.  It will be interesting to see if goes OK. Thanks for taking a look - I really appreciate your help.  If anything else comes to mind, I’d appreciate any thoughts you might have."
57,Troubleshooting X-axis vibration,3,"I’m troubleshooting x-axis vibration on a re-engineered Hexsoon TD-650. The first version of this copter didn’t have this problem.  The Cube/carrier board mounting has not changed.  What has changed is:  4-in-1 ESC instead of 4 standard PWM ESC. Replaced Crossfire Diversity receiver and RFD900x with HereLink. Relocated the battery from a plate on standoffs above the top plate to a mount below the bottom plate.  I’ve tried to identify possible causes of frame issues such as how things are mounted - and added some rigidity in several places that seemed suspect…  I even tried re-installing the top battery plate, and using a thicker plate for the battery mount. What has worked the best was I installed 8 additional standoffs between the top and bottom plates - that cut the X-axis vibration substantially - but it’s still higher than I’d prefer. Attached is a vibe graph, photos of the copter, and an upload of the test flight used for the vibe graph. I’d appreciate suggestions on where to further investigate. Many Thanks! * * * *",I taped down the ADSB antenna - and it helped quite a bit. I still have those odd spikes though.
57,Troubleshooting X-axis vibration,4,"I’m troubleshooting x-axis vibration on a re-engineered Hexsoon TD-650. The first version of this copter didn’t have this problem.  The Cube/carrier board mounting has not changed.  What has changed is:  4-in-1 ESC instead of 4 standard PWM ESC. Replaced Crossfire Diversity receiver and RFD900x with HereLink. Relocated the battery from a plate on standoffs above the top plate to a mount below the bottom plate.  I’ve tried to identify possible causes of frame issues such as how things are mounted - and added some rigidity in several places that seemed suspect…  I even tried re-installing the top battery plate, and using a thicker plate for the battery mount. What has worked the best was I installed 8 additional standoffs between the top and bottom plates - that cut the X-axis vibration substantially - but it’s still higher than I’d prefer. Attached is a vibe graph, photos of the copter, and an upload of the test flight used for the vibe graph. I’d appreciate suggestions on where to further investigate. Many Thanks! * * * *",I finally resolved my X-Axis vibration problem by setting my antenna to the 25 degree position so that they are pointed under the center of the copter. I don’t know if this helps because of geometry - or maybe because it keeps the antenna out of the prop wash.  But I now have no more spikes above 30.
57,Troubleshooting X-axis vibration,5,"I’m troubleshooting x-axis vibration on a re-engineered Hexsoon TD-650. The first version of this copter didn’t have this problem.  The Cube/carrier board mounting has not changed.  What has changed is:  4-in-1 ESC instead of 4 standard PWM ESC. Replaced Crossfire Diversity receiver and RFD900x with HereLink. Relocated the battery from a plate on standoffs above the top plate to a mount below the bottom plate.  I’ve tried to identify possible causes of frame issues such as how things are mounted - and added some rigidity in several places that seemed suspect…  I even tried re-installing the top battery plate, and using a thicker plate for the battery mount. What has worked the best was I installed 8 additional standoffs between the top and bottom plates - that cut the X-axis vibration substantially - but it’s still higher than I’d prefer. Attached is a vibe graph, photos of the copter, and an upload of the test flight used for the vibe graph. I’d appreciate suggestions on where to further investigate. Many Thanks! * * * *","The frame is still making high vibration, As a frame builder i would add one more connection to the CF arms in the center hub, shorten the arms sliding them into the hub. Then reducing the landing post 40%  Your right buy mounting the FC with tape. My 2 cents. When I was a carpenter the rule was to have 70% connection with 30% overhang."
58,How to prevent arming with too few satellites,1,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.","Yes, activate and configure the fence. That will prevent arming until GNSS has a solid fix."
58,How to prevent arming with too few satellites,2,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.","Thanks amilcarlucas, I think I’ve got it:  If I set a fence (any fence) my copter won’t arm until it gets good GPS? So for my situation where I don’t necessarily want to restrict my flying area, I can simply set a height fence higher than my normal flying height and higher than my RTL height parameter."
58,How to prevent arming with too few satellites,3,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.","yes, that is how it works."
58,How to prevent arming with too few satellites,4,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.","I’ve just finished setting up a fence on my TRex 500 heli.  What’s not clear to me is, if my heli crosses the fence while in Stabilise mode, and triggers RTL (or land), can I take control again once the heli is back within the fence, before it gets back to the launch point? The wiki says, “If you really want to override the fence, you should be ready to switch the flight mode twice …”.  Does that mean that if I switch to POS HLD and back to STAB a couple of times it will cancel the RTL fence action and give me manual control?"
58,How to prevent arming with too few satellites,5,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.","Yes, that is what it means. But you should test it anyways"
58,How to prevent arming with too few satellites,6,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.","After it’s in RTL I think it behaves like any other RTL circumstance whether Fence is active or not. Switch out to another mode, any mode, and fly it."
58,How to prevent arming with too few satellites,7,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.","Thank you amilcarlucas for the confirmation. Dave, I understand I can switch in and out of RTL mode manually, but I was concerned that it might behave differently if RLT has been triggered by Arducopter while my Tx switch is in a different mode, such as Stabilise.  As suggested above, I’ll try it next time I’m at the flying field."
58,How to prevent arming with too few satellites,8,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.",* Doesn’t matter. It’s change in mode that is detected and then switched to the new mode selected.
58,How to prevent arming with too few satellites,9,"In bench testing I’ve noted that I can arm and commence flight in Stabilise mode even though my GPS doesn’t have a solid fix.   I’d like to be able to prevent that, so is there a parameter that will do the job?  AHRS_GPS_MINSATS is set to 6, but this doesn’t prevent arming and spool-up when flying in stabilise mode.","Ok, understood.  Thank you Dave."
59,Siyi gimbal control using MAVLink commands,1,"This is a discussion moved * where * says,  there is 1 more bug in * function implementation. Flags (0=Yaw is body-frame/follow, 16=Yaw is earth-frame/lock) - this FLAG is not correctly handled. Actually it is treated as Yaw angle.  *, Thanks again for the report.  I had a look through the code and I don’t immediately see any errors but of course that doesn’t mean that there aren’t any. I guess you are testing sending mavlink messages to AP using a custom application or maybe MAVProxy?  I would like to rule out a ground station issue so I wonder if you could test using MAVProxy and ideally use * that can be copy-pasted directly into MAVProxy’s terminal window.","I’ve tried to use pymavlink directly with UART My code sample is: drone = mavutil.mavlink_connection(serialName, baud=9600) drone.mav.request_data_stream_send(drone.target_system, drone.target_component, mavlink1.MAV_DATA_STREAM_POSITION, 10, 1) drone.mav.request_data_stream_send(drone.target_system, drone.target_component, mavlink1.MAV_DATA_STREAM_RC_CHANNELS, 50, 1) drone.wait_heartbeat() drone.mav.command_long_send(drone.target_system, drone.target_component, mavlink1.MAV_CMD_DO_GIMBAL_MANAGER_PITCHYAW, 0, -90, 0, float(“NaN”), float(“NaN”), 16, 0, 0) So that FLAG=16 - controls yaw, not lock gimbal as described in doc. It is supposed to be bug."
59,Siyi gimbal control using MAVLink commands,2,"This is a discussion moved * where * says,  there is 1 more bug in * function implementation. Flags (0=Yaw is body-frame/follow, 16=Yaw is earth-frame/lock) - this FLAG is not correctly handled. Actually it is treated as Yaw angle.  *, Thanks again for the report.  I had a look through the code and I don’t immediately see any errors but of course that doesn’t mean that there aren’t any. I guess you are testing sending mavlink messages to AP using a custom application or maybe MAVProxy?  I would like to rule out a ground station issue so I wonder if you could test using MAVProxy and ideally use * that can be copy-pasted directly into MAVProxy’s terminal window.","So to be clear, setting the flags to 0 or 16 will affect how the yaw angle (param2) will be interpreted.  If flags is 0 then the yaw angle will be interpreted as a body-frame angle (e.g. 0=point forward), if flags is 16 then yaw angle will be interpreted as an earth-frame angle (e.g.  0 = North). Maybe this is where the confusion is coming in? If not, could you please describe what yaw issue you are seeing?  Perhaps provide an onboard log…"
59,Siyi gimbal control using MAVLink commands,3,"This is a discussion moved * where * says,  there is 1 more bug in * function implementation. Flags (0=Yaw is body-frame/follow, 16=Yaw is earth-frame/lock) - this FLAG is not correctly handled. Actually it is treated as Yaw angle.  *, Thanks again for the report.  I had a look through the code and I don’t immediately see any errors but of course that doesn’t mean that there aren’t any. I guess you are testing sending mavlink messages to AP using a custom application or maybe MAVProxy?  I would like to rule out a ground station issue so I wonder if you could test using MAVProxy and ideally use * that can be copy-pasted directly into MAVProxy’s terminal window.","This command turns Yaw angle on 16 degree, but expected output - Yaw angle should be 0."
60,How do i backup the PIDs in arducopter 4.3?,1,"Hi all, how do i backup the PIDs? And in general how do I make the most complete backup possible in arducopter? Saving the parameters in the full param list doesn’t seem to be a full backup. Thanks I would like to save these PIDs in a file to avoid writing them manually:",Saving the parameter file from the Full Parameter list is a complete backup.
60,How do i backup the PIDs in arducopter 4.3?,2,"Hi all, how do i backup the PIDs? And in general how do I make the most complete backup possible in arducopter? Saving the parameters in the full param list doesn’t seem to be a full backup. Thanks I would like to save these PIDs in a file to avoid writing them manually:","Hi Dave, I was experimenting with a sonar on the 1 MB kakute F4, I had to compile a custom Fw to get the proximity libraries.  the custom server compiles only Fw 4.4 dev.  in 4.3 beta rc1 i saved the full parameters list and tried to import on 4.4 dev.  result didn’t work and I wrote the Pids manually by copying them from this image (otherwise all pid was at default values).Same with loit_ parameters. does the backup of the full parameter list work only on identical versions of Fw?"
60,How do i backup the PIDs in arducopter 4.3?,3,"Hi all, how do i backup the PIDs? And in general how do I make the most complete backup possible in arducopter? Saving the parameters in the full param list doesn’t seem to be a full backup. Thanks I would like to save these PIDs in a file to avoid writing them manually:","This is a complicated question. It depends if the versions have different parameters. Some versions, although different have the same parameters, but in most cases the newer version has more parameters. And if some feature is disabled by parameter it’s subparameters will not get saved nor restored"
60,How do i backup the PIDs in arducopter 4.3?,4,"Hi all, how do i backup the PIDs? And in general how do I make the most complete backup possible in arducopter? Saving the parameters in the full param list doesn’t seem to be a full backup. Thanks I would like to save these PIDs in a file to avoid writing them manually:",* As * says base parameters and sub-parameters can be the problem. And options for parameters can be different. No way around this really. You will know when this has happened when you get a screen full of “parameter not found” after loading a file. I don’t typically  load a previously saved parameter file for any reason. I use them for archiving purposes and manually make changes if required. You asked about PID parameters. You can create a file containing just those parameters and only those will be updated when the file loads.
60,How do i backup the PIDs in arducopter 4.3?,5,"Hi all, how do i backup the PIDs? And in general how do I make the most complete backup possible in arducopter? Saving the parameters in the full param list doesn’t seem to be a full backup. Thanks I would like to save these PIDs in a file to avoid writing them manually:",How do you create the backup file for pids only?
60,How do i backup the PIDs in arducopter 4.3?,6,"Hi all, how do i backup the PIDs? And in general how do I make the most complete backup possible in arducopter? Saving the parameters in the full param list doesn’t seem to be a full backup. Thanks I would like to save these PIDs in a file to avoid writing them manually:",1 Create a normal backup as always. 2 Open it in a text editor like notepad++ 3 Delete any non PID parameters 4 Save the file
61,My multi-copter drone shows a strange altitude,1,"Hi guys, May someone help me? My multi-copter drone shows a strange altitude, even though the drone is on the ground. *","Hello * This is caused by baro drifting while on ground. At each arm, you will see that the indication will be zeroed. After a long time at ground this drift is normal."
61,My multi-copter drone shows a strange altitude,2,"Hi guys, May someone help me? My multi-copter drone shows a strange altitude, even though the drone is on the ground. *",thanks * for the information
61,My multi-copter drone shows a strange altitude,3,"Hi guys, May someone help me? My multi-copter drone shows a strange altitude, even though the drone is on the ground. *",You’re welcome * !
62,Beagleboard Blue OSD issues,0,"I have a beagleboard blue running arducopter 4.3 and I have gps and and elrs receiver up and running, but I can’t get displayport osd working. Here’s a basic rundown of my setup. I have a configuration file of my serial ports at /etc/default/ardupilot. It lists out the ports arducopter uses; wifi telemetry, elrs telemetry, gps, and osd. It reads as follows: * I have a systemd service that calls it and passes them to the main arducopter file. Main lines are: * I have, in Mission Planner, set OSD_TYPE to MSP_DISPLAYPORT and I set SERIAL_5 to MSP… No dice. Any ideas would be helpful. Thanks. EDIT: I got OSD working with my DJI v2 goggles and telemetry based MSP, but I cannot get canvas mode working on HDZero.",
63,RangeFinder For better Land,1,"Hello, everyone I want to use TF02-Pro for better land. My version is 4.3.0. I’ve learned wiki and code, in my opinion, I should set param as follow:  keep all EK3_SCx_PosZ = 3-GPS set RNGFND1_MAX_CM = 400 set EK3_RNG_USE_HGT = 50  Then, when rangefinder alt<2m, it uses rangefinder. and when rangefinder>2m , it uses GPS.","But actually, my copter will use rangefinder to raise to 4 meter, which is same as RNGFND1_MAX_CM. This is very strange，looks like EK3_RNG_USE_HGT doesn’t work, use 100%."
63,RangeFinder For better Land,2,"Hello, everyone I want to use TF02-Pro for better land. My version is 4.3.0. I’ve learned wiki and code, in my opinion, I should set param as follow:  keep all EK3_SCx_PosZ = 3-GPS set RNGFND1_MAX_CM = 400 set EK3_RNG_USE_HGT = 50  Then, when rangefinder alt<2m, it uses rangefinder. and when rangefinder>2m , it uses GPS.",Here is my flight log. * Here is my param. *
63,RangeFinder For better Land,3,"Hello, everyone I want to use TF02-Pro for better land. My version is 4.3.0. I’ve learned wiki and code, in my opinion, I should set param as follow:  keep all EK3_SCx_PosZ = 3-GPS set RNGFND1_MAX_CM = 400 set EK3_RNG_USE_HGT = 50  Then, when rangefinder alt<2m, it uses rangefinder. and when rangefinder>2m , it uses GPS.","This is my basis, below 4m, it use desire rangefinder alt, it’s a horizontal line. and above 4m, use desire alt. Now I can only distinguish althold source through who is horizontal. Or there could be a better way?"
63,RangeFinder For better Land,4,"Hello, everyone I want to use TF02-Pro for better land. My version is 4.3.0. I’ve learned wiki and code, in my opinion, I should set param as follow:  keep all EK3_SCx_PosZ = 3-GPS set RNGFND1_MAX_CM = 400 set EK3_RNG_USE_HGT = 50  Then, when rangefinder alt<2m, it uses rangefinder. and when rangefinder>2m , it uses GPS.",Consider change *
64,Can't Mavlink communication between Arduino and Pixhawk on Copter 4.3?,1,"Hello. I have so far had Mavlink communication between a PIxhawk with ArduCopter 4.2.3 installed and an Arduino. There, Arduino was able to receive information such as the attitude angle without any problems. However, when I updated Pixhawk’s firmware to ArduCopter 4.3, I couldn’t communicate. I changed the Arduino board and flight controller to a new one, but I was able to confirm that communication would not be possible if I changed to ArduCopter 4.3. Other than that, Mavlink communication (connection to mission planner) is possible, but communication with Arduino is not possible. Has there been any change in the Serial specification with ArduCopter 4.3? Any help would be much appreciated. Mavlink communication method between PIxhawk and Arduino for reference. *","*, I’m not aware of any changes between 4.2 and 4.3 but it may help to set SERIALx_PROTOCOL = 1 to force the autopilot to use MAVLink1 instead of MAVLink2."
64,Can't Mavlink communication between Arduino and Pixhawk on Copter 4.3?,2,"Hello. I have so far had Mavlink communication between a PIxhawk with ArduCopter 4.2.3 installed and an Arduino. There, Arduino was able to receive information such as the attitude angle without any problems. However, when I updated Pixhawk’s firmware to ArduCopter 4.3, I couldn’t communicate. I changed the Arduino board and flight controller to a new one, but I was able to confirm that communication would not be possible if I changed to ArduCopter 4.3. Other than that, Mavlink communication (connection to mission planner) is possible, but communication with Arduino is not possible. Has there been any change in the Serial specification with ArduCopter 4.3? Any help would be much appreciated. Mavlink communication method between PIxhawk and Arduino for reference. *",Post your arduino code and tell us which libraries you used.
64,Can't Mavlink communication between Arduino and Pixhawk on Copter 4.3?,3,"Hello. I have so far had Mavlink communication between a PIxhawk with ArduCopter 4.2.3 installed and an Arduino. There, Arduino was able to receive information such as the attitude angle without any problems. However, when I updated Pixhawk’s firmware to ArduCopter 4.3, I couldn’t communicate. I changed the Arduino board and flight controller to a new one, but I was able to confirm that communication would not be possible if I changed to ArduCopter 4.3. Other than that, Mavlink communication (connection to mission planner) is possible, but communication with Arduino is not possible. Has there been any change in the Serial specification with ArduCopter 4.3? Any help would be much appreciated. Mavlink communication method between PIxhawk and Arduino for reference. *",Are you using Mavlink2 ?
64,Can't Mavlink communication between Arduino and Pixhawk on Copter 4.3?,4,"Hello. I have so far had Mavlink communication between a PIxhawk with ArduCopter 4.2.3 installed and an Arduino. There, Arduino was able to receive information such as the attitude angle without any problems. However, when I updated Pixhawk’s firmware to ArduCopter 4.3, I couldn’t communicate. I changed the Arduino board and flight controller to a new one, but I was able to confirm that communication would not be possible if I changed to ArduCopter 4.3. Other than that, Mavlink communication (connection to mission planner) is possible, but communication with Arduino is not possible. Has there been any change in the Serial specification with ArduCopter 4.3? Any help would be much appreciated. Mavlink communication method between PIxhawk and Arduino for reference. *","Thanks for your suggestions. Unfortunately,I tried that method but it didn’t work."
64,Can't Mavlink communication between Arduino and Pixhawk on Copter 4.3?,5,"Hello. I have so far had Mavlink communication between a PIxhawk with ArduCopter 4.2.3 installed and an Arduino. There, Arduino was able to receive information such as the attitude angle without any problems. However, when I updated Pixhawk’s firmware to ArduCopter 4.3, I couldn’t communicate. I changed the Arduino board and flight controller to a new one, but I was able to confirm that communication would not be possible if I changed to ArduCopter 4.3. Other than that, Mavlink communication (connection to mission planner) is possible, but communication with Arduino is not possible. Has there been any change in the Serial specification with ArduCopter 4.3? Any help would be much appreciated. Mavlink communication method between PIxhawk and Arduino for reference. *","OK. Here’s the Arduino code I’m using. The library used is mavlink.zip posted at this URL. #include <mavlink.h> #include <math.h> //#include <SoftwareSerial.h> //#define RXpin 0 //#define TXpin 1 //SoftwareSerial SerialMAV(RXpin, TXpin); // sets up serial communication on pins 3 and 2 float pitch=0,roll=0,Z=0; int count=0,count2=0; unsigned long times=0,timee=0,timeprint; void setup() { Serial1.begin(115200); //RXTX from Pixhawk (Port 19,18 Arduino Mega) Serial.begin(115200); //Main serial port for console output request_datastream(); } void loop() { times=times+(millis()-timee); timee=millis(); request_datastream(); MavLink_receive(); if(times>30){ times=0; Serial.print("" timeprint:“); Serial.print(timeprint); Serial.print(” roll:“); Serial.print(roll); Serial.print(” pitch:“); Serial.print(pitch); Serial.println(”""); } } //function called by arduino to read any MAVlink messages sent by serial communication from flight controller to arduino void MavLink_receive() { mavlink_message_t msg; mavlink_status_t status; while(Serial1.available()) { uint8_t c= Serial1.read(); } } void request_datastream() { //Request Data from Pixhawk uint8_t _system_id = 255; // id of computer which is sending the command (ground control software has id of 255) uint8_t _component_id = 2; // seems like it can be any # except the number of what Pixhawk sys_id is uint8_t _target_system = 1; // Id # of Pixhawk (should be 1) uint8_t _target_component = 0; // Target component, 0 = all (seems to work with 0 or 1 uint8_t _req_stream_id = 0; uint16_t _req_message_rate = 0x5A; //number of times per second to request the data in hex uint8_t _start_stop = 1; //1 = start, 0 = stop // STREAMS that can be requested /*  Definitions are in common.h: enum MAV_DATA_STREAM and more importantly at: Messages (common) · MAVLink Developer Guide    MAV_DATA_STREAM_ALL=0, // Enable all data streams MAV_DATA_STREAM_RAW_SENSORS=1, /* Enable IMU_RAW, GPS_RAW, GPS_STATUS packets. MAV_DATA_STREAM_EXTENDED_STATUS=2, /* Enable GPS_STATUS, CONTROL_STATUS, AUX_STATUS MAV_DATA_STREAM_RC_CHANNELS=3, /* Enable RC_CHANNELS_SCALED, RC_CHANNELS_RAW, SERVO_OUTPUT_RAW MAV_DATA_STREAM_RAW_CONTROLLER=4, /* Enable ATTITUDE_CONTROLLER_OUTPUT, POSITION_CONTROLLER_OUTPUT, NAV_CONTROLLER_OUTPUT. MAV_DATA_STREAM_POSITION=6, /* Enable LOCAL_POSITION, GLOBAL_POSITION/GLOBAL_POSITION_INT messages. MAV_DATA_STREAM_EXTRA1=10, /* Dependent on the autopilot MAV_DATA_STREAM_EXTRA2=11, /* Dependent on the autopilot MAV_DATA_STREAM_EXTRA3=12, /* Dependent on the autopilot MAV_DATA_STREAM_ENUM_END=13,   Data in PixHawk available in:   Battery, amperage and voltage (SYS_STATUS) in MAV_DATA_STREAM_EXTENDED_STATUS     Gyro info (IMU_SCALED) in MAV_DATA_STREAM_EXTRA1 */    // Initialize the required buffers mavlink_message_t msg; uint8_t buf[MAVLINK_MAX_PACKET_LEN]; // Pack the message mavlink_msg_request_data_stream_pack(_system_id, _component_id, &msg, _target_system, _target_component, _req_stream_id, _req_message_rate, _start_stop); uint16_t len = mavlink_msg_to_send_buffer(buf, &msg);  // Send the message (.write sends as bytes) Serial1.write(buf, len); //Write data to serial port }"
64,Can't Mavlink communication between Arduino and Pixhawk on Copter 4.3?,6,"Hello. I have so far had Mavlink communication between a PIxhawk with ArduCopter 4.2.3 installed and an Arduino. There, Arduino was able to receive information such as the attitude angle without any problems. However, when I updated Pixhawk’s firmware to ArduCopter 4.3, I couldn’t communicate. I changed the Arduino board and flight controller to a new one, but I was able to confirm that communication would not be possible if I changed to ArduCopter 4.3. Other than that, Mavlink communication (connection to mission planner) is possible, but communication with Arduino is not possible. Has there been any change in the Serial specification with ArduCopter 4.3? Any help would be much appreciated. Mavlink communication method between PIxhawk and Arduino for reference. *",yes. I am using Mavlink2.
64,Can't Mavlink communication between Arduino and Pixhawk on Copter 4.3?,7,"Hello. I have so far had Mavlink communication between a PIxhawk with ArduCopter 4.2.3 installed and an Arduino. There, Arduino was able to receive information such as the attitude angle without any problems. However, when I updated Pixhawk’s firmware to ArduCopter 4.3, I couldn’t communicate. I changed the Arduino board and flight controller to a new one, but I was able to confirm that communication would not be possible if I changed to ArduCopter 4.3. Other than that, Mavlink communication (connection to mission planner) is possible, but communication with Arduino is not possible. Has there been any change in the Serial specification with ArduCopter 4.3? Any help would be much appreciated. Mavlink communication method between PIxhawk and Arduino for reference. *","I did not find anything obvious with your code, but here are some things you could try:   I would recommend to use the official *. Put this into your libraries folder and to make this work with Arduino you will have to create a new file, named e.g. mavlinkv2.h and put this line into it: “#include “ardupilotmega/mavlink.h””. In your sketch just inlcude the file you just created (#include <mavlinkv2.h> in this example).   According to * REQUEST_DATA_STREAM has been depreciated and you should use * instead.   Also you only have to call REQUEST_DATA_STREAM or SET_MESSAGE_INTERVAL once in setup(), so delete it from your loop(). You will however have to make sure, that Ardupilot has already booted before you send this message to it. You could use a delay() first to test, but it would be better to wait for the first heartbeat from Ardupilot.   Make sure to use the correct quotation mark “” with strings. You are using the wrong one in your debug messages with Serial.print(""roll: "") for e.g.   What are you trying to do with times, timee and timeprint? They don´t do anything in your code.  "
65,ZIGZAG AUTO mode side distance issue,0,"I have Hexacopter configuration for spraying application. ZIGZAG Auto mode is enabled. After recording A and B point, after switching it to ZIGZAG Auto mode, first row side distance is taken double the distance assigned. For Ex: If side distance is 4 m , then first row distance taken by drone is 8 m after which it continues 4m side distance. Am i missing some parameters.",
66,"What is SR2_RC_CHAN controlling exactly? Why is mine set to ""2?""",1,"I was just comparing the parameters of my two copters.  They’re very similar, and the reason I did it was out of curiosity, to see the differences, and possibly adjustments.  While doing so, I noticed that one one copter, I have SR2_RC_CHAN set to “0,” and on the other, I have it set to “2.”  I have no idea the reason why, or if I’ve made a mistake.  The change happened on or around the time I upgraded to v4.3.  I may have inadvertently changed it while adjusting the ADSB. I can find very little information online about SR2_RC_CHAN. What is it doing exactly?  Anyone know?  Surely, someone knows…",The documentation will tell you that it is the TELEM2 stream rate of RC channel information in Hertz.
66,"What is SR2_RC_CHAN controlling exactly? Why is mine set to ""2?""",2,"I was just comparing the parameters of my two copters.  They’re very similar, and the reason I did it was out of curiosity, to see the differences, and possibly adjustments.  While doing so, I noticed that one one copter, I have SR2_RC_CHAN set to “0,” and on the other, I have it set to “2.”  I have no idea the reason why, or if I’ve made a mistake.  The change happened on or around the time I upgraded to v4.3.  I may have inadvertently changed it while adjusting the ADSB. I can find very little information online about SR2_RC_CHAN. What is it doing exactly?  Anyone know?  Surely, someone knows…","* I’m seeing: * but what is “stream rate” referring to?  Is this the speed that channel 2 is being transmitted at?  What use case would change this parameter, for example?  Can you elaborate any? I’m trying to figure out if there’s any reason I would’ve changed this from 0 to 2, because I can’t think of any reason I would’ve."
66,"What is SR2_RC_CHAN controlling exactly? Why is mine set to ""2?""",3,"I was just comparing the parameters of my two copters.  They’re very similar, and the reason I did it was out of curiosity, to see the differences, and possibly adjustments.  While doing so, I noticed that one one copter, I have SR2_RC_CHAN set to “0,” and on the other, I have it set to “2.”  I have no idea the reason why, or if I’ve made a mistake.  The change happened on or around the time I upgraded to v4.3.  I may have inadvertently changed it while adjusting the ADSB. I can find very little information online about SR2_RC_CHAN. What is it doing exactly?  Anyone know?  Surely, someone knows…","It refers to * and * rate. No, it is the speed at which the SERVO_OUTPUT_RAW and RC_CHANNELS mavlink messages are sent to TELEM2 serial port. It really depends on what you have connected to your TELEM2 serial port. If you have a normal telemetry transceiver on TELEM2, this will just send those mavlink messages to Mission Planner at 2Hz."
66,"What is SR2_RC_CHAN controlling exactly? Why is mine set to ""2?""",4,"I was just comparing the parameters of my two copters.  They’re very similar, and the reason I did it was out of curiosity, to see the differences, and possibly adjustments.  While doing so, I noticed that one one copter, I have SR2_RC_CHAN set to “0,” and on the other, I have it set to “2.”  I have no idea the reason why, or if I’ve made a mistake.  The change happened on or around the time I upgraded to v4.3.  I may have inadvertently changed it while adjusting the ADSB. I can find very little information online about SR2_RC_CHAN. What is it doing exactly?  Anyone know?  Surely, someone knows…","Ok, thank you.  I have a telemetry cable for Yaapu on my Telem2… So I probably changed it for a reason, I am thinking.  Thanks a lot."
66,"What is SR2_RC_CHAN controlling exactly? Why is mine set to ""2?""",5,"I was just comparing the parameters of my two copters.  They’re very similar, and the reason I did it was out of curiosity, to see the differences, and possibly adjustments.  While doing so, I noticed that one one copter, I have SR2_RC_CHAN set to “0,” and on the other, I have it set to “2.”  I have no idea the reason why, or if I’ve made a mistake.  The change happened on or around the time I upgraded to v4.3.  I may have inadvertently changed it while adjusting the ADSB. I can find very little information online about SR2_RC_CHAN. What is it doing exactly?  Anyone know?  Surely, someone knows…",Sometimes some GCS setup options can change these parameters…
66,"What is SR2_RC_CHAN controlling exactly? Why is mine set to ""2?""",6,"I was just comparing the parameters of my two copters.  They’re very similar, and the reason I did it was out of curiosity, to see the differences, and possibly adjustments.  While doing so, I noticed that one one copter, I have SR2_RC_CHAN set to “0,” and on the other, I have it set to “2.”  I have no idea the reason why, or if I’ve made a mistake.  The change happened on or around the time I upgraded to v4.3.  I may have inadvertently changed it while adjusting the ADSB. I can find very little information online about SR2_RC_CHAN. What is it doing exactly?  Anyone know?  Surely, someone knows…","These days we dont even bother to set these stream rates except for older OSD units. Mostly the GCS or yaapu telemetry will request the items it wants to know about at the rate it wants, and the SR* params are irrelevant, or potentially causing flooding where not required. The SR* params could be set to 0 unless you’ve got a specific reason to change them. These must be the defaults for the USB port, usually connected to a GCS SR0_ADSB,0 SR0_EXT_STAT,2 SR0_EXTRA1,4 SR0_EXTRA2,4 SR0_EXTRA3,2 SR0_PARAMS,0 SR0_POSITION,2 SR0_RAW_CTRL,0 SR0_RAW_SENS,2 SR0_RC_CHAN,2 The other SRx params are all zeros, yet my telemetry and all still works as expected. That’s my take on it - happy to be corrected. EDIT I zeroed out all mine on SR0 and rebooted, reconnected to MissionPlanner and the HUD and all still works as per normal and the SR0 params are back at their previous values So there you go - either you cant wipe out those defaults in SR0, or MP puts them back as soon as you connect (I cant tell which)"
67,Raw_temp and Raw_pres zero value,0,Probably me being a dough ball but raw_temp and press showing nil values on MP using Cube orange on latest firmware. Any ideas?,
68,3 sets of IMU working for Pixhawk 6X?,1,"Hi everyone, Is there anyway to check or verify if all 3 sets of IMUs on the pixhawk 6X are used in the attitude calculations as well as the redundancy in place? On bootup, I only can see message on IMU 0 and IMU 1 but nothing on IMU2?  However, looking at the parameters, I can see all 3 IMUs are enabled and they also appeared in the HWID page.   * Thanks all!",EK3_IMU_MASK needs to be checked for 3 IMUs.
68,3 sets of IMU working for Pixhawk 6X?,2,"Hi everyone, Is there anyway to check or verify if all 3 sets of IMUs on the pixhawk 6X are used in the attitude calculations as well as the redundancy in place? On bootup, I only can see message on IMU 0 and IMU 1 but nothing on IMU2?  However, looking at the parameters, I can see all 3 IMUs are enabled and they also appeared in the HWID page.   * Thanks all!",I don’t think the ins use parameters are even working on the latest firmware. Use the Ek3 parameter as suggested
68,3 sets of IMU working for Pixhawk 6X?,3,"Hi everyone, Is there anyway to check or verify if all 3 sets of IMUs on the pixhawk 6X are used in the attitude calculations as well as the redundancy in place? On bootup, I only can see message on IMU 0 and IMU 1 but nothing on IMU2?  However, looking at the parameters, I can see all 3 IMUs are enabled and they also appeared in the HWID page.   * Thanks all!","* , * , Thanks both for pointing me at the right direction, I got it now!"
69,MOT_PWM_TYPE for DJI ESC's?,1,"For DJI S1000 and S900, For my esc calibrating, I used 1120 to 1920 for the PWM range. In setting my MOT_PWM_TYPE, should I use “0” for “Normal,” or “8” for “PWMRange?”",It should be 0 Normal
70,Does AC support MAV_CMD_DO_FLIGHTTERMINATION?,1,"Hi, does anyone know if ArduCopter supports the * message and what actions it does, when receiving the command? I am working on a flight termination system (FTS) based on * and would like to use mavlink if I can to stop the motors immediately.",It supports that command since version 3.3 (2015) You need to enable advanced_failsafe. Or set param1 to 0.5 to disarm motors without advanced failsafe.
70,Does AC support MAV_CMD_DO_FLIGHTTERMINATION?,2,"Hi, does anyone know if ArduCopter supports the * message and what actions it does, when receiving the command? I am working on a flight termination system (FTS) based on * and would like to use mavlink if I can to stop the motors immediately.","Thanks. It does work, the copter immediatelly disarmes, just what i needed. No need to enable advanced_failsafe. The only thing where arducopter doen´t strictly follow the mavlink standard is you can still arm afterwards, which shouldn´t be possible: “The vehicle will ignore RC or other input until it has been power-cycled.”"
71,Geofence level of robustness,1,"Hi all, I would ask to FW developers what’s the degree of robustness of geofence. I would try to understand if and how we can be 100% sure that, since we have defined a geofence area not to be trespassed, the UAS won’t go outside of that volume of airspace. Either in case of manual force from transmitter inputs, as well as flyaways and other contingency situations. Of course it will depends by hardware quality, but assuming that the hardware (AP, GNSS receivers, magnetometer etc.) will be reasonably the best on market, can we certify a certain degree of robustness/guarantee that the system won’t overpass the volume? Thanks.","I would say test it your self to be sure. You can minimise the risk of a fly away by reducing vibration if vibes are an issue. Also making sure the tuning is as good as it can be - not good enough by eye, but in logs! This way you can be more sure of the aircrafts behaviour and performance. I’ve been using the Fence feature for years and it’s worked, even when set with a smaller radius than the mission distance from home. The quad would hit the fence and take the desired action, leaving us wondering why it didnt complete the mission. This was back before I had telemtry to GCS or yaapu telemetry on the RC radio."
71,Geofence level of robustness,2,"Hi all, I would ask to FW developers what’s the degree of robustness of geofence. I would try to understand if and how we can be 100% sure that, since we have defined a geofence area not to be trespassed, the UAS won’t go outside of that volume of airspace. Either in case of manual force from transmitter inputs, as well as flyaways and other contingency situations. Of course it will depends by hardware quality, but assuming that the hardware (AP, GNSS receivers, magnetometer etc.) will be reasonably the best on market, can we certify a certain degree of robustness/guarantee that the system won’t overpass the volume? Thanks.","Thanks Shawn for the quick reply. We can of course test, except for a flyaway simulation, which I don’t know hot to simulate. Thinking about the worst scenarios: magnetometers errors, misalignments or failures, interferences, GNSS multipath or solar storms, IMU errors… all of these are extremely rare, but may happen. Also, a human error like set auto mode with an old mission which is far from operations area. For all of these cases, geofence should be effective."
71,Geofence level of robustness,3,"Hi all, I would ask to FW developers what’s the degree of robustness of geofence. I would try to understand if and how we can be 100% sure that, since we have defined a geofence area not to be trespassed, the UAS won’t go outside of that volume of airspace. Either in case of manual force from transmitter inputs, as well as flyaways and other contingency situations. Of course it will depends by hardware quality, but assuming that the hardware (AP, GNSS receivers, magnetometer etc.) will be reasonably the best on market, can we certify a certain degree of robustness/guarantee that the system won’t overpass the volume? Thanks.","Most of those bad things would cause FS_EKF_ACTION which is Land by default. Flyaway is usually caused by excessive vibrations, and that should only persist for a few second before the vibration failsafe kicks in and causes Land. If your RC went crazy and was sending the aircraft off into space, you could always just turn it off - having tested your radio failsafe before initial test flights "
71,Geofence level of robustness,4,"Hi all, I would ask to FW developers what’s the degree of robustness of geofence. I would try to understand if and how we can be 100% sure that, since we have defined a geofence area not to be trespassed, the UAS won’t go outside of that volume of airspace. Either in case of manual force from transmitter inputs, as well as flyaways and other contingency situations. Of course it will depends by hardware quality, but assuming that the hardware (AP, GNSS receivers, magnetometer etc.) will be reasonably the best on market, can we certify a certain degree of robustness/guarantee that the system won’t overpass the volume? Thanks.","* Thanks again Shawn. In this case, shouldn’t the geofence limit the volume and stop the drone?"
71,Geofence level of robustness,5,"Hi all, I would ask to FW developers what’s the degree of robustness of geofence. I would try to understand if and how we can be 100% sure that, since we have defined a geofence area not to be trespassed, the UAS won’t go outside of that volume of airspace. Either in case of manual force from transmitter inputs, as well as flyaways and other contingency situations. Of course it will depends by hardware quality, but assuming that the hardware (AP, GNSS receivers, magnetometer etc.) will be reasonably the best on market, can we certify a certain degree of robustness/guarantee that the system won’t overpass the volume? Thanks.","Yes true the Fence would limit the range, but if the RC is misbehaving near obstacles (rare but possible I suppose) and your RTL switch didn’t work, the RC failsafe should. I’ve not had that happen but we are discussing many scenarios."
72,Gimbal configuration is not possible,1,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,Use the Full Parameter List and set MNT1_TYPE? This is the default course of action when a field is inactive in Mission Planner.
72,Gimbal configuration is not possible,2,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,What are the parameter names for stabilize tilt and stabilize roll? These two input fields are also disabled and there is no param like MNT1_ROLL_STAB and MNT1_TILT_STAB.
72,Gimbal configuration is not possible,3,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,Having the same issue . I am able to set MNT1_TYPE but can’t find a STABILIZE parameter. In addition the MNT1_TYPE doesn’t change the GUI disabled field.
72,Gimbal configuration is not possible,4,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,This is because in 4.3.0 two gimbals (mounts) can be configured so the TYPE field will be in error looking for MNT_… Not MNTx_… As is sometimes the case Mission Planner has some catching up to do. Keep trying the Beta update and at some point it will work.
72,Gimbal configuration is not possible,5,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,"MP beta version and AC 4.3.1 beta version - there is no param for TIL/ROLL stabilize. That means, that I can’t configure any servo gimbal with stabilize function from Cube. That’s not good! When this issue will be resolved???"
72,Gimbal configuration is not possible,6,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,Have you seen the posts by * about the new improved gimbal support? Have you understood the changes?
72,Gimbal configuration is not possible,7,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,"*  Can you please tell me, which posts do you mean? Have done a search but doesn‘t find answers to my issue."
72,Gimbal configuration is not possible,8,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,*
72,Gimbal configuration is not possible,9,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,"Hi *, For a self stabilising gimbal (aka brushless gimbal) that accepts PWM input could you try setting MNT1_TYPE = 7?"
72,Gimbal configuration is not possible,10,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,* You could try QGroundControl and see if that works for you.
72,Gimbal configuration is not possible,11,* Since AC 4.3.0 I can’t select gimbal type so I can’t configure my servo gimbal. How can I solve this issue? Axel,"*** SOLVED *** Hi Randy, MNT1_TYPE = 1 for Servo is ok, but I forgot to set MNT1_DFLT-MODE = 3. Now it works fine  Thanks!"
73,Can't takeoff in indoor,0,I can’t takeoff in indoor. EK3_SRC1_z = LiDAR I think  EKF refers to the barometer. ・t265 ・LiDAR (Downward) ・baro *,
74,Oh shit moment. Copter rises without any throttle input,1,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?",An onboard log would confirm the issue but in short the “Vibration compensation ON” means that the vehicle is experiencing very high vibration.  When the IMU saturates the EKF is unable to correctly calculate its climb rate and it can lose altitude control and normally this means it shoots up into the air.  The vibration compensation will take over and bring it down but it can takes a few seconds for that to happen. Please check out the wiki page on * and *.
74,Oh shit moment. Copter rises without any throttle input,2,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","Hi *, Thanks for the analysis. I will check the links you provided. Here’s the graphs for the vibrations. There is a sudden spike when I did a U-turn and that’s when it started to rise and I panic. Green is VibeY. But the spike is X, Y, and Z.  Regards, Carlou"
74,Oh shit moment. Copter rises without any throttle input,3,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?",That all happened after the fact. You have the GCS failsafe set to RTL and that’s what it did. Until you panicked and hit the E-stop that is. You should consider the FS_OPTIONS parameter. 16 may be a good choice…
74,Oh shit moment. Copter rises without any throttle input,4,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","Thanks, I will set it to 16. I really don’t care if I loose GCS while I am in control from the radio. This Firmware is really good but with so many features that its hard to coordinate all parameters. Part of the learning curve. I’m loving it but getting more scared of it."
74,Oh shit moment. Copter rises without any throttle input,5,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","Do extensive failsafe testing, gain confidence in the Autopilot’s ability and then trust it. And review the other FS Options and think thru what makes the most sense for how you fly. Do you have telemetry on your transmitter?"
74,Oh shit moment. Copter rises without any throttle input,6,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?",Yes I have telemetry and Yappu. the tele items are a lot.   But I cannot make Yappu work. The radio is a TS16S running on EdgeTx
74,Oh shit moment. Copter rises without any throttle input,7,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?",Have you selected CRSF in the yaapu settings menu on the radio?
74,Oh shit moment. Copter rises without any throttle input,8,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?",Yes I did. Here’s the crossfire and radio settings 
74,Oh shit moment. Copter rises without any throttle input,9,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","Nope, That’s for the Crossfire module. I’m talking about the yaapu menu. Hold down the SYS button on your radio and go to the scripts menu.  There should be one called Yaapu Config, select that one. In there you’ll see an option for CRSF telemetry.  Make sure that’s turned on."
74,Oh shit moment. Copter rises without any throttle input,10,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?",Horayyy… That’s it. CRSF is not ON in Yappu. Now I have Yappu. How convinent now. Thank you very much. 
74,Oh shit moment. Copter rises without any throttle input,11,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?",Yappu is a big upgrade to my Copter. Messages are at the bottom and in Page 2 so I don’t have to go in front of my PC to look for the messages anymore. Really appreciate your help. 
74,Oh shit moment. Copter rises without any throttle input,12,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","Right, that’s why I asked. You have the info in your hand to make an informed flight decision. Consider disabling the GCS FS."
74,Oh shit moment. Copter rises without any throttle input,13,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","Thanks a lot. When I was first reading the FS_OPTIONS parameter, it does not make sense to me. I was asking myself, what a hell does this do? I should have asked that time but don’t even know what to ask. But after this incident, then it made that parameter very sensible. Every day I learn and getting more confidence. I still have a lot of questions in my mind, but I will deal with it slowly. This is really overwhelming for a beginner like me. Thanks for all your help guys. You’ve done a fantastic job on this firmware."
74,Oh shit moment. Copter rises without any throttle input,14,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","If you can step back a bit, I’ll make a suggestion. For a first flight of any sort with a new controller, aircraft, radio, and software eco system, there’s a lot that needs to be right to avoid disaster. I’d tie the aircraft down to something and verify throttle and the ability to control pitch and yaw at the most basic level before letting it go free."
74,Oh shit moment. Copter rises without any throttle input,15,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","Yup I did that on my maiden flight and some succeeding flights until I get a bit of confidence that the copter is able to level straight. One brick per leg with a very sturdy rope cause I was so worried it might tip over if I only use one rope. When the Oh shit moment happen, my copter has at least 30 flights already. But yes I’ve already learned my lesson. The most dangerous part is during tunning I guess as you are changing PIDS that might end up in a flyaway. During this step, tie your copter again. Sounds funny but will save your day if something goes wrong. No joke."
74,Oh shit moment. Copter rises without any throttle input,16,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?","That’s not a good idea.  The PID control loop is expecting certain reactions and movements and if you tie down the drone it can cause the I-term to “wind up” resulting in a more dangerous situation.  Test your motors using mission planner.  Follow the tuning instructions.  Set up, test, and be ready to use the an arming switch, or emergency motor-stop switch."
74,Oh shit moment. Copter rises without any throttle input,17,"I manage to arm and spin the motors and started the flight. But the more I discover things, the more conscious I become on what untoward incident the copter does so my finger is always at the Emergency  Stop switch just in case. And I was right, without putting any throttle input, the copter started to rise. Oh shit comes into my mind and scared of loosing the copter, I immediately turned on Motor Emergency stop. Copter dropped straight to the ground but undamaged. Thank God. When I investigated the log here’s what I found.  * If that was an RTL, what could have cause it?",Thanks. I didn’t know that.
75,"Unhealthy AHRS, Need position estimate",1,"Hi Team, I have been facing the isse when I try to arm the copter in loiter mode. I have connected my GPS and led is green when it is in stablize mode. WHen I hcange the mode to loiter it changes to yellow and get error in the screen PreArm need position estimate. I have done the calibration couple of time and checked wiring. everything seems to be good. Not sure what the error is. Any help on this please ?", Loiter requires “GPS Lock” Stabalize does not require “GPS Lock”  If you want to take-off in loiter you need to wait until you get a GPS lock.
75,"Unhealthy AHRS, Need position estimate",2,"Hi Team, I have been facing the isse when I try to arm the copter in loiter mode. I have connected my GPS and led is green when it is in stablize mode. WHen I hcange the mode to loiter it changes to yellow and get error in the screen PreArm need position estimate. I have done the calibration couple of time and checked wiring. everything seems to be good. Not sure what the error is. Any help on this please ?","Hi lucas, Yes. For stablize mode we dont need GPS. Im able to arm and lift in stblize and altitude mode. I could see good GPS signal and my location in map too. I see led glows green which indicates good gps signal. But problem comes only when i change to loiter, guided mode. Led also change its status to yellow. I waited for a long to see if it awaits for gps lock. The erro also indicates pre arm need position estimate. Is tht a problm with hardware and  GPS or  firmware???"
75,"Unhealthy AHRS, Need position estimate",3,"Hi Team, I have been facing the isse when I try to arm the copter in loiter mode. I have connected my GPS and led is green when it is in stablize mode. WHen I hcange the mode to loiter it changes to yellow and get error in the screen PreArm need position estimate. I have done the calibration couple of time and checked wiring. everything seems to be good. Not sure what the error is. Any help on this please ?","Provide a .bin log where this is happening and we’ll be able to help. If you are going to run missions and use guided mode it will be best to set FENCE_ENABLE,1 and WAIT… You can not arm in any mode until there is a good 3D fix and Home position has been set, not even Stabilise. It can take a while, but then you know for sure that Home is set. This gives you a good opportunity to stand around and review the planned flight and think if you’ve missed any pre-flight checks. Check that the other Fence parameters are appropriate for you."
75,"Unhealthy AHRS, Need position estimate",4,"Hi Team, I have been facing the isse when I try to arm the copter in loiter mode. I have connected my GPS and led is green when it is in stablize mode. WHen I hcange the mode to loiter it changes to yellow and get error in the screen PreArm need position estimate. I have done the calibration couple of time and checked wiring. everything seems to be good. Not sure what the error is. Any help on this please ?","Hi shawn, Thanks for the help. That solved my problem. I have enabled fence and the error "" need position estimate"" is gone."
76,Ship landing support for ArduCopter?,1,* * Is there is any plan for Ship landing algorithm for Arducopter?,"If I remember well, I have already saw a video of this kind of stuff anytime… tried to search on arducopter user guide about moving base feature (or something like this)?"
76,Ship landing support for ArduCopter?,2,* * Is there is any plan for Ship landing algorithm for Arducopter?,I think those videos you saying about is related yo Arduplane and VTOL plans landing…i think not yet implemented in arducopter.
76,Ship landing support for ArduCopter?,3,* * Is there is any plan for Ship landing algorithm for Arducopter?,Maybe… * can tell you if there is anything about it being implemented. Could you help this guy please?
76,Ship landing support for ArduCopter?,4,* * Is there is any plan for Ship landing algorithm for Arducopter?,"Ok, so I saw something along this line when I was doing a firmware upgrade to my Here3 units. “1.40 version firmware introduced a new feature called the mobile base station, that is, the base station need not be fixed in a location. For example, a base station may be placed on a moving vehicle or boat. Upgrading to Ublox-1.40 version is similar to upgrading to 1.30. For users who do not need to use the mobile baseline feature, upgrading to version 1.30 is sufficient.” I haven’t tested as yet but it’s something I want to implement in future so I will keep you in the loop and I will update if you could do the same I’d appreciate"
76,Ship landing support for ArduCopter?,5,* * Is there is any plan for Ship landing algorithm for Arducopter?,"So long as there is a common, corrected coordinate reference for both vehicles, I can envision a Lua scripted solution for Copter that wouldn’t be very tough to implement."
76,Ship landing support for ArduCopter?,6,* * Is there is any plan for Ship landing algorithm for Arducopter?,Leonard Hall has added Ship Landing to the roadmap (*) and I’ve seen SITL demonstrations of it working but it hasn’t been merged to master yet.  I’m sure it will be eventually but I can’t promise when.
76,Ship landing support for ArduCopter?,7,* * Is there is any plan for Ship landing algorithm for Arducopter?,"Nice, thanks *!"
76,Ship landing support for ArduCopter?,8,* * Is there is any plan for Ship landing algorithm for Arducopter?,"This feature is related to having a RTK base with no fixed position, it allows users to move the RTK Base during operation. What I understood is that * needs a moving home to land his vehicle."
77,"After building custom firmware, error message: ""prearm motors check frame class and type""",1,"Been trying to build a custom firmware for a Kakute F7 that includes OSD capability for HDZero. * After installing the custom firmware, the OSD does indeed work (great!!).  But…I get an error message on bootup - “prearm motors check frame class and type”.  Plus, I see EIGHT motor test tabs (should be four), and motor testing does not work, and, the drop-down box for ESC type is blank. I repeatedly went to the Mission Planner page to set the frame type (which was already set correctly, Quad, X), but nothing I change makes the error message go away. If I revert to the latest stable release, the frame class and number of motors and motor test all go back to normal and work fine, but then of course the OSD does not work. Any idea what’s going on? Thanks…",Do you go into full parameter tree and set the frame and class then reboot?
77,"After building custom firmware, error message: ""prearm motors check frame class and type""",2,"Been trying to build a custom firmware for a Kakute F7 that includes OSD capability for HDZero. * After installing the custom firmware, the OSD does indeed work (great!!).  But…I get an error message on bootup - “prearm motors check frame class and type”.  Plus, I see EIGHT motor test tabs (should be four), and motor testing does not work, and, the drop-down box for ESC type is blank. I repeatedly went to the Mission Planner page to set the frame type (which was already set correctly, Quad, X), but nothing I change makes the error message go away. If I revert to the latest stable release, the frame class and number of motors and motor test all go back to normal and work fine, but then of course the OSD does not work. Any idea what’s going on? Thanks…","Thanks yes, I checked, and it was already set to Quad X.  The GUI and params are both set correctly."
77,"After building custom firmware, error message: ""prearm motors check frame class and type""",3,"Been trying to build a custom firmware for a Kakute F7 that includes OSD capability for HDZero. * After installing the custom firmware, the OSD does indeed work (great!!).  But…I get an error message on bootup - “prearm motors check frame class and type”.  Plus, I see EIGHT motor test tabs (should be four), and motor testing does not work, and, the drop-down box for ESC type is blank. I repeatedly went to the Mission Planner page to set the frame type (which was already set correctly, Quad, X), but nothing I change makes the error message go away. If I revert to the latest stable release, the frame class and number of motors and motor test all go back to normal and work fine, but then of course the OSD does not work. Any idea what’s going on? Thanks…","*, If you could provide an onboard log we might be able to see what the issue is.  It will probably be necessary to set LOG_DISARMED = 1 so that a log is produced even though the vehicle is not armed."
77,"After building custom firmware, error message: ""prearm motors check frame class and type""",4,"Been trying to build a custom firmware for a Kakute F7 that includes OSD capability for HDZero. * After installing the custom firmware, the OSD does indeed work (great!!).  But…I get an error message on bootup - “prearm motors check frame class and type”.  Plus, I see EIGHT motor test tabs (should be four), and motor testing does not work, and, the drop-down box for ESC type is blank. I repeatedly went to the Mission Planner page to set the frame type (which was already set correctly, Quad, X), but nothing I change makes the error message go away. If I revert to the latest stable release, the frame class and number of motors and motor test all go back to normal and work fine, but then of course the OSD does not work. Any idea what’s going on? Thanks…","Randy the next custom firmware I built (which was the third or fourth in a few days time) no longer has the frame class error.  If it pops back up, I’ll post."
77,"After building custom firmware, error message: ""prearm motors check frame class and type""",5,"Been trying to build a custom firmware for a Kakute F7 that includes OSD capability for HDZero. * After installing the custom firmware, the OSD does indeed work (great!!).  But…I get an error message on bootup - “prearm motors check frame class and type”.  Plus, I see EIGHT motor test tabs (should be four), and motor testing does not work, and, the drop-down box for ESC type is blank. I repeatedly went to the Mission Planner page to set the frame type (which was already set correctly, Quad, X), but nothing I change makes the error message go away. If I revert to the latest stable release, the frame class and number of motors and motor test all go back to normal and work fine, but then of course the OSD does not work. Any idea what’s going on? Thanks…","I’m having this issue too.  Seems to happen when I select OctoX frame, if I were to select QuadX then there is no issue.  I’ll add the bin file.  I’m building custom as I have a Pixhawk 1M and need gripper. * (736 KB)"
77,"After building custom firmware, error message: ""prearm motors check frame class and type""",6,"Been trying to build a custom firmware for a Kakute F7 that includes OSD capability for HDZero. * After installing the custom firmware, the OSD does indeed work (great!!).  But…I get an error message on bootup - “prearm motors check frame class and type”.  Plus, I see EIGHT motor test tabs (should be four), and motor testing does not work, and, the drop-down box for ESC type is blank. I repeatedly went to the Mission Planner page to set the frame type (which was already set correctly, Quad, X), but nothing I change makes the error message go away. If I revert to the latest stable release, the frame class and number of motors and motor test all go back to normal and work fine, but then of course the OSD does not work. Any idea what’s going on? Thanks…","Make sure to add the frame type to the build, by default you only get quads to make room for other stuff."
78,IMU failing to reach target temp,1,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *",What firmware version and related params have you got? How is your +5volts from the power brick?
78,IMU failing to reach target temp,2,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","If you put another cube in the same aircraft, you should be able to copy all paramrters. Use the compare feature and you can write all parameters that you need. But check the power brick first. Do you have a lot of extra stuff cpnnected directly to the cube, like telemetery radio or lidar?"
78,IMU failing to reach target temp,3,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","I’m running 4.3. As for external gear, a camera, Herelink and a Emlid M2 gnss. But they all have their own power supplies. I’ll check the voltage log on the board. Thanks for the suggestions!"
78,IMU failing to reach target temp,4,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","That strange, I’m running a cube black with no issues. Flew here in sweden today, 2.5 degrees C outside.  If there is nothing wrong with the voltage there are some parameters for the heater you can change. You should probably not change them but I could check mine so that we can see if there is any difference, shouldn’t be but just in case."
78,IMU failing to reach target temp,5,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","I’ve looked at those parameters, but the only thing I can see I could change would be the P and I terms of the heater.  But that would be like guessing you P term for pitch or roll lol!  I’m currently running a imu temp calibration.  It will correct the imu’s response for temperature, but I doubt it will change the heater’s P and I values.  May Prusa 3d printed has heater tuning : )  One odd thing in the parameters are the INS_ACCn_CALTEMP and INS_GYRn_CALTEMP, all 6 were set to -300 which is the default if the accels haven’t been calibrated.  That’s pretty weird as it would be pretty hard to fly without that calibration.  And all this started after 4.3 upgrade.  Maybe the firmware update didn’t transfer the temperature calibration temps.  I just did the calibration and I have all 6 values populated with the correct values."
78,IMU failing to reach target temp,6,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","Does is work now? The temperature should still reach 40 degrees, it wants to be at 45 but will let you arm at 40. I’ve noticed that on windy cold days the temp can drop below 40 while flying. This won’t affect the flight performance though. My FC is mounted on top of the frame exposed to wind so if yours is, maybe a little canopy to cover from wind would make it easier for it to keep temperature in flight. I think you could set the target temperature to 20 and do a calibration. The 45 is probably just so that the imu can have the same temperature even when you fly in hot weathers. If you calibrate at 20, you might run into issues at ambient temperature over that."
78,IMU failing to reach target temp,7,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","It is always a good practice to save a backup of your parameter file before any update… anyway, you can validate if the FW update really afected this parameter by opening and old flight log and comparing the values for these CALTEMP params…"
78,IMU failing to reach target temp,8,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","I took all the pointy long bits off the unit and stuffed it the freezer😂. Set the target temp to 70c, imu 1 & 2 to calibrate to 65 and imu 3 to 55. Pulled it from the freezer and started calibration at -10c. Put it into a small room with a few heaters so hitting 65 was easy. Reset the target temp to 40 with 15 for the heat margin so it will arm at 25."
78,IMU failing to reach target temp,9,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *",Good idea. I checked the previous version to 4.3 and it shows cal temps in the 40’s. After firmware 4.3 pre calibration all three were -300.  Post cal they’re 55 imu 3 and close to 65 on imu 1 & 2.  Cool.
78,IMU failing to reach target temp,10,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","Just took it out and it works great at -5c. Funny thing, came up to 45 pretty quick. I know the imu temp calibration didn’t fix that. I wanted it done for cold temps if my heater couldn’t keep up.  Though it doesn’t make any sense, the only change would have been the ins_acc/gyro_caltemp values of -300 from the firmware upgrade."
78,IMU failing to reach target temp,11,"I keep getting prearm errors on a cube black, low imu temperature.  My target is 45 and I can’t get past 38.8.  Problem if I lower the target to 38c, during flight my imu temp continues to drop.  On the attached graph, the temp doesn’t drop that much but it was 6c ambient.  I have to work tomorrow (it’s going to be around -8c), so is an IMU temp calibration my solution?  If I put another cube in tonight, I don’t think I can get the manual tuning, FFT analysis, and autotune done by morning lol! *","I think this makes sense… it would be nice to investigate how this parameter was modified, it shouldn’t happen, specially with no notice or warning…"
79,"""Prearm: Fence requires position""",1,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","Use the “full parameter list” to set that parameter. But you need to enable it first, reboot, and reconnect"
79,"""Prearm: Fence requires position""",2,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…",I already have the type set to “altitude” and “circle.”  I disabled it because of it not working (to remove the prearm error temporarily).
79,"""Prearm: Fence requires position""",3,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","That is the wrong approach. You should fix the pre arm errors, not disable them!!!"
79,"""Prearm: Fence requires position""",4,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","As posted earlier, I wasn’t doing it as a fix, only temporarily (so as to allow other prearm errors.) I agree that I should fix the prearm errors.  That is why I am asking about it."
79,"""Prearm: Fence requires position""",5,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…",Are you sure you have GPS Fix and your EKF initialized position?
79,"""Prearm: Fence requires position""",6,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","I had been looking for instructions on how to troubleshoot all those checks before you can arm the copter. All of these questions was answered after I installed YAPPU. It annouces all the important events like Fence aquired, GPS 3D fix aqired, GPS Home aquired and so on and so forth. If your radio and receiver can support YAPPU, its worth installing it."
79,"""Prearm: Fence requires position""",7,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","I have it installed and in use.  Currently, Yaapu reports on my radio “Yaapu telemetry ready.”"
79,"""Prearm: Fence requires position""",8,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","* It should be reporting more messages. Not only Yaapu telemetry ready. Make sure that you have configured it properly expecially the telemetry settings. And add page 2 so you will see a better screen of the messages. Not a very pretty screen but for me, this screen tells everything. Its a list of all events so you don’t have to hunt those events somewhere else."
79,"""Prearm: Fence requires position""",9,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","You might be on to something here.  I just checked my Yaapu (page 2) page on my Taranis X9D+ and I see “no telemetry!” and all information is not being received.  I don’t know what could have changed this, since it has always been working fine, but looks like I should reinstall the latest version of Yaapu (mine is 3 years installed) and see if that solves things.  Strange it stopped working."
79,"""Prearm: Fence requires position""",10,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","For some reason, my SERIAL2_PROTOCOL had gotten changed to “2.”  I was not discovering any sensors other than FLVSS and RSSI.  Changing SERIAL2_PROTOCOL to “10” fixed my Yaapu.  Now I get my screen 2 and see the same prearm warnings I see in Mission Planner: “Prearm: Mount not healthy” “Prearm: Safety switch” “Prearm: Fence requires position” “Prearm Check FS_THR_VALUE”"
79,"""Prearm: Fence requires position""",11,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","Nice, now fix it one by one. To fix the “Fence requires position” all you need to do is wait for GPS lock."
79,"""Prearm: Fence requires position""",12,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","This was the solution.  I had to recalibrate my copter, because I was not getting a gps lock.  Thanks for pointing it out."
79,"""Prearm: Fence requires position""",13,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…",And have you also fixed the other 3?
79,"""Prearm: Fence requires position""",14,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…","Yes. -This was due to my earlier experimenting with trying to install a Gremsy gimbal and having set my type in Gimbal Settings in a previous firmware.  Changing the value to “0” as sfacta suggested solved it. -For some reason, my Taranis X9D+ controller must bounce below 975.  Lowering my FS_THR_VALUE to 910 works. -This is normal and only because I did not depress the safety switch."
79,"""Prearm: Fence requires position""",15,"I’m getting a new prearm warning since upgrading to 4.3: “Prearm: Fence requires position.” When I go to my geofence settings, there are no options for “type:” I never had this problem before and I think thre were options for “type” before…",Nice man! Great job! Keep pushing!
80,Hexacopter jittery in auto mode (windy day),1,"Hi everyone! I’m working on a hexacopter design for rescue/emergency support missions, so would need the model to be able to fly during windy conditions. I flew a simple auto mission, during a windy day (~20 mph). It was able to follow waypoints and did not crash. However, the flight was wobbly and at time erratic, during which I forced the copter to land. My question is: is there anything apparent in the logs that can point to improvements from tuning? I have already done an auto-tune. Also, as I’m rather new to Ardupilot/Missionplanner, I’m still learning how to interpret the logs. From reading posts on similar issues, seems auto-tune should be helpful, but it would be great if someone more experienced has some insight. * * * Specs:  Motors: 6x ReadyToSky 2212-920kv Pixhawk 2.4.8 Frame: 550 hexacopter Remote controller: FlySky FS-I6X Battery: Zeee 9000 mAh 100C ","Vibrations are a problem that you will have to improve. Please try to fix the Z axis vibrations before flying more or you risk a fly-away. See text below…  Some of the instability is because your motors are going to minimum, which means you could add a dummy payload and also reduce MOT_SPIN_MIN to about 0.13 Mostly motors 2, 4 and 5 are doing this, the counter-clockwise motors. This indicates there’s a problem with frame twist causing a physical yaw bias, or sometimes very cheap props are not “equal” between CCW and CW spin. We will know more from the next test flights  Use firmware “Pixhawk1” instead of FMUv3, just to be correct. An issue you should be aware of too - the flight controller is only showing one IMU instead of two. This is likely because it’s a cheap knock-off with missing parts or even “factory seconds” parts that didnt pass tests. It’s typical if you dont buy your flight controller from a reputable source. Your Pixhawk may work OK like this forever, or fail the very next flight - there’s no telling, but certainly risk is increased. The battery voltage measurements seems to be a bit strange, I could not easily tell what battery type you’ve got and if the failsafe values are correct. What chemistry and cell-count is it? You might need to do some accurate manual calbibration of the voltage sensor. Set this INS_ACCEL_FILTER,10 you didnt make a mistake here, it should be the new default value, there’s been quite a discussion. Set this to gather data for the Harmonic Notch Filter INS_LOG_BAT_MASK,1 INS_HNTCH_ENABLE,1 When you’ve improved vibrations just do a hover test for a while and some gentle movements and let’s see that log file. Vibrations Make sure there is nothing rubbing against or pulling on the Flight Controller. Everything should be secured. Wiring should be secured enough so that it does not vibrate around in the propwash, but should have some amount of free movement where it connects to the FC. Z axis vibrations can be propwash hitting on the FC, so maybe it needs a cover. Or you need smaller props (or longer arms) so they dont over-fly the centre of the frame. If you need an antivibration mount instead of the blocks of foam that usually come with the FC you could try a “4 balls” FC mount similar to this  and ones you can 3D print"
80,Hexacopter jittery in auto mode (windy day),2,"Hi everyone! I’m working on a hexacopter design for rescue/emergency support missions, so would need the model to be able to fly during windy conditions. I flew a simple auto mission, during a windy day (~20 mph). It was able to follow waypoints and did not crash. However, the flight was wobbly and at time erratic, during which I forced the copter to land. My question is: is there anything apparent in the logs that can point to improvements from tuning? I have already done an auto-tune. Also, as I’m rather new to Ardupilot/Missionplanner, I’m still learning how to interpret the logs. From reading posts on similar issues, seems auto-tune should be helpful, but it would be great if someone more experienced has some insight. * * * Specs:  Motors: 6x ReadyToSky 2212-920kv Pixhawk 2.4.8 Frame: 550 hexacopter Remote controller: FlySky FS-I6X Battery: Zeee 9000 mAh 100C ",Hello * This value should be the “right” for the 4.3 version only? Or this is recommended backwards also (like 4.2 FW version)?
80,Hexacopter jittery in auto mode (windy day),3,"Hi everyone! I’m working on a hexacopter design for rescue/emergency support missions, so would need the model to be able to fly during windy conditions. I flew a simple auto mission, during a windy day (~20 mph). It was able to follow waypoints and did not crash. However, the flight was wobbly and at time erratic, during which I forced the copter to land. My question is: is there anything apparent in the logs that can point to improvements from tuning? I have already done an auto-tune. Also, as I’m rather new to Ardupilot/Missionplanner, I’m still learning how to interpret the logs. From reading posts on similar issues, seems auto-tune should be helpful, but it would be great if someone more experienced has some insight. * * * Specs:  Motors: 6x ReadyToSky 2212-920kv Pixhawk 2.4.8 Frame: 550 hexacopter Remote controller: FlySky FS-I6X Battery: Zeee 9000 mAh 100C ","Yes backwards, you should be able to use it on any recent versions, I would say even to 3.6"
80,Hexacopter jittery in auto mode (windy day),4,"Hi everyone! I’m working on a hexacopter design for rescue/emergency support missions, so would need the model to be able to fly during windy conditions. I flew a simple auto mission, during a windy day (~20 mph). It was able to follow waypoints and did not crash. However, the flight was wobbly and at time erratic, during which I forced the copter to land. My question is: is there anything apparent in the logs that can point to improvements from tuning? I have already done an auto-tune. Also, as I’m rather new to Ardupilot/Missionplanner, I’m still learning how to interpret the logs. From reading posts on similar issues, seems auto-tune should be helpful, but it would be great if someone more experienced has some insight. * * * Specs:  Motors: 6x ReadyToSky 2212-920kv Pixhawk 2.4.8 Frame: 550 hexacopter Remote controller: FlySky FS-I6X Battery: Zeee 9000 mAh 100C ","Ok, thanks for the information * !"
80,Hexacopter jittery in auto mode (windy day),5,"Hi everyone! I’m working on a hexacopter design for rescue/emergency support missions, so would need the model to be able to fly during windy conditions. I flew a simple auto mission, during a windy day (~20 mph). It was able to follow waypoints and did not crash. However, the flight was wobbly and at time erratic, during which I forced the copter to land. My question is: is there anything apparent in the logs that can point to improvements from tuning? I have already done an auto-tune. Also, as I’m rather new to Ardupilot/Missionplanner, I’m still learning how to interpret the logs. From reading posts on similar issues, seems auto-tune should be helpful, but it would be great if someone more experienced has some insight. * * * Specs:  Motors: 6x ReadyToSky 2212-920kv Pixhawk 2.4.8 Frame: 550 hexacopter Remote controller: FlySky FS-I6X Battery: Zeee 9000 mAh 100C ","*, thanks so much for the detailed reply! I will try this ASAP, and come back shortly. Much appreciated!"
80,Hexacopter jittery in auto mode (windy day),6,"Hi everyone! I’m working on a hexacopter design for rescue/emergency support missions, so would need the model to be able to fly during windy conditions. I flew a simple auto mission, during a windy day (~20 mph). It was able to follow waypoints and did not crash. However, the flight was wobbly and at time erratic, during which I forced the copter to land. My question is: is there anything apparent in the logs that can point to improvements from tuning? I have already done an auto-tune. Also, as I’m rather new to Ardupilot/Missionplanner, I’m still learning how to interpret the logs. From reading posts on similar issues, seems auto-tune should be helpful, but it would be great if someone more experienced has some insight. * * * Specs:  Motors: 6x ReadyToSky 2212-920kv Pixhawk 2.4.8 Frame: 550 hexacopter Remote controller: FlySky FS-I6X Battery: Zeee 9000 mAh 100C ","Happy Thanksgiving to those celebrating! *, I went through the steps you outlined - it made a huge difference. I flew the same Auto mission as previously, although on a less windy day.  I replaced the CCW props, as some of them had nicks from a prior encounter with a chainlink fence. I’m guessing this damage might have been a source of some of the loss of balance of the props. *  Looks like the vibration, especially on the Z axis has decreased significantly - now averaging 3.98 vs. 18.58 previously -Only motor 5 now seems to be going to the minimum frequently: *  Motor 5 is also a motor that I previously replaced, along with it’s ESC. The motor 5 ESC gets a bit warm (not hot) after the motor runs for a few minutes, while other ESC’s remain cool. I also secured the wires a bit better than before.  I definitely owe you a beer!"
80,Hexacopter jittery in auto mode (windy day),7,"Hi everyone! I’m working on a hexacopter design for rescue/emergency support missions, so would need the model to be able to fly during windy conditions. I flew a simple auto mission, during a windy day (~20 mph). It was able to follow waypoints and did not crash. However, the flight was wobbly and at time erratic, during which I forced the copter to land. My question is: is there anything apparent in the logs that can point to improvements from tuning? I have already done an auto-tune. Also, as I’m rather new to Ardupilot/Missionplanner, I’m still learning how to interpret the logs. From reading posts on similar issues, seems auto-tune should be helpful, but it would be great if someone more experienced has some insight. * * * Specs:  Motors: 6x ReadyToSky 2212-920kv Pixhawk 2.4.8 Frame: 550 hexacopter Remote controller: FlySky FS-I6X Battery: Zeee 9000 mAh 100C ","Beer gratefully accepted! Ok that flight is better. Have you got a photo of the frame and all? I ask mostly so we can see how the arms and motors mount. There’s still some sort of physical yaw bias going on → motors 1,3 and 6 (clockwise) are working a bit harder to counteract motors 2,4,5 (CCW). See of there’s anything you can do to find and fix twisted arms or motor mounts, get all the prop tips perfectly aligned with each other. Also try the semi-auto ESC calibration to see if that helps * Attitude control is still a bit fuzzy and can be better. Start by setting these for the Harmonic Notch Filter INS_HNTCH_FREQ,70 INS_HNTCH_REF,0.125 INS_HNTCH_FM_RAT,0.7 I think the spread of frequencies in this graph will get more focused once the motor imbalance is sorted out, and we can fine-tune the harmonic notch filter  I would definitely set BATT_FS_CRT_ACT,1 BATT_FS_LOW_ACT,2 and if they are triggering when you think they shouldn’t DONT disable them → then check your voltage calibration and BATT_LOW_VOLT , BATT_CRT_VOLT If you can sort out the frame twist and even out the motor load, just do a hover test with a few gently movements, rather than a mission or aerobatics - let’s see that log next to fine tune a few things then Autotune would be a good next step."
80,Hexacopter jittery in auto mode (windy day),8,"Hi everyone! I’m working on a hexacopter design for rescue/emergency support missions, so would need the model to be able to fly during windy conditions. I flew a simple auto mission, during a windy day (~20 mph). It was able to follow waypoints and did not crash. However, the flight was wobbly and at time erratic, during which I forced the copter to land. My question is: is there anything apparent in the logs that can point to improvements from tuning? I have already done an auto-tune. Also, as I’m rather new to Ardupilot/Missionplanner, I’m still learning how to interpret the logs. From reading posts on similar issues, seems auto-tune should be helpful, but it would be great if someone more experienced has some insight. * * * Specs:  Motors: 6x ReadyToSky 2212-920kv Pixhawk 2.4.8 Frame: 550 hexacopter Remote controller: FlySky FS-I6X Battery: Zeee 9000 mAh 100C ","Thanks again! I followed the steps you mentioned - I think the issue might be the misalignment of the frame. This is likely caused by prior damage from a hard landing that resulted in one of the bottom arm mounts to be break: …and using the “align prop tips” method, I see that it’s causing the arm to be uneven with other arms: At this point, I ordered a new * and will re-build the drone on it. I think this should help fix a number of issues from prior crashes - lessons learned  !"
81,New prearm errors after updating to 4.3,1,"Updated to 4.3 and now I get a prearm gps1 failed configuration on every boot. Thought maybe it was my old original Here gps’s update rate. I have a pair of Holybro H-rtk F9P’s.  I installed one of them just to run single solution, not rtk. I get the same prearm message lol. Is it just the ekf is still settling?",Increase the FC boot time (you’ll need to find the exact parameter name to do this) to 5 seconds.
81,New prearm errors after updating to 4.3,2,"Updated to 4.3 and now I get a prearm gps1 failed configuration on every boot. Thought maybe it was my old original Here gps’s update rate. I have a pair of Holybro H-rtk F9P’s.  I installed one of them just to run single solution, not rtk. I get the same prearm message lol. Is it just the ekf is still settling?","It is BRD_BOOT_DELAY,5000"
82,Most reliable altitude sensor for indoor flight,0,"Please tell me that most reliable altitude sensor for indoor flight I have tried VL53L0X and VL53L1X and they are unstable in some environments (strong sunlight, non-reflective floors). I’m using drone on a flat floor.",
83,Quadcopter not taking off after changing props,1,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *",Assuming that the 04.bin file is the tri-blade it’s underpowered/overweight already and I suppose the bi-blade props make it worse. The outputs are at max and MOT_THST_HOVER has learned 0.6.  And your battery has sagged to ~11V. But even when it was at full charge the average outputs are ~1700us.
83,Quadcopter not taking off after changing props,2,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *","The 04.bin file should be a 25 minutes long autonomous mission that i let run until battery was almost completely discharged, that’s why it sagged to 11v towards the end, because there was no battery left, but it flew perfectlyuntil that point."
83,Quadcopter not taking off after changing props,3,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *","I don’t think so. From the start its underpowered/overweight. You are asking for trouble w/o improving this. And you will damage the battery discharging it that low. Describe the components of this craft and it’s take-off weight (with battery), let’s see what the data says."
83,Quadcopter not taking off after changing props,4,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *","it was an endurance battery test so it was supposed to run until the end, to see how much time it could stay in the air with this setup. Also, by flying perfectly i mean that it followed the planned mission without any issue, no any unexpected behavior, current draw always around 10 amps, and altitude was always followed as planned. It is a 7 inch quadcopter, 2812 925kv motors, weight around 1.1Kg with 4s2p 21700 Li-ion, with the triblade props i was able to test some short missions with an added 500g payload and was able to lift it and keep it perfectly stable in the air, also gaining and lowering altitude without overshooting, always in auto mode. I don’t know why you say from the start is underpowered, in stabilize or acro mode i’m able to make it hover at around 35/40% throttle with 4s and triblade props, i don’t know also why at the start of the log it shows 0.64 hover throttle but you can see when i start the mission (time stamp 11.35.00) it learns to around 0.45 the new value"
83,Quadcopter not taking off after changing props,5,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *","With that bit of kit and 7045 tri-blade (you don’t give the pitch) one would expect a hover throttle of ~70%. 50% or less is the design target. The RCout graph shows an average of~1700us at Hover which is what one would expect with this low of a thrust/weight. A MOT_THST_HOVER value of .45 is not desirable, it’s high. It’s not a linear relationship of throttle to thrust, that’s why we use RCout as a better Metric of thrust/weight. So, the craft lacks thrust and clearly  2 blade props exacerbate this problem. “Not taking off after changing props”. Yes, right."
83,Quadcopter not taking off after changing props,6,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *","7045 prop already indicates the pitch: 7.0 inches, 45 degrees. The setup was chosen to maximize flight time and reduce amp draw, that’s the reason for using very low kv motors, but now that i remember i think i was using a 6s battery when i tested those props, so in the future it’ll be powered by a 6s battery and this should definitely solve the underpower issue, thanks a lot for the RCout explanation, will be very useful. One last thing i’d like to ask you: why every time i make an auto analysis of logs, i always get this two errors?  Test: Empty = FAIL - Empty log? Throttle never above 20% Test: NaNs = FAIL - Found NaN in CTUN.TAlt Found NaN in CTUN.DSAlt "
83,Quadcopter not taking off after changing props,7,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *","bingo that would make all the difference in the world!!! don’t use auto log analysis. it should 100% be removed as a feature because it just doesn’t work! I have seen so many folks use it and then get berated for using it yet they will not remove or update it. log analysis is a tricky thing but the auto log analysis doesn’t help, it more hinders as users run it then wonder all the issues that come up when its really just outputting garbage."
83,Quadcopter not taking off after changing props,8,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *",How many C is the LiPo you are using? I had this issue before.
83,Quadcopter not taking off after changing props,9,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *",I know that. I was simply stating what pitch I assumed to calculate thrust/weight because you did not state the pitch.
83,Quadcopter not taking off after changing props,10,"Hello, what could be the cause of this issue? I’m configuring a 7 inch drone, switched from triblade to biblade props for more efficiency and now wouldn’t take off, but i already flew with both props so i’m sure this isn’t a power to weight issue, also it did the first takeoff succesfully but had to land almost immediately due to an EKF compass variance error, after that it won’t takeoff anymore, like the throttle was clipping to a certain value. Also hover throttle was set to “learn and save” so it should have seen that the value needed to change to hover, but looked like it didn’t. I leave you the logs, first one with triblade props, second one biblade, just changed the props but not anything else. *",If he was using a Lipo perhaps the situation would improve. But not enough to be where it should be. A 6S battery will do it.
84,Compass Offsets High on Matek F405-STD,1,"I upgraded my quadcopter to 4.3.0 and attempted to make a first flight after a severe crash. I recalibrated the compass and accelerometers before attempting to fly. I am getting a “Compass Offsets High” error which I’ve never seen before. Looking at the params, I see my COMPASS_OF* values are -400, 1000 and -1500. I have a carbon fibre frame with no metal anywhere apart from the motors and the compass is about 10cm from any power lines. The drone has flown fine previously with no compass errors. In Mission Planner, the compass appears to be correct; I rotate the drone on my desk and the compass shows the correct bearing. Should I worry about this error? Params: * (18.8 KB) Thanks.",I would use Magfit to calibrate the compass and generate the motor interference coefficients.
84,Compass Offsets High on Matek F405-STD,2,"I upgraded my quadcopter to 4.3.0 and attempted to make a first flight after a severe crash. I recalibrated the compass and accelerometers before attempting to fly. I am getting a “Compass Offsets High” error which I’ve never seen before. Looking at the params, I see my COMPASS_OF* values are -400, 1000 and -1500. I have a carbon fibre frame with no metal anywhere apart from the motors and the compass is about 10cm from any power lines. The drone has flown fine previously with no compass errors. In Mission Planner, the compass appears to be correct; I rotate the drone on my desk and the compass shows the correct bearing. Should I worry about this error? Params: * (18.8 KB) Thanks.",I have since discovered that the compass is broken. MP was showing a wrong heading in the HUD and in the calibration screen showed no compasses at all! No error messages about missing compasses though. :-S I have replaced with an identical model which works fine although one of the calibration offset is -450 I think I can live with this for now.
85,Engines run without arming,1,"Hi all, going from 4.2 to 4.3 when the small 2 ""drone power supply is activated, 3 out of two motors start to rotate (little and jerky), without giving the arming command. by activating the arm switch the motors rotate normally and the quad flies regularly. Parameters have changed between 4.2 and 4.3? Thanks! Here are my current parameters: * my esc: *","If you haven’t turn on BL Heli in your parameter settings, do so. Instructions are in the WIKI. Your ESC supports it so why not make use of it."
85,Engines run without arming,2,"Hi all, going from 4.2 to 4.3 when the small 2 ""drone power supply is activated, 3 out of two motors start to rotate (little and jerky), without giving the arming command. by activating the arm switch the motors rotate normally and the quad flies regularly. Parameters have changed between 4.2 and 4.3? Thanks! Here are my current parameters: * my esc: *","Thank you. However, it seems that using Dshot 600 the problem is solved. Would I benefit from switching to BLheli?"
85,Engines run without arming,3,"Hi all, going from 4.2 to 4.3 when the small 2 ""drone power supply is activated, 3 out of two motors start to rotate (little and jerky), without giving the arming command. by activating the arm switch the motors rotate normally and the quad flies regularly. Parameters have changed between 4.2 and 4.3? Thanks! Here are my current parameters: * my esc: *","You don’t have to calibrate the ESC if you are using BLHeli. And the RPM is more consistent compared to PWM. I think when you are on PWM, you did not calibrate your ESC hence some motors thinks that they are commanded to start spinning at min throttle. You should have solve your issue by calibrating your ESC but why bother if you have a BLHeli ESC. Utilize the features of your ESC. Don’t forget to upgrade the firmware of your ESC to the latest version. Here’s what I am using. Version 32.9. "
85,Engines run without arming,4,"Hi all, going from 4.2 to 4.3 when the small 2 ""drone power supply is activated, 3 out of two motors start to rotate (little and jerky), without giving the arming command. by activating the arm switch the motors rotate normally and the quad flies regularly. Parameters have changed between 4.2 and 4.3? Thanks! Here are my current parameters: * my esc: *",I have never used PWM. If you see my setting it is DShot 150 (digital without calibration) and it has always worked well. From 4.3 I get that weird engine behavior. Now I put option 6 = Dshot 600 and the problem seems to be solved.
85,Engines run without arming,5,"Hi all, going from 4.2 to 4.3 when the small 2 ""drone power supply is activated, 3 out of two motors start to rotate (little and jerky), without giving the arming command. by activating the arm switch the motors rotate normally and the quad flies regularly. Parameters have changed between 4.2 and 4.3? Thanks! Here are my current parameters: * my esc: *",I was told that DShot lower than 600 is problematic. Maybe this is the case for you.
86,Copter 4.3 & Cube Orange+,1,Is anyone flying Copter 4.3 on the new Cube Orange+?? Any probs?,Probably a few of those are already flying this… most probably few people will answer to your question… are you experiencing any problem regarding this specific HW/SW combination?
87,Why doesn't my quad finish yaw autotune? Roll and pitch work fine,1,"Hi all, I am doing the tuning on my small quad 4 ""(arducopter 4.3 stable FC Kakute F4 1MB) and I have problems with autotune. Roll and pitch autotune worked well saving the new values in the Flight controller, while autotune Yaw (even after 9 minutes of flight) is not completed. On the log I also find messages like: autotune failing please tune manually. How can I solve? I also did a test with the log disabled to save memory (fc 1MB) but it didn’t work. I attach a log (anonymous ctrl F4 mission planner option). Thanks! *",Try increasing ANGLE_YAW_P from default before running Yaw Autotune again. 6.5 maybe.
87,Why doesn't my quad finish yaw autotune? Roll and pitch work fine,2,"Hi all, I am doing the tuning on my small quad 4 ""(arducopter 4.3 stable FC Kakute F4 1MB) and I have problems with autotune. Roll and pitch autotune worked well saving the new values in the Flight controller, while autotune Yaw (even after 9 minutes of flight) is not completed. On the log I also find messages like: autotune failing please tune manually. How can I solve? I also did a test with the log disabled to save memory (fc 1MB) but it didn’t work. I attach a log (anonymous ctrl F4 mission planner option). Thanks! *","Hi Dave, thanks. Here?"
87,Why doesn't my quad finish yaw autotune? Roll and pitch work fine,3,"Hi all, I am doing the tuning on my small quad 4 ""(arducopter 4.3 stable FC Kakute F4 1MB) and I have problems with autotune. Roll and pitch autotune worked well saving the new values in the Flight controller, while autotune Yaw (even after 9 minutes of flight) is not completed. On the log I also find messages like: autotune failing please tune manually. How can I solve? I also did a test with the log disabled to save memory (fc 1MB) but it didn’t work. I attach a log (anonymous ctrl F4 mission planner option). Thanks! *",Right Alberto. The thought is it will give it a bit more authority to make and return the Yaw twitches. If it doesn’t help try increasing Stabilize Yaw ACCEL MA a bit.
87,Why doesn't my quad finish yaw autotune? Roll and pitch work fine,4,"Hi all, I am doing the tuning on my small quad 4 ""(arducopter 4.3 stable FC Kakute F4 1MB) and I have problems with autotune. Roll and pitch autotune worked well saving the new values in the Flight controller, while autotune Yaw (even after 9 minutes of flight) is not completed. On the log I also find messages like: autotune failing please tune manually. How can I solve? I also did a test with the log disabled to save memory (fc 1MB) but it didn’t work. I attach a log (anonymous ctrl F4 mission planner option). Thanks! *","Thanks Dave, now autotune yaw works well! "
88,Dolphin fly altitude oscilations,1,"* as per your request, a new thread with the dolphin fly issue. We flew multiple tests with terrain follow enabled.  The parameter RNGFND_FILT does nothing for us to stabilize flight.  In this post * you describe a parameter PSC_TC_Z.  We do not see that in Mission Planner.  Our firmware is 4.3.0.  After changing parameters we do a reboot of the system. It would make sense to me if there is a seperate PID controller for terrain follow vs. using GPS or barometer, but perhaps I am wrong.  I do not see a PID setup for terrian follow so I have to assume it uses the main controller.  What other options do we have? We have numerous bin files at this location: * Let me know what else I can provide?",I don’t have access to the logs.
88,Dolphin fly altitude oscilations,2,"* as per your request, a new thread with the dolphin fly issue. We flew multiple tests with terrain follow enabled.  The parameter RNGFND_FILT does nothing for us to stabilize flight.  In this post * you describe a parameter PSC_TC_Z.  We do not see that in Mission Planner.  Our firmware is 4.3.0.  After changing parameters we do a reboot of the system. It would make sense to me if there is a seperate PID controller for terrain follow vs. using GPS or barometer, but perhaps I am wrong.  I do not see a PID setup for terrian follow so I have to assume it uses the main controller.  What other options do we have? We have numerous bin files at this location: * Let me know what else I can provide?",I was hoping the Google Drive link would prompt for access.  Try this link: * It provides access until the 1st of December 2022.
88,Dolphin fly altitude oscilations,3,"* as per your request, a new thread with the dolphin fly issue. We flew multiple tests with terrain follow enabled.  The parameter RNGFND_FILT does nothing for us to stabilize flight.  In this post * you describe a parameter PSC_TC_Z.  We do not see that in Mission Planner.  Our firmware is 4.3.0.  After changing parameters we do a reboot of the system. It would make sense to me if there is a seperate PID controller for terrain follow vs. using GPS or barometer, but perhaps I am wrong.  I do not see a PID setup for terrian follow so I have to assume it uses the main controller.  What other options do we have? We have numerous bin files at this location: * Let me know what else I can provide?",What are you asking someone to do with 25 log files?
88,Dolphin fly altitude oscilations,4,"* as per your request, a new thread with the dolphin fly issue. We flew multiple tests with terrain follow enabled.  The parameter RNGFND_FILT does nothing for us to stabilize flight.  In this post * you describe a parameter PSC_TC_Z.  We do not see that in Mission Planner.  Our firmware is 4.3.0.  After changing parameters we do a reboot of the system. It would make sense to me if there is a seperate PID controller for terrain follow vs. using GPS or barometer, but perhaps I am wrong.  I do not see a PID setup for terrian follow so I have to assume it uses the main controller.  What other options do we have? We have numerous bin files at this location: * Let me know what else I can provide?","Sorry, that was for * who requested the log files.  We have a Dolphin issue when using terrain follow.  We also see instability when using optical flow.  Previously in another post we noted a parameter called PSC_TC_Z which we do not see in Copter 4.3.0. We made some changes to our sensor output using a low pass filter and now the dolphin fly issues seems to be resolved.  At least for now.  We’ll have to test more environments."
88,Dolphin fly altitude oscilations,5,"* as per your request, a new thread with the dolphin fly issue. We flew multiple tests with terrain follow enabled.  The parameter RNGFND_FILT does nothing for us to stabilize flight.  In this post * you describe a parameter PSC_TC_Z.  We do not see that in Mission Planner.  Our firmware is 4.3.0.  After changing parameters we do a reboot of the system. It would make sense to me if there is a seperate PID controller for terrain follow vs. using GPS or barometer, but perhaps I am wrong.  I do not see a PID setup for terrian follow so I have to assume it uses the main controller.  What other options do we have? We have numerous bin files at this location: * Let me know what else I can provide?",I am not looking through 25 log files. You will need to point to a specific log file.
89,Precision Landing with OpenMV in Copter V4.30,0,I am trying to achieve precision landing of quadcopter . I am using openmv H7 hardware with the default camera and its example code which send landing_target mavlink message. I am setting PLAND_TYPE = 1 and PLAND_ENABLED = 1. But My Copter can’t display mavlink messages.Is there anything that needs to be changed in the new version of Copter?,
90,Questions about S curve,1,"Hello, for the last days I have been doing numerous missions with sitl, experimenting specifically trying to adjust the parameters to do better turns. After a quick search, I know the firmware now uses s curve for the missions and now I want to study to understand how it works. Could someone guide me towards the right files for S curve and also for the mission commands?","There are no specific Mission Commands, it’s the default method of navigation now."
90,Questions about S curve,2,"Hello, for the last days I have been doing numerous missions with sitl, experimenting specifically trying to adjust the parameters to do better turns. After a quick search, I know the firmware now uses s curve for the missions and now I want to study to understand how it works. Could someone guide me towards the right files for S curve and also for the mission commands?",    
91,Suggestion: rename FS_OPTIONS to FS_EXCEPTIONS,1,"Working through the failsafe settings for my re-engineering of a copter, the function of FS_OPTIONS became more clear when I realized that this parameter is for choosing “exceptions” to specific fail safes - and prevent these when these fail safes might otherwise occur. I suggest this parameter be renamed to reflect this reality to make it easier to understand.",* The place for that: *
91,Suggestion: rename FS_OPTIONS to FS_EXCEPTIONS,2,"Working through the failsafe settings for my re-engineering of a copter, the function of FS_OPTIONS became more clear when I realized that this parameter is for choosing “exceptions” to specific fail safes - and prevent these when these fail safes might otherwise occur. I suggest this parameter be renamed to reflect this reality to make it easier to understand.",*
92,VIBE fail safe threshold and action,1,A fail safe for VIBE can be set with FS_VIBE_ENABLE but I can’t find a parameter to set it’s threshold or action if it’s enabled. Can someone please help me locate these parameters?,There are no parameters to set the threshold it’s hard coded. It’s triggered by 3 Innovations out of range concurrently. See the Wiki entry for Vibe Failsafe: *
92,VIBE fail safe threshold and action,2,A fail safe for VIBE can be set with FS_VIBE_ENABLE but I can’t find a parameter to set it’s threshold or action if it’s enabled. Can someone please help me locate these parameters?,Excellent - Thanks *
93,"Can Copter go into dead reckoning ""DR"" mode?",0,"Working through the failsafe parameters, I’m trying to recall if there’s any mention of a copter going into dead reckoning mode. Seem to me that if position was lost, it would trigger an EKF failsafe. Can someone please assist me in setting these values?",
94,What value of FS_THR_ENABLE to use when FS_OPTIONS are enabled?,1,"Since FS_THR_ENABLED=2 was removed in 4.0+ and that function is now performed by the parameter FS_OPTIONS,  how should FS_THR_ENABLED be set when using FS_OPTIONS?","You set the action you want if the FS is triggered with FS_THR_ENABLED (RTH, Land, SmartRTL, etc) then you set the conditions for not triggering/continuing  with the options."
94,What value of FS_THR_ENABLE to use when FS_OPTIONS are enabled?,2,"Since FS_THR_ENABLED=2 was removed in 4.0+ and that function is now performed by the parameter FS_OPTIONS,  how should FS_THR_ENABLED be set when using FS_OPTIONS?",Yeah Dave has this. I read it like Do FS_THR_ENABLED action Except if FS_OPTIONS
94,What value of FS_THR_ENABLE to use when FS_OPTIONS are enabled?,3,"Since FS_THR_ENABLED=2 was removed in 4.0+ and that function is now performed by the parameter FS_OPTIONS,  how should FS_THR_ENABLED be set when using FS_OPTIONS?","*  & * I must be having a moron moment here…  Let me see if I can get my head around it. Maybe this is what’s meant to happen: There are two basic cases: Case #1: You are not in AUTO flight. (LOITER, ALT-HOLD, STABILIZE, etc.) Case #2: You are in AUTO flight. In Case * you are not in AUTO flight - and a battery, Radio (R/C) or GCS failsafe occurs.  In this case, the copter does what is set in the associated parameters:  BATT_FS_LOW_ACT BATT_FS_CRT_ACT FS_THR_ENABLE FS_GCS_ENABLE  These options (Except BATT_FS_CRT_ACT) are set in Mission Planner here: * In Case #2 - you are in AUTO flight - and failsafe of battery, R/C or GCS communications occurs - the option set on FS_OPTIONS take place. This would make sense to me EXCEPT if a battery fail safe occurs.  In AUTO, you might want the mission to continue on all fail safes except a battery fail safe - where you’d probably want to LAND or RTL. So I guess it boils down to how to you set a battery fail safe for AUTO flight - that’s different than for manual (LOITER, ALT-HOLD, STABILIZE, etc.). The wiki for FS_OPTIONS includes BATTERY as a fail safe condition.  Could that be a mistake in the wiki? I’m terribly sorry for beating this to death - but I really want to understand this correctly - and get it right."
94,What value of FS_THR_ENABLE to use when FS_OPTIONS are enabled?,4,"Since FS_THR_ENABLED=2 was removed in 4.0+ and that function is now performed by the parameter FS_OPTIONS,  how should FS_THR_ENABLED be set when using FS_OPTIONS?","Battery failsafes take precedence over everything, as they should - I’ll verify this in the code if I can. The FS_OPTIONS just modify the handling of FS_THR_ENABLE which is essentially RC loss. FS_GCS_ENABLE only works if Arducopter has detected the use of a GCS - so you can set the options and then NOT use a GCS all the time, and the fallback is FS_THR_ENABLE and other FS_OPTIONS Just to put it out there, this is a GREAT option too: FS_OPTIONS,8 - Continue if landing on any failsafe Essentially, if already landing, dont start an RTL or other action if a failsafe occurs Before this came along, we would see the quad landing as planned, then there would be a battery failsafe and it would rise to the RTL Alt or RTL_CLIMB_MIN and start over… Not good for battery usage. In Case#1 using RC control, you would normally want RC loss to initiate RTL or similar FS_THR_ENABLE,1 FS_OPTIONS,0 (or 8, as I mentioned) FS_GCS_ENABLE,0 or something specific if you expect to be using a GCS all the time In case#2, running an Auto mission, you may be expecting to run out of RC control, but probably want the mission aborted if you run out of GCS comms (eg: long range telem radio) FS_THR_ENABLE,1 FS_OPTIONS,1 (add 8 for the continue if landing option = 9) FS_GCS_ENABLE,1 EDIT It definitely looks to me like the code handles the battery failsafes first and sets the action, and the only exception is for the option “Continue if landing on any failsafe”. Then the radio failsafe and GCS failsafes are handled."
94,What value of FS_THR_ENABLE to use when FS_OPTIONS are enabled?,5,"Since FS_THR_ENABLED=2 was removed in 4.0+ and that function is now performed by the parameter FS_OPTIONS,  how should FS_THR_ENABLED be set when using FS_OPTIONS?","Excellent - thank you for taking the trouble to look this up. I don’t want to mis-interpret the code.  (my coding skills are decades old…) I was trying to think if it might be possible for the FS_OPTIONS routines to fire on a battery fail safe if no battery failsafe routine were called by BATT_FS_LOW_ACT or BATT_FS_CRT_ACT.  But it seems the only way that could happen is if the battery failsafe parameters weren’t set - so if that’s true, they wouldn’t be there to trigger a FS_OPTIONS failsafe either. If that’s true - then the wiki text ought to be corrected to eliminate the work “battery” here: Would you agree? If so - I’ll do what I can to ask that the wiki be updated. I don’t know how many other folks are mystified by this.  From the conversations about it I’ve had in the past, I get the feeling it’s often just glossed over.  And it’s surely not an easy thing to test in a test flight. Once again Shawn, you’ve provided a great service.  I hope others benefit from it when this thread comes up in their searches."
94,What value of FS_THR_ENABLE to use when FS_OPTIONS are enabled?,6,"Since FS_THR_ENABLED=2 was removed in 4.0+ and that function is now performed by the parameter FS_OPTIONS,  how should FS_THR_ENABLED be set when using FS_OPTIONS?","BTW - you’re 100% right about the FS_OPTIONS setting for continuing when landing. I had a copter that had just finished a photo survey mission trigger a battery failsafe on touchdown but before it disarmed.  It was quite a surprise to see it launch back into the air. Now that I think about it - the option that prevents this:  … includes a battery failsafe among the “any”.  So that being the case (and perhaps the only case) that a battery failsafe would trigger a FS_OPTIONS procedure, the word “battery” is OK in the wiki text. But in my opinion, the language could sure be a lot clearer.  I’ve spent far too much time getting my head around this today.  We all have."
94,What value of FS_THR_ENABLE to use when FS_OPTIONS are enabled?,7,"Since FS_THR_ENABLED=2 was removed in 4.0+ and that function is now performed by the parameter FS_OPTIONS,  how should FS_THR_ENABLED be set when using FS_OPTIONS?",I forgot to list BATT_LOW_MAH as one of the battery fail safes.
94,What value of FS_THR_ENABLE to use when FS_OPTIONS are enabled?,8,"Since FS_THR_ENABLED=2 was removed in 4.0+ and that function is now performed by the parameter FS_OPTIONS,  how should FS_THR_ENABLED be set when using FS_OPTIONS?",And BATT_CRT_MAH. I hope there’s not anything else…
95,Roll oscillation/overshoot and quicktuning,1,"I am trying to get a new hexcopter stable with a Cube Orange autopilot, Tarot T960 frame (X configuration), 18 inch props, TMotor 80A ESCs, and T-Motor U7 420Kv motors. I have not loved the autotune mode due to our limited flight area and wide movements, and had a good experience with the VTOL quicktune script before. I got the copter stable enough and vibration free in Alt Hold, then ran the quicktune script to get a good set of rate parameters, which it seems to have done. One note is my 2 cents on the “T-Motor and MOT_THST_EXPO” debate: it didn’t seem to do well flying with this at 0.2, so we did a (crude) thrust stand test and got a value closer to 0.6. Based on this I set it back to the default 0.65 and that made the copter more stable. But there is still this persistent overshoot in the roll axis in Loiter mode. I tried reducing ATC_ANG_RLL_P by 60-70% of the default 4.5 to 1.75 but it still persists and makes me feel like I am going too low. Does it need to be raised? Is there some other underlying cause I’m missing? Are the rate gains bad? Do I have to suck it up and use the autotune mode? Here are two logs, the first is the complete log of running the VTOL quicktune script and then another flight after doing some brief testing in LOITER. The second log contains my experiments with reducing the ATC_ANG_RLL_P parameter. *","There’s some higher than desired Z vibrations.  Check your props are tracking well, and that none of the arms/motors are loose. As for the tuning, my vote is to run autotune.  You can see the roll oscillations, but the pitch could be dialed in better as well."
95,Roll oscillation/overshoot and quicktuning,2,"I am trying to get a new hexcopter stable with a Cube Orange autopilot, Tarot T960 frame (X configuration), 18 inch props, TMotor 80A ESCs, and T-Motor U7 420Kv motors. I have not loved the autotune mode due to our limited flight area and wide movements, and had a good experience with the VTOL quicktune script before. I got the copter stable enough and vibration free in Alt Hold, then ran the quicktune script to get a good set of rate parameters, which it seems to have done. One note is my 2 cents on the “T-Motor and MOT_THST_EXPO” debate: it didn’t seem to do well flying with this at 0.2, so we did a (crude) thrust stand test and got a value closer to 0.6. Based on this I set it back to the default 0.65 and that made the copter more stable. But there is still this persistent overshoot in the roll axis in Loiter mode. I tried reducing ATC_ANG_RLL_P by 60-70% of the default 4.5 to 1.75 but it still persists and makes me feel like I am going too low. Does it need to be raised? Is there some other underlying cause I’m missing? Are the rate gains bad? Do I have to suck it up and use the autotune mode? Here are two logs, the first is the complete log of running the VTOL quicktune script and then another flight after doing some brief testing in LOITER. The second log contains my experiments with reducing the ATC_ANG_RLL_P parameter. *","Thanks, I had wondered about that. Is it generally expected that the vibrations in all axes be pretty equal? I will double check the mechanical aspects. Just to confirm, do the values of ATC_ANG_{PITT_RLL_YAW}_P affect the autotune at all? I didn’t think so but want to be sure. I know it adjusts them in its course but they don’t have to be very good to begin do they?"
95,Roll oscillation/overshoot and quicktuning,3,"I am trying to get a new hexcopter stable with a Cube Orange autopilot, Tarot T960 frame (X configuration), 18 inch props, TMotor 80A ESCs, and T-Motor U7 420Kv motors. I have not loved the autotune mode due to our limited flight area and wide movements, and had a good experience with the VTOL quicktune script before. I got the copter stable enough and vibration free in Alt Hold, then ran the quicktune script to get a good set of rate parameters, which it seems to have done. One note is my 2 cents on the “T-Motor and MOT_THST_EXPO” debate: it didn’t seem to do well flying with this at 0.2, so we did a (crude) thrust stand test and got a value closer to 0.6. Based on this I set it back to the default 0.65 and that made the copter more stable. But there is still this persistent overshoot in the roll axis in Loiter mode. I tried reducing ATC_ANG_RLL_P by 60-70% of the default 4.5 to 1.75 but it still persists and makes me feel like I am going too low. Does it need to be raised? Is there some other underlying cause I’m missing? Are the rate gains bad? Do I have to suck it up and use the autotune mode? Here are two logs, the first is the complete log of running the VTOL quicktune script and then another flight after doing some brief testing in LOITER. The second log contains my experiments with reducing the ATC_ANG_RLL_P parameter. *","I was able to halve vibrations overall by replacing a couple bad propellers (though they seem to not be the best quality but they’re what I have), removing the motor vibration bumpers and hard-mounting them, and adjusting the notch filter to target the lowest frequency peak at 50Hz instead of the highest magnitude at 100. I tried to run the autotune but it complained that it could not level after several iterations and suggested manual tuning. I wonder if this was due to the wind, or the fact that the gains need to be reduced from what the script determined. Log is below. I also have some zooming around in LOITER and ALT_HOLD to see how things are doing. There is certainly some overshoot but it does not seem grossly ill-tuned to me. I would like it to be better though."
95,Roll oscillation/overshoot and quicktuning,4,"I am trying to get a new hexcopter stable with a Cube Orange autopilot, Tarot T960 frame (X configuration), 18 inch props, TMotor 80A ESCs, and T-Motor U7 420Kv motors. I have not loved the autotune mode due to our limited flight area and wide movements, and had a good experience with the VTOL quicktune script before. I got the copter stable enough and vibration free in Alt Hold, then ran the quicktune script to get a good set of rate parameters, which it seems to have done. One note is my 2 cents on the “T-Motor and MOT_THST_EXPO” debate: it didn’t seem to do well flying with this at 0.2, so we did a (crude) thrust stand test and got a value closer to 0.6. Based on this I set it back to the default 0.65 and that made the copter more stable. But there is still this persistent overshoot in the roll axis in Loiter mode. I tried reducing ATC_ANG_RLL_P by 60-70% of the default 4.5 to 1.75 but it still persists and makes me feel like I am going too low. Does it need to be raised? Is there some other underlying cause I’m missing? Are the rate gains bad? Do I have to suck it up and use the autotune mode? Here are two logs, the first is the complete log of running the VTOL quicktune script and then another flight after doing some brief testing in LOITER. The second log contains my experiments with reducing the ATC_ANG_RLL_P parameter. *","Can you get MOT_SPIN_MIN,0.15 to be a fraction lower and still be OK for descents? Maybe 0.13 ? You dont want to cause a desync so leave it at 0.15 if you have to. I would also change these ATC_THR_MIX_MAN,0.5 INS_ACCEL_FILTER,10 INS_HNTCH_BW,15 INS_HNTCH_FREQ,30 INS_LOG_BAT_MASK,7 INS_LOG_BAT_OPT,0 PSC_ACCZ_P,0.2 PSC_ACCZ_I,0.4 and recheck the next log to verify these HNOTCH settings, then put back INS_LOG_BAT_OPT,2 for another test flight. If that HNOTCH works out OK then try Autotune just for pitch and roll - do yaw later, it’s less critical AUTOTUNE_AGGR,0.075 AUTOTUNE_AXES,3"
95,Roll oscillation/overshoot and quicktuning,5,"I am trying to get a new hexcopter stable with a Cube Orange autopilot, Tarot T960 frame (X configuration), 18 inch props, TMotor 80A ESCs, and T-Motor U7 420Kv motors. I have not loved the autotune mode due to our limited flight area and wide movements, and had a good experience with the VTOL quicktune script before. I got the copter stable enough and vibration free in Alt Hold, then ran the quicktune script to get a good set of rate parameters, which it seems to have done. One note is my 2 cents on the “T-Motor and MOT_THST_EXPO” debate: it didn’t seem to do well flying with this at 0.2, so we did a (crude) thrust stand test and got a value closer to 0.6. Based on this I set it back to the default 0.65 and that made the copter more stable. But there is still this persistent overshoot in the roll axis in Loiter mode. I tried reducing ATC_ANG_RLL_P by 60-70% of the default 4.5 to 1.75 but it still persists and makes me feel like I am going too low. Does it need to be raised? Is there some other underlying cause I’m missing? Are the rate gains bad? Do I have to suck it up and use the autotune mode? Here are two logs, the first is the complete log of running the VTOL quicktune script and then another flight after doing some brief testing in LOITER. The second log contains my experiments with reducing the ATC_ANG_RLL_P parameter. *","Thanks for your time reviewing this. I had a couple questions before changing:  I’m not sure what to look for when lowering MOT_SPIN_MIN, does anything else need to be changed too? I recognize the hover is very close to it but it looks like the motor PWMs bottom out only when the copter is already touching the ground. Desyncs would obviously be a very undesirable outcome. Why change the notch frequency? I imagine you saw energy at 30Hz but that was pretty dynamic flight in the log. Just hovering it’s close to 50. Should INS_HNTCH_FM_RAT be adjusted instead/too? The Z seemed good to me, what is the reason to change those parameters? I do see advice online to change PSC_ACCZ_P to be close to MOT_THST_HOVER but it’s not clear why. Is reducing the INS_ACCEL_FILTER due to vibration? It turns out I did not actually change the levels very much outside in real flight unfortunately. "
95,Roll oscillation/overshoot and quicktuning,6,"I am trying to get a new hexcopter stable with a Cube Orange autopilot, Tarot T960 frame (X configuration), 18 inch props, TMotor 80A ESCs, and T-Motor U7 420Kv motors. I have not loved the autotune mode due to our limited flight area and wide movements, and had a good experience with the VTOL quicktune script before. I got the copter stable enough and vibration free in Alt Hold, then ran the quicktune script to get a good set of rate parameters, which it seems to have done. One note is my 2 cents on the “T-Motor and MOT_THST_EXPO” debate: it didn’t seem to do well flying with this at 0.2, so we did a (crude) thrust stand test and got a value closer to 0.6. Based on this I set it back to the default 0.65 and that made the copter more stable. But there is still this persistent overshoot in the roll axis in Loiter mode. I tried reducing ATC_ANG_RLL_P by 60-70% of the default 4.5 to 1.75 but it still persists and makes me feel like I am going too low. Does it need to be raised? Is there some other underlying cause I’m missing? Are the rate gains bad? Do I have to suck it up and use the autotune mode? Here are two logs, the first is the complete log of running the VTOL quicktune script and then another flight after doing some brief testing in LOITER. The second log contains my experiments with reducing the ATC_ANG_RLL_P parameter. *",I changed the INS_ACCEL_FILTER but elected to not touch the HNTCH settings yet. I will triple check that but it seems like the current setting is good based on the instructions on the wiki. I also will look at the PSC_ACCZ settings and MOT_SPIN_MIN later but I have not seen issues in Z or with the motor minimums yet. I also did manage to reduce vibrations some by adjusting the landing gear. I did the autotune in two separate flights here: * It looks and feels a lot better now. The maximum accelerations have reduced which feels friendlier and there is much less overshoot. I deliberately tried to upset it near the end of the second log and it got a little dicey but recovered. I think I was just asking for trouble there. I will get back to you about the PSC_ACCZ and MOT_SPIN_MIN. Anything else to try? Do you think there is too much oscillation in the motor outputs still? Thank you very much again.
96,CLEAR_ALL_MISSION mavlink message not working,1,"I’m trying to clear all mission from STIL using CLEAR_ALL_MISSION mavlink command but its not working, I use this code  import time import sys from pymavlink import mavutil master = mavutil.mavlink_connection(‘udpin:localhost:14551’) master.wait_heartbeat() master.mav.mission_clear_all_send( master.target_system, master.target_component,0 ) while True: time.sleep(0.01) try: message = master.recv_match(type = “MISSION_ACK” , blocking=True).to_dict() print(message) except Exception as error: print(error) sys.exit(0) and I also getting a feedback of “MISSION_ACK: TYPE_MISSION: ACCEPTED” but when I’m changing the mode to auto mode after clear all mission, the vehicle again starting performing previous mission. please let me know, if i’m doing anything wrong…",I had a look at the Arducopter source code but didn’t go too deep. I would assume it is unsupported in mission type you are sending in the packet. Only these mission types are supported: MAV_MISSION_TYPE_MISSION: MAV_MISSION_TYPE_RALLY: MAV_MISSION_TYPE_FENCE:
97,APD ESC Telemetry Cube Orange Plus,1,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","I also have had the 80F3 APD ESCs reporting telemetry, haven’t tried the 40F3’s but they should be identical. There is an option for “DShot/Betaflight Telemetry” but I cant remember what the default setting is. The other option is PWM telemetry, which you dont want. When it works the ESC telem data shows in MissionPlanner Status screen when using the Motor Test. DHSOT600 will be OK to use. Are you getting the BLHELI telem in .bin logs but not showing onscreen in MissionPlanner? Ensure SERIAL0_PROTOCOL is set to 2 for MAVLINK2, and serial 1 as well if you use a telemetry radio."
97,APD ESC Telemetry Cube Orange Plus,2,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","Hi Shawn, The default setting for telemetry output on the APDs is the Betaflight type, particularly on ver 2.2.1 which is a configurable beta firmware. I saw the other options, but as you said those are incorrect for this use case. I am aware of how to check if it is working, and have always had non zero values for ESC related data in the status tab, and no ESC related items in my .bin files. I have made sure to check while spinning a motor up, even though APD states that their ESCs just need a valid throttle signal to output TLM. DSHOT600 is okay to use, yes, but with the length of the wiring to the ESC’s on this build, I am going with a lower rate DS protocol as per the APD docs. Unless the APDs only release data on the TLM line when hit with dshot600, 150 should be fine and is in line with the APD docs. All Telemetry connections between AP and my GCS are MAVL2 I have seen you suggest SERIALX_OPTIONS = 16 as well as 32 to someone on another thread. Can you share the logic behind how you came to that conclusion? Might help make sense of why it’s not working on the CubeOrange+"
97,APD ESC Telemetry Cube Orange Plus,3,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","Can you check the Messages tab in MissionPlanner and see what you’ve got for RCout Something like RCOut: PWM:1-8 DS600:9-12 That message is also in the TLOG, not .bin log yet (but it’s being moved under a PR) Previously for the Cube Orange I’ve definitely used SERIALx_OPTIONS = 16  * Also on another non-Cube flight controller I’m using the same params SERIAL4_BAUD,115 SERIAL4_OPTIONS,16 SERIAL4_PROTOCOL,16 The only other related serial port thing I can think of changing is BRD_SER2_RTSCTS,0 but I’m fairly certain I didnt have to do that for ESC telem to work with a Cube Orange."
97,APD ESC Telemetry Cube Orange Plus,4,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","I have PWM out for 1-8 DS150 for 9-12 and I believe some more PWM after that. I have tried SERIALx_OPTIONS, 16 on multiple UARTs with no luck. I truly suspect something is amiss beyond the physical configurations and relevant params. Testing the 80s on the exact same setup should be revealing. I suspect it’s something on the APD end as to why the 40s are not working. I don’t believe either of the UARTS that i have been using have flow control, so not sure about the suggested BRD parameter. I’ll give it a shot before I tear it down and test the 80s."
97,APD ESC Telemetry Cube Orange Plus,5,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","My 2 cents. Cube Orange has always been troublesome on the serial ports. For FrSky S-Port telemetry all my Oranges sport an external diode to handle duplexing with just signal inversion being handled internally via serial_options. Haven’t used an Orange Plus yet, tho’. [offtopic] Where’d you find the 40F3s ? I have one, bought 4-5 years ago, when APD launched them, but they’ve been out of stock everywhere ever since."
97,APD ESC Telemetry Cube Orange Plus,6,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","Interesting on the diode bit… I was thinking it might be something having to do with the way that the options are handled on the serial port. For some reason, you have to run RX pulldown on it to get telemetry out of the 80amp APDs. I assumed that these would be the same, but no dice even though I believe that the telemetry format is unchanged from that of any APD, or blheli ESC. I had a single 80amp APD hooked up to this exact same Cube Orange+ and had telemetry working perfectly. I am going to do this with all four 80amp APDs I have just to verify this all works. I’m still looking for an explanation from somewhere why RX_PULLDOWN (16) is needed for SERIALx OPTIONS for the APD telemetry. Something to do with the logic signal level used or something? I have access to someone that had done some testing with them in the past and had a lot of them around. I had two sets but killed one recently, so now I have one set and 3 spares. I don’t think that they have plans to make them again, but I could be wrong. To the best of my knowledge they are working more on the larger models like the 80 and 120amp versions."
97,APD ESC Telemetry Cube Orange Plus,7,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","Hi Zane, Definitely try other serial options, like pullup or nothing, to see what works. Let us know what you find. You could always email APD and they’d probably tell you what should work *"
97,APD ESC Telemetry Cube Orange Plus,8,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","I have been in contact with APD already about this. They are interested in finding a resolution to this issue as well and have been quite responsive to my questions. I was also assured that telemetry is handled the same on the 40 and 80 amp versions, so no change in ardu params should be necessary between models. They confirmed that SERIAL_OPTIONS, 16 is correct. I’m quite curious what is going on here. About to wire up the 80s to see what gives, as I am pretty sure they are going to work right off the bat."
97,APD ESC Telemetry Cube Orange Plus,9,"Greetings, I am having issues receiving ESC Telemetry from my APD40F3 series ESCs. From what I can tell I have set everything up correctly per the wiki, and per some other suggestions I have found in the forums here. I will do my best to list things that I have tried. My suspicion is that I need to set some options on the serial port that are not obvious, or something needs to be changed firmware on the Cube to enable this functionality. Flight Controller: Cube Orange Plus FC Ver. 4.3.0 APD ESC Ver. 2.2.1 Aux 1-4 for motor signal outputs, DSHOT150 All 4 ESC TLM wires connected to SERIAL2 RX pin SERIAL2_PROTOCOL = 16 SERIAL2_BAUD = 115 SERIAL2_OPTIONS = 16 (have also tried 32) It’s been suggested the telemetry signal from these ESCs is inverted in some way. Curious if anyone else has got this working. I have in the past got a 80F3 APD ESC to talk to the CubeOrange+ before, so I’m amiss as to what is happening here and where to start troubleshooting. thanks, Zane","Hello all, I just connected up a single 80F3, and have telemetry using SERIALx_PROTOCOL, 16 and SERIALx_OPTIONS, 16. No struggle whatsoever. The next step is to hook up all 4 of them and make sure that I am getting telemetry from all of them at once. What I can say definitively at this point is that there really does seem to be a difference in how telemetry (likely logic voltage…?) is handled between the 80 and 40a variants. I am going to report these findings back to APD and see what they say."
98,Initial setup pids doc reference to copter 4.1 and 4.2 ATC_ANG_YAW_P & ACRO_YAW_P,1,In the wiki for initial PID setup there is reference to specific pid setups for copter 4.1 and 4.2. Setting up a new copter with 4.3 - how should I set these: * Notice that these are not among the automated PID setup parameters.,ACRO_YAW_P is gone so no consideration there. IMO you can leave the ATC_ANGLE_X_P values at default assuming you are configuring to run Auto Tune. In practice they may be close to what that calculation produces but that depends on several factors. If Manual Tuning you would put those on an in-flight tuning pot as part of the iterative process.
98,Initial setup pids doc reference to copter 4.1 and 4.2 ATC_ANG_YAW_P & ACRO_YAW_P,2,In the wiki for initial PID setup there is reference to specific pid setups for copter 4.1 and 4.2. Setting up a new copter with 4.3 - how should I set these: * Notice that these are not among the automated PID setup parameters.,"I’m not sure why 4.1 and 4.2 is mentioned for ACCELs since there’s no difference even going back several versions. 3.6 → 4.0 some params names changed EDIT - was reading it on my phone earlier, couldnt read the pic properly The ATC_ANG_YAW_P, whatever it’s called in different versions, should be adjusted as per the formula. 4.1 → 4.2 is just when it changed names. The formula still applies to 4.3 (4.2 and later)"
98,Initial setup pids doc reference to copter 4.1 and 4.2 ATC_ANG_YAW_P & ACRO_YAW_P,3,In the wiki for initial PID setup there is reference to specific pid setups for copter 4.1 and 4.2. Setting up a new copter with 4.3 - how should I set these: * Notice that these are not among the automated PID setup parameters.,"Thanks * I guess if we take the language in the wiki literally, the formula for ATC_ANG_YAW_P only applies to Copter 4.2 - and and since I’m running Copter 4.3, I should leave this parameter alone as you suggest. And as you say - Auto Tune addresses these parameters. Thanks Dave"
98,Initial setup pids doc reference to copter 4.1 and 4.2 ATC_ANG_YAW_P & ACRO_YAW_P,4,In the wiki for initial PID setup there is reference to specific pid setups for copter 4.1 and 4.2. Setting up a new copter with 4.3 - how should I set these: * Notice that these are not among the automated PID setup parameters.,"As I read it, “ACCELs” are inputs to the formulas noted for 4.1 and 4.2. There’s no direction to sent any “ACCELs” parameters specific to 4.1 or 4.2. The wiki does direct to set three “ACCELs” parameters for all versions. Am I looking at this the right way? Thanks Shawn"
98,Initial setup pids doc reference to copter 4.1 and 4.2 ATC_ANG_YAW_P & ACRO_YAW_P,5,In the wiki for initial PID setup there is reference to specific pid setups for copter 4.1 and 4.2. Setting up a new copter with 4.3 - how should I set these: * Notice that these are not among the automated PID setup parameters.,"Yes you calculate the accels then calculate the ATC_ANG_YAW_P (and other things) It’s the same parameter (same function) as in earlier AC version, it just changed the name in 4.3 to be grouped with other parameters of similar functions. So you still DEFINITELY calculate ATC_ANG_YAW_P the same way you did for ACRO_YAW_P My spreadsheet does it all for you. I’m updating it now for the new param name and some other stuff, I’ll post the link here. And the Initial Parameters in MissionPlanner is based on the spreadsheet. It just needs an update for the new param name. I’ll work on that, or more correctly, ask someone else to work on that  Check it out and see if you can spot errors or something that needs changing. Most of it has been in place quite some time and well tested."
99,Tilting arms to help with yaw,1,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,Have you got a .bin log to check and a detailed description please? We might be able to fix the yaw issue.
99,Tilting arms to help with yaw,2,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,My yaw works good just wanted to give motor tilting a shot. Designing a new frame and wanted to implement it. If i recall Leonard adviced on having motor yaw tilt.
99,Tilting arms to help with yaw,3,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,Finally found it. I paste it here for reference and for anyone who would like to test it. * It looks like 3° in the direction that would increase the resulting yaw torque are a pretty good starting point for medium/big copters.
99,Tilting arms to help with yaw,4,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,“Twisting arms” would be a better way of phrasing it. Tilt makes me think of lifting up the end of the arms  You can clearly see the required configuration in the article on SUAS News
99,Tilting arms to help with yaw,5,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,what required confuguration?
99,Tilting arms to help with yaw,6,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,the motors on the photo are tilted in a similar configuration you are looking at doing is all.
99,Tilting arms to help with yaw,7,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,The paper linked above is a bit deeper in explanation. The pic is a bit misleading since the motors don’t need to be facing up and down.
99,Tilting arms to help with yaw,8,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,"Sorry to have phrased it in a bad way, not native english "
99,Tilting arms to help with yaw,9,There was a post somewhere with advice on tilting motors to help on yaw. I have been looking for it since yesterday but i can’t find it. I would like to tilt motors 1-2° to help on yaw since my copter never really had sharp yaw. If anyone can find the thread or have any experience on yaw motor tilt please advice. thanks,Not at all - I was just saying my way of thinking of this motor configuration.
100,TYPO? Initial values for INS_GYRO_FILTER & INS_ACCEL_FILTER,1,"In the ArduPilot wiki on initial setup, it states to set the INS_ACCEL_FILTER to 10Hz. The default value on firmware installation is 20Hz. Also - when doing  the SETUP/INITIAL PARAMETER SETUP function, it says in a NOTE that you can keep INS_GYRO_FILTER at 20.  The note also makes reference to small frames and prop sizes. But INS_GYRO_FILTER is based on prop size - so this doesn’t make sense to me. I have a feeling that the note is suggesting that we can keep INS_ACCEL_FILTER=20 - which is the firmware default.","* 10Hz should be the default for every craft. That note on the Initial Parameter Setup should be updated. You can search the forum here and find some recent dialog about it with Dev input. The note about “probably only for small frames/props. At first, you can keep it at 20” needs updating too. A 7"" or less propped craft will be an oscillating mess with a Gyro filter at 20Hz."
100,TYPO? Initial values for INS_GYRO_FILTER & INS_ACCEL_FILTER,2,"In the ArduPilot wiki on initial setup, it states to set the INS_ACCEL_FILTER to 10Hz. The default value on firmware installation is 20Hz. Also - when doing  the SETUP/INITIAL PARAMETER SETUP function, it says in a NOTE that you can keep INS_GYRO_FILTER at 20.  The note also makes reference to small frames and prop sizes. But INS_GYRO_FILTER is based on prop size - so this doesn’t make sense to me. I have a feeling that the note is suggesting that we can keep INS_ACCEL_FILTER=20 - which is the firmware default.",Thanks * - The reason I suspected INS_ACCEL_FILTER might be set to 20 was because of a comment by *: Here’s the link to the whole thread: * Thanks Dave
100,TYPO? Initial values for INS_GYRO_FILTER & INS_ACCEL_FILTER,3,"In the ArduPilot wiki on initial setup, it states to set the INS_ACCEL_FILTER to 10Hz. The default value on firmware installation is 20Hz. Also - when doing  the SETUP/INITIAL PARAMETER SETUP function, it says in a NOTE that you can keep INS_GYRO_FILTER at 20.  The note also makes reference to small frames and prop sizes. But INS_GYRO_FILTER is based on prop size - so this doesn’t make sense to me. I have a feeling that the note is suggesting that we can keep INS_ACCEL_FILTER=20 - which is the firmware default.",You will find later posts with a different opinion in a thread where Leonard was posting. This isn’t the one but it’s informative in this regard anyway. *
100,TYPO? Initial values for INS_GYRO_FILTER & INS_ACCEL_FILTER,4,"In the ArduPilot wiki on initial setup, it states to set the INS_ACCEL_FILTER to 10Hz. The default value on firmware installation is 20Hz. Also - when doing  the SETUP/INITIAL PARAMETER SETUP function, it says in a NOTE that you can keep INS_GYRO_FILTER at 20.  The note also makes reference to small frames and prop sizes. But INS_GYRO_FILTER is based on prop size - so this doesn’t make sense to me. I have a feeling that the note is suggesting that we can keep INS_ACCEL_FILTER=20 - which is the firmware default.","Yeah after that Leonard confirmed it should definitely be INS_ACCEL_FILTER = 10 from now onwards. There may not be any need to rerun autotune, but it could help if autotune didnt produce expected results."
101,Error during Auto landing,1,The phenomenon of taking off again as soon as it touches the ground upon automatic landing How can I solve this problem?,"* AUTO_OPTIONS, 3 DISARM_DELAY, 0 (or greater than the time before take off again) MIS_OPTIONS,4"
101,Error during Auto landing,2,The phenomenon of taking off again as soon as it touches the ground upon automatic landing How can I solve this problem?,"MIS_OPTIONS, There is Only description 0 or 2 options in the ardupilot docu and Mission planner parameter. Should I ignore it and change it to 4?"
101,Error during Auto landing,3,The phenomenon of taking off again as soon as it touches the ground upon automatic landing How can I solve this problem?,The common error of not understanding it’s a bitmask. Many parameters are. This one states that it is. 
101,Error during Auto landing,4,The phenomenon of taking off again as soon as it touches the ground upon automatic landing How can I solve this problem?,"Thanks, I should test again in this week."
102,Look at the copter in gusty wind conditions,1,Amazing how Position Hold algorithms of Ardupilot can hold the copter in gusty wind conditions.          ,"* Are you using PosHold flight mode or Loiter flight mode? If you are using PosHold, give a try to Loiter, it have many parameters and you can improve even more your performance tuning some parameters."
102,Look at the copter in gusty wind conditions,2,Amazing how Position Hold algorithms of Ardupilot can hold the copter in gusty wind conditions.          ,"That flight is on Position Hold. You mentioned using PosHold, has many parameters to improve  performance tuning. How do you attain tha?"
102,Look at the copter in gusty wind conditions,3,Amazing how Position Hold algorithms of Ardupilot can hold the copter in gusty wind conditions.          ,Use Loiter. There’s extra tuning params for Loiter and it’s much updated over PosHold.
102,Look at the copter in gusty wind conditions,4,Amazing how Position Hold algorithms of Ardupilot can hold the copter in gusty wind conditions.          ,Take a look on these parameters:
102,Look at the copter in gusty wind conditions,5,Amazing how Position Hold algorithms of Ardupilot can hold the copter in gusty wind conditions.          ,"Thanks, I found the additional tunning parameters of Loiter. I also like Drift flight mode. I’m just wondering cause the WIKI says you fly the copter using Pitch and Yaw. Aileron will be controlled by the FC. But I find I have Aileron stick control. Not a big drama. I fly my copter yesterday with high winds on Drift mode and I love how the mode fight with the wind. AMAZING."
103,OpenCV Causing EKF/GPS/Velocity Issues,1,"Hello, I’m currently working on doing image processing on my pixhawk/pi drone, but everytime python would request the camera through openCV, the drone’s sensors would go erratic and refuse to fly normally. I’m using dronekit-python to connect to the drone. There are two videos attached if it helps clarify. * * I’m not sure what is causing this, is it a voltage issue? I know the raspberry pi draws a considerable amount of power to maintan 3 fps, but I don’t see why the power module cant deliver a stable voltage to the pixhawk. Thanks so much","Can you post a tlog? It’ll help narrow down the issue. Initial guess is maybe some sort of EMI from the Pi/Camera into the GPS. EDIT: Also, get a better power supply for the Pi, the “low voltage” warning mean that Pi’s power supply is not stable."
103,OpenCV Causing EKF/GPS/Velocity Issues,2,"Hello, I’m currently working on doing image processing on my pixhawk/pi drone, but everytime python would request the camera through openCV, the drone’s sensors would go erratic and refuse to fly normally. I’m using dronekit-python to connect to the drone. There are two videos attached if it helps clarify. * * I’m not sure what is causing this, is it a voltage issue? I know the raspberry pi draws a considerable amount of power to maintan 3 fps, but I don’t see why the power module cant deliver a stable voltage to the pixhawk. Thanks so much","Heres a tlog from the day before with more data (same gps glitch, compass failures). The logs of the video weren’t recorded but started 2 minutes later at 9:59, so I think theres only one error in that log Nov 16: * Nov 17: * I’m powering the Pi with the serial 1 port from the pixhawk connected to the GPIO pins, would I need an actual power bank in the air along with the battery, or something like a UBEC? Thanks for the help"
103,OpenCV Causing EKF/GPS/Velocity Issues,3,"Hello, I’m currently working on doing image processing on my pixhawk/pi drone, but everytime python would request the camera through openCV, the drone’s sensors would go erratic and refuse to fly normally. I’m using dronekit-python to connect to the drone. There are two videos attached if it helps clarify. * * I’m not sure what is causing this, is it a voltage issue? I know the raspberry pi draws a considerable amount of power to maintan 3 fps, but I don’t see why the power module cant deliver a stable voltage to the pixhawk. Thanks so much","Do not power your Pi via your Flight Controller, it is a big mistake to do this, you can cause a brownout on your system. Buy a great quality BEC with the correct ammout of power you need and power them externaly (both your Rasp Pi and other payloads as cameras etc)."
103,OpenCV Causing EKF/GPS/Velocity Issues,4,"Hello, I’m currently working on doing image processing on my pixhawk/pi drone, but everytime python would request the camera through openCV, the drone’s sensors would go erratic and refuse to fly normally. I’m using dronekit-python to connect to the drone. There are two videos attached if it helps clarify. * * I’m not sure what is causing this, is it a voltage issue? I know the raspberry pi draws a considerable amount of power to maintan 3 fps, but I don’t see why the power module cant deliver a stable voltage to the pixhawk. Thanks so much","How is the camera connected to the Raspberry Pi? USB3 in particular causes horrendous GPS interference, especially on smaller drones."
103,OpenCV Causing EKF/GPS/Velocity Issues,5,"Hello, I’m currently working on doing image processing on my pixhawk/pi drone, but everytime python would request the camera through openCV, the drone’s sensors would go erratic and refuse to fly normally. I’m using dronekit-python to connect to the drone. There are two videos attached if it helps clarify. * * I’m not sure what is causing this, is it a voltage issue? I know the raspberry pi draws a considerable amount of power to maintan 3 fps, but I don’t see why the power module cant deliver a stable voltage to the pixhawk. Thanks so much","The camera is connected via the camera port on the Pi board. I think I temporarily fixed the issue by positioning the GPS further away from the electric components. Most of the EKF variance worsened as I moved the GPS closer to the pixhawk, and didn’t really change when I placed it close to the camera. Thanks for all the help everyone"
103,OpenCV Causing EKF/GPS/Velocity Issues,6,"Hello, I’m currently working on doing image processing on my pixhawk/pi drone, but everytime python would request the camera through openCV, the drone’s sensors would go erratic and refuse to fly normally. I’m using dronekit-python to connect to the drone. There are two videos attached if it helps clarify. * * I’m not sure what is causing this, is it a voltage issue? I know the raspberry pi draws a considerable amount of power to maintan 3 fps, but I don’t see why the power module cant deliver a stable voltage to the pixhawk. Thanks so much","Here’s a plot of one of the GPS failures: I wasn’t able to narrow down a particular cause, but going by your comments above, it does really sounds like an EMI issue. What model of GPS and Pixhawk are you using?"
103,OpenCV Causing EKF/GPS/Velocity Issues,7,"Hello, I’m currently working on doing image processing on my pixhawk/pi drone, but everytime python would request the camera through openCV, the drone’s sensors would go erratic and refuse to fly normally. I’m using dronekit-python to connect to the drone. There are two videos attached if it helps clarify. * * I’m not sure what is causing this, is it a voltage issue? I know the raspberry pi draws a considerable amount of power to maintan 3 fps, but I don’t see why the power module cant deliver a stable voltage to the pixhawk. Thanks so much","I’m using the bn-880 gps module on a Pixhawk 2.4.8 thanks yeah that probably was the problem as my GPS mount broke so I attached it to the pixhawk’s surface thinking there wouldn’t be a problem. Thankfully there wasn’t an issue in loiter mode or the drone would have crashed many times on me. I’ll try running the script sometime soon again and see if it raises any more issues, but for now I think its fixed, thanks for all your help"
104,Copter is taking too long to arm,1,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","I think I found the root cause of why its taking too long to Arm and spin the motors. It looks like I have solved the problem but theoratically it should Arm the motors with the current settings. So I’m not that 100% happy. Here’s what I found.  The Motor PWM Min/Max of the BLHeli ESC was originally set to 1040/1960 respectively. The flight controller Motor PWN Min/Max is set to 1000/2000. *   So I recon the ESC is waiting for the flight controller to send a minimum throttle of 1000 which is lower that the expected PWM Min of the ESC which is 1040. I would expect it will arm but it takes a lot of time. So what I did is to changed the ESC Motor PWM Min/Max to 1000/2000 and wah lah the waiting time it takes to arm and spin the motors is less than a min. I was happy with that but all the while, I thought that as long as the Flight Controller is sending a PWM signal lower or equal to what the Motor Min PWM signal, it will arm. 1040 PWM expected by the ESC is higher compared to what the FC is sending which is 1000 but it looks like a difference of 40 will take a long long time for the ESC to Arm. I hope this will help others troubleshoot this issue if it happen to them. Any reactions from from the deveopers would be appreciated."
104,Copter is taking too long to arm,2,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Unfortunately that log doesn’t show why it takes so long to Arm, because it only starts logging from when you arm. Set LOG_DISARMED,1 for one session and try to arm a couple of times, wait till it does arm (and maybe fly) then you can set LOG_DISARMED,0 I suspect one of the problems will be GPS fix, use GPS_GNSS_MODE,65 and let’s see how that goes in subsequent flights. The minimum and maximum throttle values should not matter since you are using DSHOT, and of course there’s no need to “calibrate” the ESCs for like we did with old fashioned PWM. It cant hurt to set them like you have though. In the BLHELI32 suite, set the temperature protection down to 100, 140 is just crazy - no idea why it is the default. I would change MOT_PWM_TYPE,4 to  6 for DSHOT600, some ESCs dont like DSHOT150. You need to use MissionPlanner motor test to get this as low as possible: MOT_SPIN_ARM,0.1 could probably be about 0.06 just so props spin up reliably and MOT_SPIN_MIN,0.2 needs to be about 0.1 probably Set INS_LOG_BAT_MASK,1 for the next flight and also INS_HNTCH_ENABLE,1 ← set this then refresh params to see the rest INS_HNTCH_MODE,3 INS_HNTCH_REF,1 INS_HNTCH_FREQ,80 INS_HNTCH_BW,40 INS_HNTCH_ATT,40 You can set BATT2_MONITOR,0 since it’s the same as BATT params. EDIT Also Pitch attitude control is doing very well but roll is poor Copy all your pitch values to roll ATC_ACCEL_x_MAX ATC_ANG_x_P ATC_RAT_x_D ATC_RAT_x_I ATC_RAT_x_P and you can probably set ATC_THR_MIX_MAN,0.5"
104,Copter is taking too long to arm,3,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","You can adjust these compass settings too COMPASS_OFS_X -231 COMPASS_OFS_Y 163 COMPASS_OFS_Z -1 COMPASS_DIA_X 1.014 COMPASS_DIA_Y 1.016 COMPASS_DIA_Z 0.910 COMPASS_ODI_X 0.022 COMPASS_ODI_Y -0.045 COMPASS_ODI_Z -0.018 Since you had plenty of yaw changes in that log, I ran mavexplorer magfit over it."
104,Copter is taking too long to arm,4,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Hi * I have followed all the parameter changes including the compass. Here’s the Log after the flight. I only did the test at my backyard so the manoeuvrers are not as aggressive as the first log you’ve seen. Kindly let me know if you are happier with this log. Otherwise let me know any improvement and I will be happy to test. I can still see failures on the Log Analyzer. 
104,Copter is taking too long to arm,5,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","LOG_DISARMED wasnt set so we cant see how long it took to arm or why it might have failed. What were your observations? Also GPS_GNSS_MODE,65 could be set Attitude control is very good. No need to change anything there  Movements dont need to be too aggressive, even though that’s valid testing for a small quad. Change INS_HNTCH_FREQ,130 INS_LOG_BAT_OPT,2 Leave all the other HNOTCH params as they are now. "
104,Copter is taking too long to arm,6,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Hi *, Sorry about that, I missed the most important parameter. Here’s the log once again with LOG_DISARMED = 1. * * My observations are:  Arming the motor now has improved a lot. I don’t know which parameter has done this but I am very happy with the result. I even try to restore the Min/Max of the ESC but as you said it does not matter. I will not be pissing people in the flying site anymore waiting for the copter to arm. Thank you very much. Before your last changes (GPS_GNSS_MODE, INS_HNTCH_FREQ and INS_LOG_BAT_OPT), I find that the copter is sluggish when it lifts off the ground. But after its on the air, that sluggishness disappears. After the last changes, it looks like take off is better. Pitch is good but Roll looks like there is oscillation when I rock the aileron left and right. After the last changes, the oscillation has improved but I can still feel some. I don’t know if its my fingers causing it. Throttle is a bit jumpy on Stabilize mode. But I can live with this by applying a throttle curve to flatten the center a little bit to reduce jumpiness. In saying that, throttle control is very good on AltHold, Loiter and Position hold. Break is a bit slow. Is there a way to make the break stop the copter faster? I mean can the software compute the speed and apply the proper lean angle and prop RPM to stop it and then level the copter at the end? Might be too ambitious but I better ask just in case it can be done. Overall, the copter is less agile compared yesterday but I cannot confirm this as I only did the test at my backyard. I will inform you once I can find some time to go to the flying site. But with regards to stability and control, this is better. Is there a way to maintain the stability and control but make it agile? Best Regards, Carlou "
104,Copter is taking too long to arm,7,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou"," it might have been the DSHOT600 and MOT_SPIN params ?? unsure that might be because of ATC_THR_MIX_MAN,0.5 You could try running Autotune. RC sticks can be a bit sensitive too - you can try adjusting ATC_INPUT_TC upwards for a softer feel (0.3 is very sluggish, 0.2 is what I use, 0.15 is default) or change the deadzone for pitch and roll sticks RCx_DZ Stabilise is always like that. Try these Loiter prams LOIT_ACC_MAX,600 LOIT_BRK_ACCEL,300 LOIT_BRK_DELAY,0.3 (or keep your other Loiter params but try setting this low) LOIT_BRK_JERK,300 It’s far more configurable than poshold and much newer Autotune should produce the best possible PIDs (in theory) then there’s a few things to do to reduce sensitivity if required. There’s numerous discussions on tuning small quads.  Be sure to set LOG_DISARMED,0 The harmonic notch filter is working well, you can set these to reduce the logging INS_LOG_BAT_MASK,0 INS_LOG_BAT_OPT,0"
104,Copter is taking too long to arm,8,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",I think you are sending this to the wrong person. I don’t have anything to do with Ardupilot other than using it in one of my planes.
104,Copter is taking too long to arm,9,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","I noticed that when the GPS Lock is ON in the ARMING_CHECKS, the time it takes for the motor to arm depends on the GPS signal. Sometimes its quick and sometimes its fast. If I turn it off, it is fast so its confirmed that the waiting time is because of the GPS. But I don’t want to disable the GPS Arming check. Will it help if I install a second GPS unit? Is there a separate parameter settings for the second GPS? I’ve read somewhere that the two GPS units must be identical. I am using Matek GPS & Compass M8Q-5883. Does that mean that for the second GPS unit, I will only have to wire the Rx and Tx and leave the SCL and SDA not connected? Or can we also connect two compass as well. If yes, how will the two compass address be setup so that they are not the same on the I2C bus."
104,Copter is taking too long to arm,10,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","I do not think adding a second GPS (or compass) will help. It will still take at least the same amount of time to arm. My preference is to enable the FENCE and then it can take a long time to arm - BUT then you know that there’s a GPS 3D Fix and Home has been set. If that’s not working you also know there’s something wrong and you probably should not fly anyway. In my experience there’s rarely a race to arm, but there’s always concern over what RTL will do when there’s a battery failsafe. If the copter is small and close to the ground this can make it take longer."
104,Copter is taking too long to arm,11,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",What’s the compelling reason you want it to arm fast?
104,Copter is taking too long to arm,12,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","When you are at the flying site, its annoying to others that you put your copter at the center of the runway and wait a long long time to arm. As I have observed, sometimes its quick and sometimes its fast. And turning off the GPS arming check makes it fast. So its confirmed that the copter sometimes cannot get a good GPS signal. But i’t not a good idea to turn off the GPS Arming check so I am looking for solutions. The time I am talking when its slow to get a good GPS signal is from 3mins to 10mins. When GPS signal is good, it only takes less than a min."
104,Copter is taking too long to arm,13,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Is there a better GPS unit compared to the M8Q-5883 that I can use?
104,Copter is taking too long to arm,14,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Can you power up before going to the launch position? Even if you have to power down again before moving out of the pit area… If the GPS has recently had a fix it should be very quick to be ready. Also increasing the GPS (mast) height makes a difference. In one of your recent logs the IMU position and GPS position never align on the map, primarily because you’ve armed and flown before there’s a good enough 3D fix. I’d say this is exacerbated because of the density of housing and reflections during this test. Yes FENCE_ENABLE,1 will have an increased time to arm (at least the first time for the session) but there is also much increased safety and reliability. You should set INS_HNTCH_REF,0.1"
104,Copter is taking too long to arm,15,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Similar to what Shawn suggested you could also connect a USB power brick to keep it hot. Assuming your FC powers the GPS from USB that is. Regarding another GPS unit, one with a larger patch antennae may be faster."
104,Copter is taking too long to arm,16,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Yeah, larger patch antenna (the ceramic looking square) or even add a ground plain underneath."
104,Copter is taking too long to arm,17,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",If you stay with Matek options are an M10 with a bit bigger antennae or an M10 with a really big antennae.
104,Copter is taking too long to arm,18,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Can you show how to investigate the IMU position against the GPS position?
104,Copter is taking too long to arm,19,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","In MissionPlanner, Review A Log, select “Map” This is yours  This is someone elses but you can clearly see the blue and red lines are not quite aligned, this is not the worst, but not ideal.  This what it should look like "
104,Copter is taking too long to arm,20,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","* The solution of * works using a USB Power Brick to keep the flight controller powered after you disconnect the main battery. I’ve just tested it and the motors can be instantly armed on your second, third… flight after plugin in the battery. But you have to carry the power brick at the pit area and connect the USB cable before unplugging the LiPo. Due to safety reasons, we are not allowed to carry the drone with the main battery plug in. But I think I have a solution to it. There is a ViFly Finder 2 Buzzer Lost Drone Finder Locater Alarm. This unit has a tiny battery in it. Can I connect the GPS unit and the Buzzer Drone finder as shown. * This way, the GPS is always powered by the Buzzer Drone Finder unit even after disconnecting the LiPo battery. The diode is to stop the Buzzer Drone Finder unit in supplying power the flight controller. Question:  Does the flight controller needs power to remember the take off position? If NO, then the diode has to be removed but I don’t know how long can the battery last to power the GPS and FC together. When you go for your succeeding flights, the GPS has still the lock indicated by the PPS LED. Will the flight controller immediately be in the GPS Lock state? Or there is a waiting time.  Regards, Carlou"
104,Copter is taking too long to arm,21,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Don’t use the finder.  It doesn’t power the board.  However they make something very similar called the GPS-mate that will do what you want.
104,Copter is taking too long to arm,22,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Hi *, Thanks for that. I only found the following issues:  When you fly till your battery failsafe triggers, the only way for you to clear the failsafe is to unplug the main battery. Do you know of other means to clear the failsafe? When you finish flying, you turn off your radio. Wen you turn it back on on your next flight, the radio is not bound anymore.  I guess we cannot have everything. We solve one and other issues comes in."
104,Copter is taking too long to arm,23,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Why would this be?
104,Copter is taking too long to arm,24,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","First of all, I don’t recommend flying till a failsafe triggers.  But if you’re going to continue flying, you need to put a new battery in any how so what’s the problem?  The GPS-Mate is only to power the GPS module, not the FC so when you change the battery the GPS is still active but the FC will be power cycled and your battery warning will be re-set. That’s a different problem.  That shouldn’t happen."
104,Copter is taking too long to arm,25,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","You are right, it should connect automatically but apparently in my case it does not. Any clues. I’m using crossfire."
104,Copter is taking too long to arm,26,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","When this happens, what are you doing to re-bind the radio to the RX?  This sounds really odd.  I’m running Crossfire on a few drones and I’ve never had that issue regardless of the order I turn things off or turn things on. What firmware version is your crossfire gear on?  Are you using model match or multibind?  What radio and radio firmware are you using?"
104,Copter is taking too long to arm,27,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","I use Crossfire, among other protocols, and as Allister says that doesn’t happen."
104,Copter is taking too long to arm,28,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",My radio is TS16S running on EdgeTx. Details of my radio and crossfire below. 
104,Copter is taking too long to arm,29,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",I have the same hardware on the same firmware but not using RC by Mavlink or XF Wifi.
104,Copter is taking too long to arm,30,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",I did not configure RC by Mavlink or XF WiFi. They are all the default settings and I don’t have an idea what they do. Do you think this is the issue?
104,Copter is taking too long to arm,31,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",I have just enabled FENCE as suggested. Are there other parameters that needs to be set?
104,Copter is taking too long to arm,32,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","You can check the other Fence params to see if they suit you and local laws. Mainly you just want to check FENCE_ALT_MAX and FENCE_RADIUS, the default values are reasonable in most cases, especially for testing or until you run long missions."
104,Copter is taking too long to arm,33,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","On our tests the Holybro Ublox F9P with an helical antanna, consistently delivered 3D fix in under 30 seconds. Not cheap, not small, but damm fast! "
104,Copter is taking too long to arm,34,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Actually I tried setting up a simple mission last week at the flying site. Its just take off and then go to two waypoints and land. But after I arm the copter and then flip the switch to AUTO in my radio, the blades will spin and then immediatly disarm without even taking off. Did I miss a step? I’m dying to see a mission happen but did not succeeded."
104,Copter is taking too long to arm,35,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",You didn’t answer my other question:  What are you doing to re-bind?  Are you having to press the bind button on the RX each time?  Are you having to trigger bind mode in Agent lite each time?  How do you know it’s lost it’s bind?  Please elaborate on that.
104,Copter is taking too long to arm,36,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",I think you have to raise the throttle too
104,Copter is taking too long to arm,37,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Opppssss. Yes I did. I will try it again tomorrow.
104,Copter is taking too long to arm,38,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Or set a parameter if you want it to take off immediately. auto_options Lot of horsepower on this thread 
104,Copter is taking too long to arm,39,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","AUTO_OPTIONS,2 (you beat me too it)"
104,Copter is taking too long to arm,40,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","AUTO_OPTIONS,2 would be appropriate for some highly tested and regulated environments. Normally you wouldnt use this because if your copter is powered and you accidentally switch to Auto mode, it will just launch and go. Best to stick with manually raising the throttle."
104,Copter is taking too long to arm,41,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Fair point.   I’ll argue if you set it at 2 you still need to arm in a different mode.  At that point blades are turning so a take off should be expected.  I would be more worried about options set to 3.  But I’ll agree that leaving it at 0 and using the throttle is the safest if the operator isn’t confident in their procedures.
104,Copter is taking too long to arm,42,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","* Sorry, I tried to replicate the issue but I cannot replicate it anymore. Please ignore the issue on the radio."
104,Copter is taking too long to arm,43,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Yeah I just read the options now, since I already had a rant "
104,Copter is taking too long to arm,44,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","You got me worried a little bit. Lets say AUTO_OPTIONS is Allow Arming, I guess the steps will be:  Disable Motor Emergency Stop Right YAW stick to arm the motors Flip the mode switch to AUTO Do I need to raise the throttle from this point?  If during the mission, I want to abort and switch to say AltHold and manually control the copter, is it possible?"
104,Copter is taking too long to arm,45,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Allow arming means that you can arm in Auto mode.  Otherwise you need to arm as normal in another flight mode, then switch to Auto.  With AUTO_OPTIONS,2 you would arm the quad, then when you switch to auto the quad would take off and begin the mission without any other inputs from the pilot.  AUTO_OPTIONS,3 will let you arm the quad already in Auto mode, and then it will take off right away. Regardless of how you entered auto mode, if you switch modes to Alt_hold or Loiter the quad will stop and you will have control appropriate to the flight mode."
104,Copter is taking too long to arm,46,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Huh… Lucky the copter did not execute the mission the last time I tried it. So what is the safest way to start testing a mission.  AUTO_OPIONS 1, 2 or 3. What I am looking for just in case any untoward event happen is, my bail out option is just to turn on Motor Emergency Stop and let the copter drop. Or back to say ALT-Hold and manually control the copter. While the copter is doing the mission, can I put the throttle stick at the middle?"
104,Copter is taking too long to arm,47,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Safest?  AUTO_OPTIONS,0. Arm in Alt_hold (or loiter). Switch to Auto mode. Raise the throttle to start the mission. Once the copter is running the mission the throttle  (regardless of AUTO_OPTIONS) won’t change anything.  I leave it in the middle so if I do change to loiter (or alt hold) the quad will stay at it’s altitude."
104,Copter is taking too long to arm,48,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Sounds like a good plan. I will test a simple mission tomorrow. Wish me luck.
104,Copter is taking too long to arm,49,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Here’s the Copter at my backyard for a test flight. Thanks for all the help to make it fly this good.      Here’s the flight log
104,Copter is taking too long to arm,50,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Looks good, very good attitude control. Using that battery-assist device to keep the GPS alive should keep you out of trouble at the airfield. See on the map there is a mission at the airfield, quite some kilometers away. Normally your quad would try to fly to that first waypoint and execute the mission if you happen to activate Auto mode. The fence will keep that under control, at least the quad will only go as far as the fence will allow."
104,Copter is taking too long to arm,51,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","That was the mission I tried last weekend. But the copter won’t take off at all. Is it recommended to always delete the mission uplaoded in the quad? So if you mistakenly flip the switch to Auto, there is no mission to execute?"
104,Copter is taking too long to arm,52,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Yes probably good practice to delete unused missions. Load and recheck the mission once onsite with the ground station. Rally points however…  You can have them dotted all over the countryside as known safe landing spots and there’s a couple of Rally params that controls how a rally point is chosen as a landing site.
104,Copter is taking too long to arm,53,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Having a geofence with RLT or SmartRTL set, even if it’s for 500m (or something further than you normally fly)  will keep your quad from flying across town if you forget about that mission from last weekend."
104,Copter is taking too long to arm,54,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",I will definitly do that. Thanks. I will never be able to figure those myself.
104,Copter is taking too long to arm,55,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",The settings you gave me made a big difference. Thanks a lot. There are still a lot to learn on Arducopter. But I am enjoying it.
104,Copter is taking too long to arm,56,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","I have another 450 Quad frame. Any recommendation on the Motor, ESC, Props and Flight Controller?"
104,Copter is taking too long to arm,57,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Yes, put on the oldest roughest looking old-school parts that are no longer usable and hang it up on the wall like artwork  Bonus points if you can make it look a bit steam-punk"
104,Copter is taking too long to arm,58,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Turn off RC by mavlink, it’s essentially incompatible with regular RC"
104,Copter is taking too long to arm,59,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Hi * I did not intentionally turn RC by Mavlink so I don’t know where to tun it off. I think it was on by default or I might have turn it ON without knowing what it does. Can you give some steps on how to disable it? Is this the one?  Regards, Carlou"
104,Copter is taking too long to arm,60,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",On the Nano RX (the second photo).
104,Copter is taking too long to arm,61,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",I had a lot of fun flying this QUAD today at the airfield. No complain at all. Very stable and very agile. I am not yet up to speed in analysing the logs (Graphs). Would somebody have a look at the logs below and comment on the performance technical of the quad? I’m more interested on the bad side of the logs so I can find ways to improve it. One of the logs is a successful mission. It’s a very simple mission this time just to have a feel on how autonomous flight is. We’ll create a more complex mission next time. Thanks again to everybody who contributted in the successfult completion of this QUAD. It is my first quad.
104,Copter is taking too long to arm,62,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","That looks really good!  The tune looks really dialed in. The only things I see are slightly higher than desirable vibrations.  In the Y axis, so horizontal.  Make sure you don’t have anything pulling on the flight controller or wire bouncing on the controller.  Check to make sure every thing on the airfame is secured. How big of  a battery are you using?  I couldn’t gauge from the current totals so maybe a current calibration might be in order.  Easiest way to do that is start with a fully charged battery.  Fly for a few minutes, enough to get a noticeable draw down on the battery.  Make note of the total amps (mah) drawn on the GCS or use the log later.  When you charge the battery keep track of how many amps (mah) the charger “puts in” the battery.  Adjust BATT_AMP_PERVLT as required.  The formula is New Amps/Volt=(Old Amps/Volt * Charged mah)/Logged mah But really, that’s minor stuff.  Go fly and enjoy your build!"
104,Copter is taking too long to arm,63,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","I am using this battery. I have also updated the Amps/Volt based on the calculations you provided. I have a digital Ammeter to calibrate the current but I need to change the connector from XT90 to XT60 before I can measure the actual current draw of the drone. Regarding the vibrations, that will be my task next week to look where that lateral vibration is coming from. Thanks for the analysis."
104,Copter is taking too long to arm,64,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Can you share how did you come up with the analysis that the tune that is dialed in. I want to learn how to interpret the logs if possible. Might be a good troubleshooting tool in the future.
104,Copter is taking too long to arm,65,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Don’t worry about that.  Use the math a couple of times and you’ll get it within a few%.  You really want the current load in flight and testing that on the ground is sketchy.  The built in ammeters are useless on the ground so don’t worry about low level draws before you’re armed. That’s harder.  I know when I started I was looking for a guide and there isn’t really anything other than the wiki explaining how to access the logs.  I’ll tell you what I did, I lurked around here for ages and followed threads where others were analyzing logs.  I would download the same logs and try to find what they were looking at.  It helped me learn a ton about ArduCopter and ArduPlane, as well as how to dig into the logs.  Look back at who’s commented on this thread and you’ll see several of the users that I learned from (and still do) and I would recommend following their work.  Start with the basics:  Tune (ATT.Pitch vs ATT.DesPitch, and roll and yaw), Battery voltage and current, vibrations, and clipping levels. motor outputs (RCOU.C1 … C4), and RC inputs (RCIN.C1 … C4). Nav performance (Compass, Baro, GPS)  I’m sure others will have their hot list, but I find for me those will tell me a lot about what a quad is doing. Mission Planner is probably the best too to start with.  Once your head is in the game then MavExplorer is a powerful tool, but that comes with it’s own learning curve."
104,Copter is taking too long to arm,66,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Hi mate, Thanks for all the info. It starts with small bits and pieces and guidance like this to crank the head and learn new stuff. I will follow your advice and walk my head around the technology. Very interesting but cannot be injected in the head for a day or two."
104,Copter is taking too long to arm,67,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Hi * and others, Can I ask another favour? My GPS Mate arrived today and installed hoping that I can get away with the USB Battery brick work around in order to keep the GPS Fence lock. But apparently it did not help. The only help that this GPS Mate has done is to keep the GPS alive indicated by the PPS LED still flashing blue after you unplug the main battery. The attached logs took a long long time to get a GPS Fence lock and I gave up cause when I arm the quad using the rudder stick, the HUD says its AMRED as shown in the video but the motors won’t spin. From the logs attached, the LOG_DISARMED = 1. Is it possible for you to investigate the log and identify where is the bottleneck stopping the motors from spinning?      Thanks again. BIN Files * * * *"
104,Copter is taking too long to arm,68,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Hi Dave, just to elaborate on this answer from someone elses perspective. I use my Arducopter aircraft on film and TV sets and the moment you land they want you back in the air again. On battery changing now I have to hot swap the batteries otherwise if I completely power down the time it takes to clear all checks is just too long. There’s nothing wrong in my setup and it is reasuring to a degree that it is waiting to get everything 100% before allowing the aircraft to arm but when you are stood there twidling thumbs waiting it to get ready on a tight schedule it can be embarrasing for me and certainly annoying for the client- even if it is only for 30 secs or so. Its amazing how slow that can feel "
104,Copter is taking too long to arm,69,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",From the 1st log the time it takes from power applied to the “EKF3 IMU0 is using GPS” message is the time you can expect. Keeping everything hot would seem to be the best solution.
104,Copter is taking too long to arm,70,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Hi *, Thanks for your response. I you are right. The only solution to this is to keep the flight controller hot using a USB Brick to keep the FC hot. Would you be able to know if during the time the copter is on stand-by (Area in red in my diagram), the GPS Fence lock is lost for some reason, what will happen to the next flight? Is there a chance that the copter will fly away?  Looking at the 1st log, the FC showed a message “EKF3 IMU0 is using GPS” but the motors won’t spin after the FC is armed as shown in the HUD. Could this be fixed and change the message to refelct the real reason why the motors won’t arm? A bit confusing when you are looking at the messages in the HUD and the ARM tone/LED indicating that the copter is ARMED well in fact its not. "
104,Copter is taking too long to arm,71,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Sure it did, it’s in the image you posted."
104,Copter is taking too long to arm,72,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Yup you are right, I missed it. I updated the screern shot so other users will not be mislead. So what is the reason why the motors won’t spin if GPS Fence lock is already achieved? @Developers, Could the message be fixed to display the real reason why the motors won’t spin? Thanks heaps for looking into this. I am happy to do some more testing and post logs if that will help. Just let me know what needs to be prepared (Parameter setups, Logs, videos etc,). Additional info:  You can only Arm and spin the motors after you hear the motors emit the chime sounds. In the case above, the motor chimes has not yet happen. Which tell us that the FC is still waiting for something else before it will do the chimes sound. Or maybe the FC is already really ready to arm the motors but the ESC is still waiting for something else. What should that be? What ESC parameters needs to be coordinated with the FC? This ESC is running DShot600 whrein calibration is not needed. "
104,Copter is taking too long to arm,73,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Use the USB battery brick solution. The GPS Mate only retains the lock in the GPS but not in the FC so don’t venture on the GPS mate at all. Its a waste of time, money and effort. With the USB Battery brick solution, there is no waiting time for the next flight. My only precaution and this is not technically proven is Plug in the USB Power and change the main batteries at the same location so the FC thinks it was not moved at all and GPS lock is available at that point. The reason I said this is that GPS Lock might be lost if you move the copter somewhere else. And what will happen next is; “Don’t know”. I’m hesitant to test. As long as the battery changeover is at the same location, I think you are good to go. It would be good if you can also update us with your experience."
104,Copter is taking too long to arm,74,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","It sounds like the ESCs are not able to operate for subsequent armings after the battery is swapped possibly because the control signal remains in place and maybe confuses the ESC. Try setting MOT_SAFE_DISARM,1 to see if disconnecting the ESCs signal when disarming allows them to restart properly when the battery is swapped. Also most GPS units have a capacitor that allows them to retain enough info for a short time between powercycles to allow a fast bootup and position fix, so the first fix of the day will be slow, subsequent power cycles should be a lot quicker."
104,Copter is taking too long to arm,75,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","*, The result of testing after setting MOT_SAFE_DISARM,1 did not make a difference but I can now see that the flight controller is sending signals to spin the motors but the ESC is not responding. The steps I did are:  Set MOT_SAFE_DISARM -  1 Arm the autopilot. The HUD, LED and Buzzer indicated that it is armed. The servo output of motor 1 – 4 respond to throttle inputs in Mission Planner But the ESC is not responding to the throttle commands  I have no clue why the ESC is ignoring the throttle commands. Any idea? Is the culprit here the ESC? What is the ESC expecting in order to listen to the throttle command of the autopilot? I hope this test will give us a clue on a solution to this issue. I have disabled FENCE and GPS so I can ARM the autopilot inside the house. I got frustrated and decided to restore a previose backup to see what will happen. After restoring the backup, the motors will spin when the autopilot is armed. Here’s the video. But but but… when you change batteries, it will be back to the same problem that the Autopilot can be armed but the ESC worn’t spin the motors. I’m getting Crazy now…"
104,Copter is taking too long to arm,76,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou",Copter is back to the same issue after doing a couple of flights. So the solution I mentioned did not really fix the issue. I already run out of options.
104,Copter is taking too long to arm,77,"I just built my first copter and is having problems on arming the motors. Here’s my harware setup:  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4  After I plug the batteries, until I am able to arm and spin the motors takes about 3-10min. Here’s my observations: A minute or even faster after I plug the batteries, I push the rudder stick to the right to try to Arm it. A beep sound will be played but the motors won’t spin. In the HUD it will display Armed. But during that minute or so, the motors did not play their chime to tell the pilot that they are ready to spin. This playing of the motor chime will take 3-10mins. Only by then when I push the rudder stick to the right will the motor start spinning. My suspect is the flight controller has already completed the ARMING_CHECKS but for some reason, it is not telling the ESC’s that its ready to take off. This step to inform the ESC’s to spin after arming the quad takes about 3-10min. Here’s the current settings of the ESC.  * Can somebody check the ESC configuration and figure out what parameters needs to be coordinated with the flight controller parameters in order for the ESC’s to be informed that Arming is ready. Here’s one BIN file. * In the Auto Analyzer there are some failures. Is this something that needs to be addressed?  Regards, Carlou","Finally, I was able to find a workaround to always arm the motor (100% working) by:  Turn on the transmitter. Plug in the USB brick backup power. Wait until YAPPU announces that GPS home is acquired. Plug in the main batteries. This time, the ESC will emit the ARM chimes and you can fly.  I suspected that the board voltage might be lower than the min threshold. I installed an external 5V power supply but this did not fix the issue. The external power supply is giving 5V exactly so the issue is not the board voltage. It looks like after the GPS Home is acquired, plugging the main battery will send the info to the ESC that “YES” you can arm the motors. Crazy but it works all the time. And waiting time for the GPS Home is acquired is only around 1 min. I don’t know if this is a software or hardware issue but this is the final solution I found that works all the time. I think I have eliminated the hardware issue by putting an external power supply but this did not help. Maybe software but I don’t have the skill to debug."
105,Terrain clamping offset warning,0,"From time to time I get this warning regarding “Warning: Terrain: Clamping Offset nn to nn.”: * The only post about this I could find says by setting TERRAIN_OFS_MAX=0 this message can be eliminated. (my current setting is 15) * I don’t want to message eliminated - I want to find out what’s causing the warning, so I can correct it. Can someone please help me discover what’s causing this warning to occur?",
106,Tapping Vcc before current sensor for BEC's,1,"Today I made the decision to tap Vcc before the current sensor to power the BEC’s on a 650 class copter.  The BEC’s will power the Cube (MAUCH BEC),  a HereLink, a FPV camera, and a mapping camera.  I suspect the total load will be less than an 1 AMP. I made this decision for convivence of wiring. This copter will user either a 8000mAh or 12000mAh battery. Other than setting the “reserve” mAh on the battery failsafe to consider the load of the electronics, are there any other parameters or operational considerations I should consider with this configuration? I can change the configuration if necessary - but if there is little or no down side, I’d prefer to keep it as it is. I’m wondering - there might even be some benefits to this configuration - as the current sensor (Mauch) will only see the motors load. I’d appreciate any advice or comments as appropriate.  Thank you! *","Usually we position the current sensor to measure all load including accessories. I can’t immediately think of a benefit to excluding the accessories. Vcc usually means the regulated  supply voltage, like 5.0vdc Probably Vbat or B+ might OK to use for the unregulated battery voltage. Just so everyone is on the same page."
106,Tapping Vcc before current sensor for BEC's,2,"Today I made the decision to tap Vcc before the current sensor to power the BEC’s on a 650 class copter.  The BEC’s will power the Cube (MAUCH BEC),  a HereLink, a FPV camera, and a mapping camera.  I suspect the total load will be less than an 1 AMP. I made this decision for convivence of wiring. This copter will user either a 8000mAh or 12000mAh battery. Other than setting the “reserve” mAh on the battery failsafe to consider the load of the electronics, are there any other parameters or operational considerations I should consider with this configuration? I can change the configuration if necessary - but if there is little or no down side, I’d prefer to keep it as it is. I’m wondering - there might even be some benefits to this configuration - as the current sensor (Mauch) will only see the motors load. I’d appreciate any advice or comments as appropriate.  Thank you! *","Thanks * - Interesting - on the PDB’s I’ve used to date, the pads with battery voltage are labeled Vcc. Yes - this arrangement isn’t ideal.  The issue is the difficulty connecting a tap from the battery lines on such short runs.  I did it on my 450-class copter, and it wasn’t much fun. I’m just trying to be on the lookout for “gotchas.”"
106,Tapping Vcc before current sensor for BEC's,3,"Today I made the decision to tap Vcc before the current sensor to power the BEC’s on a 650 class copter.  The BEC’s will power the Cube (MAUCH BEC),  a HereLink, a FPV camera, and a mapping camera.  I suspect the total load will be less than an 1 AMP. I made this decision for convivence of wiring. This copter will user either a 8000mAh or 12000mAh battery. Other than setting the “reserve” mAh on the battery failsafe to consider the load of the electronics, are there any other parameters or operational considerations I should consider with this configuration? I can change the configuration if necessary - but if there is little or no down side, I’d prefer to keep it as it is. I’m wondering - there might even be some benefits to this configuration - as the current sensor (Mauch) will only see the motors load. I’d appreciate any advice or comments as appropriate.  Thank you! *","You can definitely do what you are proposing, you just have to be aware the consumed current/capacity measured by Ardupilot will be just slightly off"
106,Tapping Vcc before current sensor for BEC's,4,"Today I made the decision to tap Vcc before the current sensor to power the BEC’s on a 650 class copter.  The BEC’s will power the Cube (MAUCH BEC),  a HereLink, a FPV camera, and a mapping camera.  I suspect the total load will be less than an 1 AMP. I made this decision for convivence of wiring. This copter will user either a 8000mAh or 12000mAh battery. Other than setting the “reserve” mAh on the battery failsafe to consider the load of the electronics, are there any other parameters or operational considerations I should consider with this configuration? I can change the configuration if necessary - but if there is little or no down side, I’d prefer to keep it as it is. I’m wondering - there might even be some benefits to this configuration - as the current sensor (Mauch) will only see the motors load. I’d appreciate any advice or comments as appropriate.  Thank you! *","So the current sensor won’t include the BEC’s. If you leave the battery connected but don’t start motors, the current sensor indication would indicate almost 0, but after C/1A (as you suspect) the battery will be empty."
106,Tapping Vcc before current sensor for BEC's,5,"Today I made the decision to tap Vcc before the current sensor to power the BEC’s on a 650 class copter.  The BEC’s will power the Cube (MAUCH BEC),  a HereLink, a FPV camera, and a mapping camera.  I suspect the total load will be less than an 1 AMP. I made this decision for convivence of wiring. This copter will user either a 8000mAh or 12000mAh battery. Other than setting the “reserve” mAh on the battery failsafe to consider the load of the electronics, are there any other parameters or operational considerations I should consider with this configuration? I can change the configuration if necessary - but if there is little or no down side, I’d prefer to keep it as it is. I’m wondering - there might even be some benefits to this configuration - as the current sensor (Mauch) will only see the motors load. I’d appreciate any advice or comments as appropriate.  Thank you! *",True.  But I can’t think of any instance where I might do this.
107,EKF3 failsafe triggered when attempting GPS denied,1,"Hello, I was wondering if anyone else has had this issue. I have recently upgraded to ArduCopter V4.3.0 and attempted to fly with just a rangefinder enabled today. I have a GPS, optical flow sensor, and rangefinder connected. I have a switch for GPS disabled, radar on/off, and surface tracking. Once the rangefinder was the only switch on, I saw an EKF lane switch then a EKF failsafe was triggered and the drone attempted to land. Once GPS was turned back the the failsafe cleared. Any help would be appreciated.", This is the messages I saw on the GCS.
107,EKF3 failsafe triggered when attempting GPS denied,2,"Hello, I was wondering if anyone else has had this issue. I have recently upgraded to ArduCopter V4.3.0 and attempted to fly with just a rangefinder enabled today. I have a GPS, optical flow sensor, and rangefinder connected. I have a switch for GPS disabled, radar on/off, and surface tracking. Once the rangefinder was the only switch on, I saw an EKF lane switch then a EKF failsafe was triggered and the drone attempted to land. Once GPS was turned back the the failsafe cleared. Any help would be appreciated.",As always: please post a .bin flight log.
108,Can't configure camera gimbal,0,"Had an configuration with AC 4.2.3, where a configured servo gimbal works fine. After installing AV4.3.0, the gimbal doesn’t work an I can’t configure the gimbal in MissionPlanner (input fields are disabled). Switching back to AC4.2.3 everything works fine. Any suggestions how can I fix this issue?",
109,How to setup the board battery voltage?,1,"From the status TAB of Mission Planner, the board voltage is = 0. What parameters needs to be set to get the correct board battery voltage? My ESC is Holybro Tekko32 F4 50A 4in1 ESC. * The battery Monitir settings are:  *",None. Board voltage isn’t available with that Flight Controller.
109,How to setup the board battery voltage?,2,"From the status TAB of Mission Planner, the board voltage is = 0. What parameters needs to be set to get the correct board battery voltage? My ESC is Holybro Tekko32 F4 50A 4in1 ESC. * The battery Monitir settings are:  *",Thanks. Nice to know.
110,Use yaw with waypoint,1,"Hi, I was revisiting the allowed mission commands and while looking at the MAV_CMD_NAV_WAYPOINT’s image, you can see there is a field for yaw, and if you look at the mavlink command description, you can also see there is a field for yaw, while at the mission plannner’s plan section doesn’t have any yaw field when choosing the waypoint command. Is there a way to enable this field or will have to use the mavlink message directly?",Or is it that these fields are just not supported?
110,Use yaw with waypoint,2,"Hi, I was revisiting the allowed mission commands and while looking at the MAV_CMD_NAV_WAYPOINT’s image, you can see there is a field for yaw, and if you look at the mavlink command description, you can also see there is a field for yaw, while at the mission plannner’s plan section doesn’t have any yaw field when choosing the waypoint command. Is there a way to enable this field or will have to use the mavlink message directly?",Use MAV_CMD_CONDITION_YAW. *
110,Use yaw with waypoint,3,"Hi, I was revisiting the allowed mission commands and while looking at the MAV_CMD_NAV_WAYPOINT’s image, you can see there is a field for yaw, and if you look at the mavlink command description, you can also see there is a field for yaw, while at the mission plannner’s plan section doesn’t have any yaw field when choosing the waypoint command. Is there a way to enable this field or will have to use the mavlink message directly?","So there is no way of using the yaw field in the waypoint command? Such a shame, if it was enabled, it wouldn’t be necessary to use another command"
110,Use yaw with waypoint,4,"Hi, I was revisiting the allowed mission commands and while looking at the MAV_CMD_NAV_WAYPOINT’s image, you can see there is a field for yaw, and if you look at the mavlink command description, you can also see there is a field for yaw, while at the mission plannner’s plan section doesn’t have any yaw field when choosing the waypoint command. Is there a way to enable this field or will have to use the mavlink message directly?",No. Note the grayed out fields in the link I posted. Those fields are unsupported/ignored.
111,Whether multi rotor can support adaptive controller?,1,[*],"Yes, it can. And there are a couple of custom controllers already available: *"
111,Whether multi rotor can support adaptive controller?,2,[*],I want to ask if there is L1 adaptive control on multi rotor
111,Whether multi rotor can support adaptive controller?,3,[*],There are only the controllers described on that page.
112,Does ardupilot support compilation to generate LLVM IR?,0,"I want to finish static analysis of ardupilot code using Calng and LLVM IR, and ardupilot uses Waf compilation, what can I do to generate LLVM IR?",
113,Ardupilot parameter that tells GPS Lock,1,"From the HUD, the number of satalites and HDOP is displayed. Based on me readings 7 SATS and HDOP less than 1 is good enough and will give you an accuracy of around 2 meter. But having those readings does not mean that you already have a GPS Lock. Is there a way to display a reading when the copter has already got a GPS Lock or its still waiting for a GPS Lock. I found the following checks in the WIKI:  Radio calibration has been done. Accelerometer calibration has been done. Whole bunch of Compass checks to make sure that the compass is healthy. It also checks that the offsets are not too large (Should be in the range of -50 to -150). What parameter stores the compass offset?  Checks that compass calibration is done. Or you turn compass learning on (Not recommended). Why is it that compass learning is not recommended?  Checks that the magnetic field is the appropriate size (APM2 should be about 330 and APM1 should be about 530). Checks that the barometer is healthy. What parameter tells that the BARO is healthy  If GEO Fence is enables, checks that the is has a GPS locked. My original question.  Checks that the board voltage is between 4.5 to 5.8V  Can I also get some answers on the questions in BOLD letters",Look for GPS status and display it in your quick view.  *
113,Ardupilot parameter that tells GPS Lock,2,"From the HUD, the number of satalites and HDOP is displayed. Based on me readings 7 SATS and HDOP less than 1 is good enough and will give you an accuracy of around 2 meter. But having those readings does not mean that you already have a GPS Lock. Is there a way to display a reading when the copter has already got a GPS Lock or its still waiting for a GPS Lock. I found the following checks in the WIKI:  Radio calibration has been done. Accelerometer calibration has been done. Whole bunch of Compass checks to make sure that the compass is healthy. It also checks that the offsets are not too large (Should be in the range of -50 to -150). What parameter stores the compass offset?  Checks that compass calibration is done. Or you turn compass learning on (Not recommended). Why is it that compass learning is not recommended?  Checks that the magnetic field is the appropriate size (APM2 should be about 330 and APM1 should be about 530). Checks that the barometer is healthy. What parameter tells that the BARO is healthy  If GEO Fence is enables, checks that the is has a GPS locked. My original question.  Checks that the board voltage is between 4.5 to 5.8V  Can I also get some answers on the questions in BOLD letters","In YAPPU, there is a message blinking NO LOCK and disappear after sometime. Is this an accurate indication of the GPS Lock? "
113,Ardupilot parameter that tells GPS Lock,3,"From the HUD, the number of satalites and HDOP is displayed. Based on me readings 7 SATS and HDOP less than 1 is good enough and will give you an accuracy of around 2 meter. But having those readings does not mean that you already have a GPS Lock. Is there a way to display a reading when the copter has already got a GPS Lock or its still waiting for a GPS Lock. I found the following checks in the WIKI:  Radio calibration has been done. Accelerometer calibration has been done. Whole bunch of Compass checks to make sure that the compass is healthy. It also checks that the offsets are not too large (Should be in the range of -50 to -150). What parameter stores the compass offset?  Checks that compass calibration is done. Or you turn compass learning on (Not recommended). Why is it that compass learning is not recommended?  Checks that the magnetic field is the appropriate size (APM2 should be about 330 and APM1 should be about 530). Checks that the barometer is healthy. What parameter tells that the BARO is healthy  If GEO Fence is enables, checks that the is has a GPS locked. My original question.  Checks that the board voltage is between 4.5 to 5.8V  Can I also get some answers on the questions in BOLD letters",Please ignore this inquiry. I find that YAPPU is anouncing all the events. Very nice for YAPPU.
114,ESC not working on Pixhawk Cube Orange,1,"Equipment Pixhawk Cube orange. ESC Iflight succex-e mini 35a. Crossfire It all starts with the mission planer stock settings, after I set the frame type and if the battery is connected at that time, it beeps as if it is calibrated and ready to go. After that I set SERIAL2_PROTOCOL 23 for my radio equipment to work. When I try to calibrate ecs nothing happens. Calibration happens like this: I disconnect the cube from usb, put the throttle stick to the maximum position, connect the battery, but the flight controller does not go into ecs calibration mode (it does not start blinking LEDs in turn), and ecs beeps only one signal. I tried to set all types of protocols in ECS calibration. Turned off the safety switch.","First, what signal type do your ESCs want? Are they Dshot of normal PWM ESCs. This is important since Dshot won’t require any calibration. Second, to calibrate your normal ESCs you don’t power on with the radio throttle stick in maximum position. You actually won’t need the throttle stick at all. In missionplanner there is an ESC tab under mandatory hardware. On that tab you should select your esc type. If you have normal pwm ESCs you select the type normal. Than there is a calibration button. You should follow the instructions in missionplanner. I believe there is some instructions next to the button. But basically, you press the button than power cycle the system. On the next powerup the cube will be in esc calibration mode. You don’t have to use the throttlestick yourself, the cube will put the throttle in high position for you and than also lower it to minimum. When the calibration is done, you simply reboot the system. I hope this helped!"
114,ESC not working on Pixhawk Cube Orange,2,"Equipment Pixhawk Cube orange. ESC Iflight succex-e mini 35a. Crossfire It all starts with the mission planer stock settings, after I set the frame type and if the battery is connected at that time, it beeps as if it is calibrated and ready to go. After that I set SERIAL2_PROTOCOL 23 for my radio equipment to work. When I try to calibrate ecs nothing happens. Calibration happens like this: I disconnect the cube from usb, put the throttle stick to the maximum position, connect the battery, but the flight controller does not go into ecs calibration mode (it does not start blinking LEDs in turn), and ecs beeps only one signal. I tried to set all types of protocols in ECS calibration. Turned off the safety switch.","As a result, I rolled back to version 4.2 and it worked almost immediately"
115,How to clear failsafe,1,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?","Just try a mode change. I radio failsafe should just clear by itself if the receiver starts working normally again, but if RTL was already triggered as part of the failsafe action, then just select another mode like Loiter. Even if you get a battery low failsafe you can still change modes and take control (after a RTL action or similar)."
115,How to clear failsafe,2,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?",* I tried but I can’t clear the failsafe.     
115,How to clear failsafe,3,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?",Maybe it is just telling you that there was a failsafe and maybe that type of failsafe wont clear without a power cycle?? I’d have to test but cant at the moment.
115,How to clear failsafe,4,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?",No rush mate. And always thanks for your assistance. You’ve made my copter fly so well. I will never reach this type of tune on my own.
115,How to clear failsafe,5,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?",Battery failsafe (undervoltage) can only be cleared with a charged battery. 
115,How to clear failsafe,6,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?",If it is an issue during testing you can also adjust your minimum arming voltage parameter to something like +/-23V to allow for use of a slightly used battery. Of course you’ll need to keep in mind when flying that it was not a fully charged flight-pack.
115,How to clear failsafe,7,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?","The issue is when you first plug in the batteries with FENCE enabled, it takes very long to get a GPS Lock and you don’t want your quad sitting at the middle of the runway waiting for the GPS lock. You want to put it there so it will be the landing point on RTL. Other co-flies gets upset waiting. And the solution that was recommeded is to plug in a USB cable powered by a battery brick to retain the GPS lock till your next flight. So the only long wating time for the GPS lock is the first flight of the day. But during testing, I found that when the battery failsafe triggers the RTL, there is now way to clear this failsafe aside from chaning the battery… So even if you plug the USB power, the failsafe is not cleared and you cannot arm the quad. This is the reason why I was asking if there is a way to clear this type of failsafe. But I found a workaround. Still use the same solution (the USB power) but on your next flight, remove the USB Power to clear the failsafe and immediatly plug a fully charged battery. Somewhere somehow, the GPS lock waiting time is fast. I have no explanation but that’s what I observed. So all good now. thanks for all the reactions and recommendations. Much appreciated. BTW, I just ordered a GPS Mate. I hope this will solve this long wating time for the GPS Lock for all flights of the day. I hope I’m not the only one having this issue."
115,How to clear failsafe,8,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?","With modern GPS receivers like Here3, the wait time is not that long. Maybe your GPS receiver has drained all the backup battery, when this occurs it loss the ability of hotstart, leading to a longer time to first fix."
115,How to clear failsafe,9,"When a failsafe triggers, the only way i know off to clear the failsafe is to unplug the batteries. Is there a way to clear the failsafe via a switch in the radio?","As mentioned, I have installed a GPS mate that is supplying power to the GPS even if you disconnet the main LiPo battery. Power will only stop to be supplied to the GPS if you turn the GPS mate off or the battery of the GPS mate is drained. I can see that the RED LED in the GPS is ON after removing the mail LiPo battery. And the PPS blue LED is still blinking indicating that a GPS lock is still present in the GPS. So there is no issue for the GPS loosing the lock after the main LiPo battery is disconnected. After all this troubleshooting I am making, I don’t think the issue of the motors not being able to spin is because of the GPS. The flight controller can be armed by the rudder stick and this is confiemed by the HUD, LED and buzzer. I think the issue is the ESC is still expecting a signal before it will spin. I have a PWM tester but because this is on DSHOT600, I cannot use the PWM tester to find out what the ESC signal wire reads when I can spin them. And what is the ESC Signal when it cannot be spinned. Any idea on how to test this would be great."
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,1,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",The only thing I found in the documentation about 4.3.0 that was interesting was the parameter about gps altitude estimate accuracy. Although I’m not using that parameter and I don’t see how that one could cause this type of issue There was some filter changes. Maybe that could cause this?
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,2,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Hello * I am not an expert on this kind of trouble, but two things called my attention at your log:  You have experienced an Internal Error during flight, and it is not a good thing, never saw this fault code… maybe it is interesting for the devs to take a look on it. Have you ever ran an autotune on this drone? It seems to me that your attitude controller params are very default…  * could you help our friend?"
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,3,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","I can see in the log what you mean about the jerking pitch movements while flying forward in Loiter This is a good log for us to see this issue, so I hope you dont mind trying a few things in order and gathering each seperate log. First just change this PSC_VELXY_FLTD,5 down to new value of 2.5 Observe and gather log, If that fixes it great - no further action. If it’s not resolved just change this PSC_VELXY_FLTE,5 down to new value of 2.5 Observe and gather log, If that fixes it great - no further action. If there’s still no fix, try these PSC_POSXY_P,0.5 PSC_VELXY_D,0.25 PSC_VELXY_I,0.5 PSC_VELXY_P,1.0 They are not very different, but slightly lower than yours. At least they wont introduce any further undesired effects."
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,4,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Hello all, As * mentions - after updating one of my copters to FW4.3.0-stable I also noticed the different ‘jump’ take-off behaviour in ALT-HOLD & LOITER. This behaviour was not present on FW4.2.3-stable. I’ve not looked into it any further as it is not a problem since all is fine once the copter is about 1m off the ground. I have not seen any other issues and the copter flies as expected - if not better. This copter has a downward facing rangefinder. I’ll take a look at the recorded flightlogs and see if I can spot something regarding this take-off behaviour."
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,5,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Hi Bruno, I’ve ran an autotune and pulled the value back a bit. It flew well on 4.2. Yes the param are very default but I started with the initial setup and the autotune and manual tuning has led me here. I missed the internal error. I checked error codes but nothing showed up. Maybe I need to look somewhere else. When did the error occur? At the end of the flight or in the middle?"
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,6,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Hi Shwn, This craft is made for testing and learning more about ardupilot so some testflight won’t be an issue! I’ll try and set the parameters you suggested in that order and gather logs. Are these filters new for the pos controller? That could explain why this suddenly appeared. Also, what does this filter actually do? Why would changing that fix this, if you got the time to explain? Edit: Should I set my EK3 altitude source back to barometer. Since that’s the most common one? I want to use gps when the issue is resolved but for the tests, what would be best?"
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,7,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",So that may be normal than. I guess it’s because people would raise their throttle t slowly and the copter would start to tilt on the ground. Or in case you start on uneven terain.
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,8,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","I found this in the 4.3.0 documentation, TKOFF_SLEW_TIME. This parameter is used to control takeoff speed. Maybe the default value is quite jumpy."
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,9,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","I’ve conducted a second test flight using the PSC_VELXY_FLTD you suggested. It didn’t solve the issue. I got an internal error. I don’t know what that particular one means so for safety reasons I decided not to continue to test the rest of the parameters until I know what the internal error means. See in detail below I’m unsure of the message “I” as well. The picture shows the flow of messages after landing. Flow of manuvers: Arm, than takeoff The jump motion on takeoff is still there, this should be normal. Landing gear folded up. I hovered in alt hold for about 30 sec than flew around a bit just so that there is some maneuvering in the log to. Next, I switched to loiter at around 1min 30 sec 30 sec hover in loiter Than forward flight, stop, than backwards flight. During the flights there was jerking but more of them. They seemed smaller in angle but larger in quantity. The jerks appeared as both forward and backwards jerk during the backwards flight. Landing, the jerks became worse during the decent so I switched to alt.hold and landed. The landing was detected this time but that might have been because I switched to alt.hold. I don’t remember if I landed in alt.hold in my previous flight."
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,10,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","…flow_of_ctr Using GPS for Yaw? No, confusing this with rover."
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,11,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","no, i’m using gps for altitude though. I need two gps units to use gps for yaw right? I only have one here2. Also, what parameter should I check to make sure the drone wont try to use gps for way??"
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,12,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",Nevermind. It’s on the issues list which is combined for Copter and Rover. Not applicable.
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,13,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","ah okay, but what could it be in my case? if you have any clue?"
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,14,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","No, but it’s the 2nd of the same error I have seen today. Yours:  Another one: "
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,15,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",Could it be an unnoticed bug in 4.3? It has gone through some a lot of testing in beta but as stable release a lot more are using it.
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,16,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",Not sure. There was some tracking of this error as it applied to H743’s and it was fixed in a release. But these are not H743’s… It was a loop/timing error. There is a new Rover post with the same error.
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,17,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",Is there anything I can do to check or let anyone else check if it’s a timing error? Has rover been updated recently as well?
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,18,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Yes, everything is on the same release schedule more or less. I suppose create a new post with that error in the title. I’m working remote for some months and unfortunately I don’t have any RC hardware at hand to test stuff on. Feels a bit naked…"
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,19,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Ok, I’ll do. Xfacta haven’t answered yet so maybe he knows something. Is there anyone I should tag in that post who have the necessary means to investigate further. I can do tests for the developers but my knowledge is too limited to solve this myself"
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,20,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",Here is the new post
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,21,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",Is there any way to get a list of all the internal errors? Or how do you figure out what each number mean?
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,22,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!",The number is the line of code where the error is generated so it could be different between vehicle types and firmware level. I grabbed this from another older post:
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,23,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","* ah ok, So the error number is not that important than? Not for me at least. So, flow_of_control is what I want to look at? Can that mean different things or does it only regard yaw, or altitude or something like that? There was an I:“number” too. What is that for?"
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,24,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Thanks, I’ll take a look at that and do some tests when I can."
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,25,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Not exactly, they are coded with these numbers but have these strings associated for better explanation."
116,Twitching/jerking repeating motion in forward flight (loiter) and fail to recognize landing after 4.3.0 update,26,"Hi, I just updated my quad to 4.3.0 and took it for a test flight to see how it would perform with the new firmware. To my disappointment there was some strange behavior which I don’t understand the origin of. I took a look at my logs but couldn’t find anything. Also, this quad flew fine with 4.2.2 and no parameter changes have been made between firmware updates. Description of issue: First at takeoff. My quad makes like a jump into the air. I raise the throttle slowly like I always do. Usually the quad starts to ascend slowly but this time it made like a jump into the air. Like a meter or so until it slowed down and preceded to ascend slowly according to my throttle input. Next, when I switched into loiter and started to fly slowly forward, he quad would make jerking pitch movement like every couple of seconds. Not too big of a motion but about 10 degrees. Like an autotune twitch but during forward flight. I wouldn’t do this while hovering. Last, since it was unsafe to continue the flight I tried to land. I put it down as gently as I could, just as always. When it had touched down it wouldn’t recognize the landing and slow the motors down like it usually does. I than took it up again and tried to make a more firm landing. This time it would recognize the landing after sitting on the ground for a couple of seconds. Good to know: I use GPS for altitude because of aerodynamic effects on this frame. Log file: * Thanks!","Ah okay, That’s a bit abow my knowlage so far. But some day!"
117,How to display messages from the BIN log file,1,"Is it possible to display the messages from the BIN Log File? After a flight, I want to know what has transpired but I cannot find a way to display the messages similar or near the screen shot below.",I use Mavproxy.  I can get all the messages and parameters from a .bin file with that. *
117,How to display messages from the BIN log file,2,"Is it possible to display the messages from the BIN Log File? After a flight, I want to know what has transpired but I cannot find a way to display the messages similar or near the screen shot below.","You can also use this tool to analyze it, it is way simple and interactive:"
117,How to display messages from the BIN log file,3,"Is it possible to display the messages from the BIN Log File? After a flight, I want to know what has transpired but I cannot find a way to display the messages similar or near the screen shot below.","Can I get some help on the log viewer. I uploaded the BIN file, then click the Message button. A pop-up widow appreared but its empty. I just want to see the messages. Here’s the log files * * *"
117,How to display messages from the BIN log file,4,"Is it possible to display the messages from the BIN Log File? After a flight, I want to know what has transpired but I cannot find a way to display the messages similar or near the screen shot below.","You need to click on plot and choose a data channel to visualize. When the graph viewer opens, you will see the messages appearing on this window."
118,Beaglebone blue R-XSR telemetry,1,"I need advice how to setup r-xsr telemetry. I read a few topics, but it is still not clear. I have R-XSR connected to SBUS and I see commands received in mission planning. Now I want to get a telemetry received to Taranis QX7 by yappu. All flashed ACCESS. I run ardupilot with  -C /dev/ttyO1 and I see some output at UART1 TX by scope. Where do I connect to R-XSR (regular or uninverted SPORT)? What parameters I set in SERIAL configuration? Would I receive all parameters, like GPS, IMU, etc, like in MP?",I managed to get it working with yaapu telemetry converter. SERIAL1_PROTOCOL = 10 SERIAL1_OPTIONS = 240  * *
119,CompassMot prop flipping and rotation on 25+kg with Mauch current sensor,1,"How to effectively test a large (25+ kg) Hexa copter before the first flight. I have been advised to use CompassMot with a current sensor by a LAME. After reviewing Randy’s video on the subject, removing the 36-inch factory-machined props which have dual-screwed brackets and reversing seems daunting. The input I received was to disable the internal compass, add an external and move as far away from any electrical components as possible that could give off interference. I have one Here3. Inside the fuselage. GPS 3D lock is solid. Does doing this negate the need to run CompassMot at all? If so how would you determine if there is any interference? To add. My frame came with 6AWG wiring from the Battery cradle to PDB. I have a Mauch PL-200 inline voltage sensor with 10 AWG and I have a main line to PDB with 6 AWG. Is it possible to just desolder and cut in the sensor with 6AWG? All answers are appreciated in advance. Anthony","Have you flown this copter yet?  If so, I would look at the compass performance and decide if you need to use COMPASS_MOT.  It’s easy enough to generate the values after a flight using MagFit."
119,CompassMot prop flipping and rotation on 25+kg with Mauch current sensor,2,"How to effectively test a large (25+ kg) Hexa copter before the first flight. I have been advised to use CompassMot with a current sensor by a LAME. After reviewing Randy’s video on the subject, removing the 36-inch factory-machined props which have dual-screwed brackets and reversing seems daunting. The input I received was to disable the internal compass, add an external and move as far away from any electrical components as possible that could give off interference. I have one Here3. Inside the fuselage. GPS 3D lock is solid. Does doing this negate the need to run CompassMot at all? If so how would you determine if there is any interference? To add. My frame came with 6AWG wiring from the Battery cradle to PDB. I have a Mauch PL-200 inline voltage sensor with 10 AWG and I have a main line to PDB with 6 AWG. Is it possible to just desolder and cut in the sensor with 6AWG? All answers are appreciated in advance. Anthony",No. This vehicle has never lifted off the ground. In NZ any UAS over 15kg has to be certified airworthy before it can even take off (even if in the middle of nowhere)
119,CompassMot prop flipping and rotation on 25+kg with Mauch current sensor,3,"How to effectively test a large (25+ kg) Hexa copter before the first flight. I have been advised to use CompassMot with a current sensor by a LAME. After reviewing Randy’s video on the subject, removing the 36-inch factory-machined props which have dual-screwed brackets and reversing seems daunting. The input I received was to disable the internal compass, add an external and move as far away from any electrical components as possible that could give off interference. I have one Here3. Inside the fuselage. GPS 3D lock is solid. Does doing this negate the need to run CompassMot at all? If so how would you determine if there is any interference? To add. My frame came with 6AWG wiring from the Battery cradle to PDB. I have a Mauch PL-200 inline voltage sensor with 10 AWG and I have a main line to PDB with 6 AWG. Is it possible to just desolder and cut in the sensor with 6AWG? All answers are appreciated in advance. Anthony","Get it to a flyable reasonably tuned state without Compass/Mot and so that you can do some figure 8’s and yaw maneuvers. Then run the resulting log through MavExplorer MagFit utility. This will give you fine tuned compass and COMPASS_MOT params to adjust. It’s typical to disable the flight controllers internal compass, assuming the external compass in the GPS unit is a reasonable distance from the power wiring. If they are both close to the wiring, then do as good as you can to start with, then Magfit should sort it out. I think you could desolder the 10AWG wires off the sensor and solder on the 6AWG - but you will need a serious soldering iron and experienced person that can do it relatively quickly without destroying parts by overheating. EDIT Something like this should do it  Mine is still going strong and has done car battery cables amongst other nasty jobs, it’s only about 30+ years old "
119,CompassMot prop flipping and rotation on 25+kg with Mauch current sensor,4,"How to effectively test a large (25+ kg) Hexa copter before the first flight. I have been advised to use CompassMot with a current sensor by a LAME. After reviewing Randy’s video on the subject, removing the 36-inch factory-machined props which have dual-screwed brackets and reversing seems daunting. The input I received was to disable the internal compass, add an external and move as far away from any electrical components as possible that could give off interference. I have one Here3. Inside the fuselage. GPS 3D lock is solid. Does doing this negate the need to run CompassMot at all? If so how would you determine if there is any interference? To add. My frame came with 6AWG wiring from the Battery cradle to PDB. I have a Mauch PL-200 inline voltage sensor with 10 AWG and I have a main line to PDB with 6 AWG. Is it possible to just desolder and cut in the sensor with 6AWG? All answers are appreciated in advance. Anthony",Thanks Shawn Really hard to get to a flyable point without being able to test fly. Go figure NZ is so Chicken & Egg when it comes to testing and airworthiness. I’m going to try some shielded braiding to see what happens as well. Can’t hurt. I did get a 120W Pace a while back and it solders beautifully as I needed something for putting XT90s on 12AWG without melting the plastic so I will give it a try. think it was a case of seeing if anyone had success doing this before. I reached out to Mauch a number of times but no reply on that front.
119,CompassMot prop flipping and rotation on 25+kg with Mauch current sensor,5,"How to effectively test a large (25+ kg) Hexa copter before the first flight. I have been advised to use CompassMot with a current sensor by a LAME. After reviewing Randy’s video on the subject, removing the 36-inch factory-machined props which have dual-screwed brackets and reversing seems daunting. The input I received was to disable the internal compass, add an external and move as far away from any electrical components as possible that could give off interference. I have one Here3. Inside the fuselage. GPS 3D lock is solid. Does doing this negate the need to run CompassMot at all? If so how would you determine if there is any interference? To add. My frame came with 6AWG wiring from the Battery cradle to PDB. I have a Mauch PL-200 inline voltage sensor with 10 AWG and I have a main line to PDB with 6 AWG. Is it possible to just desolder and cut in the sensor with 6AWG? All answers are appreciated in advance. Anthony",To add I just received a solder pot so hoping that by tinning the wire this will make life easier.
120,VL53L1X rangefinder stops at 20-24cm,1,"Good evening. I have a vl53L1X connected to a holybro px4 running ArduCopter 4.3. It is installed according to the doc pages, and I can see it transmitting through the MavLink inspector on QGC. It consistently functions perfectly from 0-20cm, then between 20-24cm it just shuts off. The highest reading I’ve been able to get is 23 cm. But if I rapidly raise the drone, it will shut of earlier. I’ve tried several sensors, and they all have the same behaviour. Correct numbers resume when the drone os lowered back under the 24cm range. Tried different surfaces too. I’m wondering if there is some magic setting or something that is turning it off. I’d like it to assist with low altitude holds under the spec range of 360cm. But 20 is a little two low to be useful. Any suggestions? Thank you.",* Indoors or outdoors?
120,VL53L1X rangefinder stops at 20-24cm,2,"Good evening. I have a vl53L1X connected to a holybro px4 running ArduCopter 4.3. It is installed according to the doc pages, and I can see it transmitting through the MavLink inspector on QGC. It consistently functions perfectly from 0-20cm, then between 20-24cm it just shuts off. The highest reading I’ve been able to get is 23 cm. But if I rapidly raise the drone, it will shut of earlier. I’ve tried several sensors, and they all have the same behaviour. Correct numbers resume when the drone os lowered back under the 24cm range. Tried different surfaces too. I’m wondering if there is some magic setting or something that is turning it off. I’d like it to assist with low altitude holds under the spec range of 360cm. But 20 is a little two low to be useful. Any suggestions? Thank you.","Indoors. Right now, just on the bench."
121,My flight controller don't have SD slot,1,"When I went into this drone hobby, somebody who quit the hobby sold me everything he has but the flight controller is defective. Not knowing the use of the SD card that time, I bought the Holybro Kakute H7 V2 and was very happy with the performance of the quad until it came to a point that I want to put the addressable LED’s to make it look nice. I went and purchased the WS2812 LED Strip not knowing that I need to run LUA scripts to send signals to the LED’s. But because my FC don’t have an SD card, I cannot run LUA scripts. I then installed a MINI PRO Arduino to drive the LED’s and its working, but I want to make it smarter by interfacing the Arduino with the flight controller. Is it possible to send PWM signals from some of the outputs of the flight controller like turn on one output if there is a failsafe? Send the copter pitch and roll signal or the LiPo battery voltage. Something along those lines. This flight controller has M5, M6, M7 and M8 motor outputs but I am using it only for a quad so I have extra 4 outputs I can use to interface the Arduino. I just don’t know how to tell the FC to send the data I want. Any help would be appreciated. Not a must to have but it would be nice to have.","If you have an extra UART available on the FC maybe the best is to create a MAVLink interface between the Arduino (using 3.3V signal levels) and the FC. This way your Arduino have access to a lot of information (copter pitch, roll, battery voltage etc.) from the FC."
121,My flight controller don't have SD slot,2,"When I went into this drone hobby, somebody who quit the hobby sold me everything he has but the flight controller is defective. Not knowing the use of the SD card that time, I bought the Holybro Kakute H7 V2 and was very happy with the performance of the quad until it came to a point that I want to put the addressable LED’s to make it look nice. I went and purchased the WS2812 LED Strip not knowing that I need to run LUA scripts to send signals to the LED’s. But because my FC don’t have an SD card, I cannot run LUA scripts. I then installed a MINI PRO Arduino to drive the LED’s and its working, but I want to make it smarter by interfacing the Arduino with the flight controller. Is it possible to send PWM signals from some of the outputs of the flight controller like turn on one output if there is a failsafe? Send the copter pitch and roll signal or the LiPo battery voltage. Something along those lines. This flight controller has M5, M6, M7 and M8 motor outputs but I am using it only for a quad so I have extra 4 outputs I can use to interface the Arduino. I just don’t know how to tell the FC to send the data I want. Any help would be appreciated. Not a must to have but it would be nice to have.",There’s an arduino firmware somewhere that reads the mavlink messages and you can adjust its settings to make the LEDs respond however you like to flight mode changes and failsafes.
121,My flight controller don't have SD slot,3,"When I went into this drone hobby, somebody who quit the hobby sold me everything he has but the flight controller is defective. Not knowing the use of the SD card that time, I bought the Holybro Kakute H7 V2 and was very happy with the performance of the quad until it came to a point that I want to put the addressable LED’s to make it look nice. I went and purchased the WS2812 LED Strip not knowing that I need to run LUA scripts to send signals to the LED’s. But because my FC don’t have an SD card, I cannot run LUA scripts. I then installed a MINI PRO Arduino to drive the LED’s and its working, but I want to make it smarter by interfacing the Arduino with the flight controller. Is it possible to send PWM signals from some of the outputs of the flight controller like turn on one output if there is a failsafe? Send the copter pitch and roll signal or the LiPo battery voltage. Something along those lines. This flight controller has M5, M6, M7 and M8 motor outputs but I am using it only for a quad so I have extra 4 outputs I can use to interface the Arduino. I just don’t know how to tell the FC to send the data I want. Any help would be appreciated. Not a must to have but it would be nice to have.",* I think I found it. I will try this route. Lets see how the Arduino firmware can do. *
121,My flight controller don't have SD slot,4,"When I went into this drone hobby, somebody who quit the hobby sold me everything he has but the flight controller is defective. Not knowing the use of the SD card that time, I bought the Holybro Kakute H7 V2 and was very happy with the performance of the quad until it came to a point that I want to put the addressable LED’s to make it look nice. I went and purchased the WS2812 LED Strip not knowing that I need to run LUA scripts to send signals to the LED’s. But because my FC don’t have an SD card, I cannot run LUA scripts. I then installed a MINI PRO Arduino to drive the LED’s and its working, but I want to make it smarter by interfacing the Arduino with the flight controller. Is it possible to send PWM signals from some of the outputs of the flight controller like turn on one output if there is a failsafe? Send the copter pitch and roll signal or the LiPo battery voltage. Something along those lines. This flight controller has M5, M6, M7 and M8 motor outputs but I am using it only for a quad so I have extra 4 outputs I can use to interface the Arduino. I just don’t know how to tell the FC to send the data I want. Any help would be appreciated. Not a must to have but it would be nice to have.",Here’s a very basic WS2812 LED patterns flown at dusk.     
121,My flight controller don't have SD slot,5,"When I went into this drone hobby, somebody who quit the hobby sold me everything he has but the flight controller is defective. Not knowing the use of the SD card that time, I bought the Holybro Kakute H7 V2 and was very happy with the performance of the quad until it came to a point that I want to put the addressable LED’s to make it look nice. I went and purchased the WS2812 LED Strip not knowing that I need to run LUA scripts to send signals to the LED’s. But because my FC don’t have an SD card, I cannot run LUA scripts. I then installed a MINI PRO Arduino to drive the LED’s and its working, but I want to make it smarter by interfacing the Arduino with the flight controller. Is it possible to send PWM signals from some of the outputs of the flight controller like turn on one output if there is a failsafe? Send the copter pitch and roll signal or the LiPo battery voltage. Something along those lines. This flight controller has M5, M6, M7 and M8 motor outputs but I am using it only for a quad so I have extra 4 outputs I can use to interface the Arduino. I just don’t know how to tell the FC to send the data I want. Any help would be appreciated. Not a must to have but it would be nice to have.",Wow… hard core stuff but interesting. Wish me luck to make this work. I hope the Arduino Nano or Mini has enough hoursepower to process all those information.
121,My flight controller don't have SD slot,6,"When I went into this drone hobby, somebody who quit the hobby sold me everything he has but the flight controller is defective. Not knowing the use of the SD card that time, I bought the Holybro Kakute H7 V2 and was very happy with the performance of the quad until it came to a point that I want to put the addressable LED’s to make it look nice. I went and purchased the WS2812 LED Strip not knowing that I need to run LUA scripts to send signals to the LED’s. But because my FC don’t have an SD card, I cannot run LUA scripts. I then installed a MINI PRO Arduino to drive the LED’s and its working, but I want to make it smarter by interfacing the Arduino with the flight controller. Is it possible to send PWM signals from some of the outputs of the flight controller like turn on one output if there is a failsafe? Send the copter pitch and roll signal or the LiPo battery voltage. Something along those lines. This flight controller has M5, M6, M7 and M8 motor outputs but I am using it only for a quad so I have extra 4 outputs I can use to interface the Arduino. I just don’t know how to tell the FC to send the data I want. Any help would be appreciated. Not a must to have but it would be nice to have.",Put in your own compass for the lights.
121,My flight controller don't have SD slot,7,"When I went into this drone hobby, somebody who quit the hobby sold me everything he has but the flight controller is defective. Not knowing the use of the SD card that time, I bought the Holybro Kakute H7 V2 and was very happy with the performance of the quad until it came to a point that I want to put the addressable LED’s to make it look nice. I went and purchased the WS2812 LED Strip not knowing that I need to run LUA scripts to send signals to the LED’s. But because my FC don’t have an SD card, I cannot run LUA scripts. I then installed a MINI PRO Arduino to drive the LED’s and its working, but I want to make it smarter by interfacing the Arduino with the flight controller. Is it possible to send PWM signals from some of the outputs of the flight controller like turn on one output if there is a failsafe? Send the copter pitch and roll signal or the LiPo battery voltage. Something along those lines. This flight controller has M5, M6, M7 and M8 motor outputs but I am using it only for a quad so I have extra 4 outputs I can use to interface the Arduino. I just don’t know how to tell the FC to send the data I want. Any help would be appreciated. Not a must to have but it would be nice to have.",Yup that is one *. Another option is *. I recon this is smarter as you can get info from the FC and process it to trnslate into LED Pattern to indicate what it means.
121,My flight controller don't have SD slot,8,"When I went into this drone hobby, somebody who quit the hobby sold me everything he has but the flight controller is defective. Not knowing the use of the SD card that time, I bought the Holybro Kakute H7 V2 and was very happy with the performance of the quad until it came to a point that I want to put the addressable LED’s to make it look nice. I went and purchased the WS2812 LED Strip not knowing that I need to run LUA scripts to send signals to the LED’s. But because my FC don’t have an SD card, I cannot run LUA scripts. I then installed a MINI PRO Arduino to drive the LED’s and its working, but I want to make it smarter by interfacing the Arduino with the flight controller. Is it possible to send PWM signals from some of the outputs of the flight controller like turn on one output if there is a failsafe? Send the copter pitch and roll signal or the LiPo battery voltage. Something along those lines. This flight controller has M5, M6, M7 and M8 motor outputs but I am using it only for a quad so I have extra 4 outputs I can use to interface the Arduino. I just don’t know how to tell the FC to send the data I want. Any help would be appreciated. Not a must to have but it would be nice to have.",Please share if you get it to work. Night flying with lights is awesome.
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,1,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","I just noticed this post, it appears to describe the same behaviour. *"
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,2,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max",From what you described that is exactly what we observed.  We decided to switch to guided mode and then use SET_POSITION_TARGET_GLOBAL_INT. * there are now two instances of this behavior recorded.  Who in the dev team can we have to look at this as a potential bug?
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,3,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max",*
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,4,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","Hi Mustafa, I’ve included a link to a SITL log that hopefully demonstrates the potential issue. It’s a short mission that consists of the components listed at the end of this post. I also set up a load of telemetry streams, for brevity these have been omitted. They are used to control the scheduling of the guided commands etc. For example, the loiter is interrupted by the land command after 5 seconds. Hopefully you’ll be able to see that as soon as the loiter is issued, the altitude starts to decrease before it is interrupted by the land command. Let me know if there is anything else you need. Request Guided Mode – MAV_CMD_DO_SET_MODE set to COPTER_MODE_GUIDED Takeoff – MAV_CMD_NAV_TAKEOFF, to an altitude of 20.0m Null Waypoint – MAV_CMD_DO_REPOSITION with the lat/lng/alt parameters set to the same values as the takeoff. This is the work around for #21080 (speed change after takeoff) Speed Change – MAV_CMD_DO_CHANGE_SPEED, set to 8.0m/s Waypoint – MAV_CMD_DO_REPOSITION, flies ~40m West from the takeoff point Loiter – MAV_CMD_NAV_LOITER_UNLIM, the lat/lng/alt are all set to 0.0, this is being used to create a “delay”, i.e. in this example it is interrupted after 5s by issuing the land command Land – MAV_CMD_NAV_LAND"
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,5,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","First of all, nothing is wrong with the firmware (w.r.t. that log). You shouldn’t be able to send MAV_CMD_NAV_LOITER_UNLIM to the vehicle in GUIDED mode. You can’t use every AUTO mode command in GUIDED mode. In that log, there isn’t MAV_CMD_NAV_LOITER_UNLIM issued but there is a mode changing to LOITER mode. The LOITER mode requires an RC controller, if the throttle is below 50% vehicle descends, if the throttle is above 50% the vehicle ascends. During the flight, the throttle left at zero so this is why the vehicle start to descend (in LOITER mode). There is no state machine like AUTO mode in GUIDED mode. You need to send the command one by one, and the vehicle executes that command ASAP if it can."
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,6,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","That was quick! I’m definitely sending a MAV_CMD_NAV_LOITER_UNLIM in guided mode and it is being ACKed. I had noticed the LOITER mode change, which I assumed was triggered by the MAV_CMD_NAV_LOITER_UNLIM command and was expected. The documentation does state that this particular loiter command (i.e. the “UNLIM” version) can be issued in guide mode. I did try others and as expected they were NACKed. I did wonder about whether the throttle setting was to blame, makes sense. Question, if the throttle is at or above 50% and the loiter altitude is set to 0.0, is the loiter then expected to hold its altitude? When I get a chance I’ll test this. I think like Henk I’ll abandon the use of loiter (the mode change is also a minor complicating aspect) and implement my halt / delay functionality using velocity control."
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,7,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","If you want to pause/resume the flight, you can take a look at this PR I was working on:  Maybe it will help to accomplish what you’re trying to do."
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,8,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","I think your feeback regarding the controller is the trick.  I am not aware of that being in the documentation.  It makes sense, but is not obvious."
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,9,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","It’s interesting, as when an external computer is being used to control ArduPilot you may well want / need to have a safety pilot keeping an eye on things, but not always… It’s certainly a challenge to make a flight controller agnostic mission executive, but then life is supposed to be fun!"
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,10,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","Actually there are some safety related precautions. There is a parameter called guid_timeout. This parameter make sure that you’re updating target vehicle state at a reasonable frequency. Other that that, you can always create a fence to also limit target position. If you want to limit target vehicle state, change guided timeout, and if you want to limit the entire flight, enable/disable fence. There are other limits on automatic flight related with vehicle state like speeds accelerations angles etc. Take a look at them."
122,Help? MAV_CMD_NAV_LOITER_UNLIM losing altitude in guided mode,11,"Hi all, I’m using a companion computer to fly in guided mode, which on the whole is working well. However, I’m slightly puzzled by the behaviour of MAV_CMD_NAV_LOITER_UNLIM. I’m attempting to use this command to hold position until appropriately interrupted. The command is being issued with 0.0f values for latitude, longitude and altitude as suggested by the documentation, i.e. the copter should hold its position and altitude. So, the copter does hold its latitude / longitude, but also descends as if it was performing a land. Specifying the current altitude value makes no difference, the copter still behaves the same way. Am I missing something? Is there something else I need to do to make this work? Many thanks! Max","Good to know, thanks!"
123,Data flash Log...FAIL,1,"Failed to load analyzer results System.Xml.XmlExeception: Unexpected end of file has occurred. The following elements are not closed: header, loganalysis. Line 8, position 1. at system.Xml.xmlTextReaderimpl.Throw(exception e) at system.Xml.xmlTextReaderimpl. ThrowUnclosedElements() at system.Xml.xmlTextReaderimpl.ParseElementConent() at system.Xml.XmlSubtreeReader.Read() at system.Xml.XmlReader.MoveToContent() at system.Xml.XmlReader.IsStartElement() at MissionPlanner.Utilities.LogAnalyzer.Results(String xmfile) in C:\Users\mich1\Desktop\CubePilot\MissionPlanner\Utilities\LogAnalyzer.cs:line 132 at MissionPlanner. GCSViews.FlightData.But_loganalysis_Click(Object sender. EventArgs e) in C:Users\mich1\Desktop\CubePilot\missionPlanner\GCSViews\FlightData cs:line 1205 THIS Users\mich1\ IS NOT ME…please Help Ken","Hi Ken Are you referring to the auto analyzer in MissionPlanner? Most people dont use it because some results might be outdated and some results might be too simplistic to be useful. I’ve now doubt is was a very good idea at the time. Otherwise if MissionPlanner is giving you problems in general, you might be able to uninstall, clean, reinstall"
123,Data flash Log...FAIL,2,"Failed to load analyzer results System.Xml.XmlExeception: Unexpected end of file has occurred. The following elements are not closed: header, loganalysis. Line 8, position 1. at system.Xml.xmlTextReaderimpl.Throw(exception e) at system.Xml.xmlTextReaderimpl. ThrowUnclosedElements() at system.Xml.xmlTextReaderimpl.ParseElementConent() at system.Xml.XmlSubtreeReader.Read() at system.Xml.XmlReader.MoveToContent() at system.Xml.XmlReader.IsStartElement() at MissionPlanner.Utilities.LogAnalyzer.Results(String xmfile) in C:\Users\mich1\Desktop\CubePilot\MissionPlanner\Utilities\LogAnalyzer.cs:line 132 at MissionPlanner. GCSViews.FlightData.But_loganalysis_Click(Object sender. EventArgs e) in C:Users\mich1\Desktop\CubePilot\missionPlanner\GCSViews\FlightData cs:line 1205 THIS Users\mich1\ IS NOT ME…please Help Ken",Thanks Shawn for your insight.
123,Data flash Log...FAIL,3,"Failed to load analyzer results System.Xml.XmlExeception: Unexpected end of file has occurred. The following elements are not closed: header, loganalysis. Line 8, position 1. at system.Xml.xmlTextReaderimpl.Throw(exception e) at system.Xml.xmlTextReaderimpl. ThrowUnclosedElements() at system.Xml.xmlTextReaderimpl.ParseElementConent() at system.Xml.XmlSubtreeReader.Read() at system.Xml.XmlReader.MoveToContent() at system.Xml.XmlReader.IsStartElement() at MissionPlanner.Utilities.LogAnalyzer.Results(String xmfile) in C:\Users\mich1\Desktop\CubePilot\MissionPlanner\Utilities\LogAnalyzer.cs:line 132 at MissionPlanner. GCSViews.FlightData.But_loganalysis_Click(Object sender. EventArgs e) in C:Users\mich1\Desktop\CubePilot\missionPlanner\GCSViews\FlightData cs:line 1205 THIS Users\mich1\ IS NOT ME…please Help Ken","It’s handy to do the Beta updates from the Help screen of MissionPlanner, unless you’ve got a special reason to avoid the Beta updates."
124,Testing radio failsafe,1,"After setting up the radio failsafe, it has to be tested. Usually you do the preparations, then turn off the radio to simulate a radio failsafe. In the past, I remember I read somewhere that there is a way to simulate a failsafe without turning off the radio. If my memory is correct, you assign a switch to simulate the failsafe but I cannot remember where is it located in the WIKI or Youtube. If somebody knows the URL please share. This thread is related to me previouse post wherein I lost radio control but I found out that the radio faisafe is not enabled. I think I have made the required parameter settings and I need to test.",* I suppose you could mix a switch to lower the throttle chan below the FS value but why bother when you can just turn off the radio?
124,Testing radio failsafe,2,"After setting up the radio failsafe, it has to be tested. Usually you do the preparations, then turn off the radio to simulate a radio failsafe. In the past, I remember I read somewhere that there is a way to simulate a failsafe without turning off the radio. If my memory is correct, you assign a switch to simulate the failsafe but I cannot remember where is it located in the WIKI or Youtube. If somebody knows the URL please share. This thread is related to me previouse post wherein I lost radio control but I found out that the radio faisafe is not enabled. I think I have made the required parameter settings and I need to test.","Thanks for that. The reason I want to do this is to also test gaining back control after a throttle failsafe. Turning off the radio means you have to turn it on and wait till you gain connection which usually takes longer time. By the time you gain control, the copter might have already landed. Secondly, if the copter does unnecessary manoeuvres or fly away during testing, then its faster to regain control. I think. I have not tested it yet. Any reaction will help before I get into this test."
124,Testing radio failsafe,3,"After setting up the radio failsafe, it has to be tested. Usually you do the preparations, then turn off the radio to simulate a radio failsafe. In the past, I remember I read somewhere that there is a way to simulate a failsafe without turning off the radio. If my memory is correct, you assign a switch to simulate the failsafe but I cannot remember where is it located in the WIKI or Youtube. If somebody knows the URL please share. This thread is related to me previouse post wherein I lost radio control but I found out that the radio faisafe is not enabled. I think I have made the required parameter settings and I need to test.","I think you can validate this even on ground… with your drone connected to a GCS, simply turn off your RC and turn on again some time later and take a look at MAVLink messages coming, you should see a Radio Failsafe messsage ON and OFF afterwards. As it is a native and well-established feature from Ardupilot, I don’t think it is that necessary to test it on flight, just make sure you correctly set up your parameters… What’s your opinion about it * ?"
124,Testing radio failsafe,4,"After setting up the radio failsafe, it has to be tested. Usually you do the preparations, then turn off the radio to simulate a radio failsafe. In the past, I remember I read somewhere that there is a way to simulate a failsafe without turning off the radio. If my memory is correct, you assign a switch to simulate the failsafe but I cannot remember where is it located in the WIKI or Youtube. If somebody knows the URL please share. This thread is related to me previouse post wherein I lost radio control but I found out that the radio faisafe is not enabled. I think I have made the required parameter settings and I need to test.","I always just test it on the ground with a GCS connected.  As long as the message “RC Failsafe” comes up you’re good to go.  When testing on the ground the quad will just disarm, regardless of your failsafe settings.  Then just check your failsafe actions are set as you want.  If you are using RTL then test that separately as a flight mode."
124,Testing radio failsafe,5,"After setting up the radio failsafe, it has to be tested. Usually you do the preparations, then turn off the radio to simulate a radio failsafe. In the past, I remember I read somewhere that there is a way to simulate a failsafe without turning off the radio. If my memory is correct, you assign a switch to simulate the failsafe but I cannot remember where is it located in the WIKI or Youtube. If somebody knows the URL please share. This thread is related to me previouse post wherein I lost radio control but I found out that the radio faisafe is not enabled. I think I have made the required parameter settings and I need to test.","Yup I’ve done all those ground testing already. And I find it is easy to run a radio failsafe without turning off the radio if you are running OpenTx or EdgeTx. Just go to the receiver number in Model Setup. In the screen shot below, I am bound to receiver no 13. Arm the quad and when you are ready to simulate a radio failsafe, change the receiver no to anything else. When you want to regain connection, set it back to 13. This is an real failsafe as the radio will stop talking to the receiver."
124,Testing radio failsafe,6,"After setting up the radio failsafe, it has to be tested. Usually you do the preparations, then turn off the radio to simulate a radio failsafe. In the past, I remember I read somewhere that there is a way to simulate a failsafe without turning off the radio. If my memory is correct, you assign a switch to simulate the failsafe but I cannot remember where is it located in the WIKI or Youtube. If somebody knows the URL please share. This thread is related to me previouse post wherein I lost radio control but I found out that the radio faisafe is not enabled. I think I have made the required parameter settings and I need to test.","At one stage we had a transmitter that had a built in throttle-cut switch, not a bad idea with planes and things in a world where you’re not using a flight controller to intelligently control arming and everything else. It seemed like such a good idea at the time we’ve continued using it on newer transmitters too. We have a switch set to throttle channel -120%, and switch warnings so it’s impossible to power up the transmitter and use it unless the throttle cut is activated - and the bonus is the aircraft starts in a RC Failsafe condition, meaning it cant arm or do anything strange either. This throttle cut switch is a quick/easy way to bench-test the RC Failsafe too. The receiver (or transmitter/receiver combo) must be set to NO PULSES for the failsafe condition."
125,Return-To-Launch when there is radio interference,1,"I suspected I had a radio interference yesterday. I was doing figure-8 when suddenly I noticed that I lost stick control. I immediately flip the Emergency Motor Stop switch but the copter did not respond for quite some time. Is there a way to set parameters such that when there is a brownout, the copter will Return-To-Launch? Fence is on so I’m sure GPS is locked before I was able to arm the quad. Receiver is crossfire running at 915MHz and the Radio Telemetry is also running at 915MHz as shown in the picture. Will the Receiver interfere with the Radio Telemetry? I guess not because they are running on frequency hopping but I’m not sure. I just repositioned the Radio Telemetry when this started happening. *",Not sure what you mean by brownout but loss of RC is what the Throttle Failsafe is for. Failsafe set on the Rx to Cut?
125,Return-To-Launch when there is radio interference,2,"I suspected I had a radio interference yesterday. I was doing figure-8 when suddenly I noticed that I lost stick control. I immediately flip the Emergency Motor Stop switch but the copter did not respond for quite some time. Is there a way to set parameters such that when there is a brownout, the copter will Return-To-Launch? Fence is on so I’m sure GPS is locked before I was able to arm the quad. Receiver is crossfire running at 915MHz and the Radio Telemetry is also running at 915MHz as shown in the picture. Will the Receiver interfere with the Radio Telemetry? I guess not because they are running on frequency hopping but I’m not sure. I just repositioned the Radio Telemetry when this started happening. *","Yes I mean loss of RC. And thanks . I will look at what is my settings on this. I can’t remember I set this when I built the quad so everything will be on default values. Lucky when this happen, the copter is flying very low. When the Motor Emergency Stop has kick-in, the copter jsut dropped on the grass. No damage."
126,T motor DataLink V2 esc telemetry on ardupilot,1,"Hi! We have the tmotor data link v2 to manage the temeletry of the alfa esc of our motors. we have setup the serialX prototocol to 16 (esc telemetry). and we have no data from the esc. our setup:  esc telemetry wires of each motor to the data link, and the data link to the cube orange by a serial connection. the data link are feed by 6s from the power board. this feature its working on ardupilot? how can manage and read the live telemetry data of the esc on mission planner or simply have registered in the flight logs?",That feature is not implemented yet.
127,How does VTX Power dynamically control the Video Transmitter?,1,"Hi, I wired up an EACHINE TX805S 5.8GHz AC VTX to my Kakute H7 V2 as shown below. * Everything is working as expected but what I still cannot understand, and I don’t even know if its working is the VTX functionality of Copter 4.3. Here’s my parameter settings:  In the Messages TAB of Mission Planner, series of messages regarding the VTX Frequency and transmission power is spamming the message TAB. In the screen show below, the power is 0mW but I can still see video in the googles. I was expecting that there will be no video sent out at 0mW power output.  In my radio, I assigned an output to control RC10 and when I set it to MIN, the power displayed in the message TAB is 0mW while if I set it to MAX the power displayed in the message TAB is 1000 mW.  * But looking at the wiring diagram, the Power Supply input of TX805S which is 7-24V is connected to the VTX output of the flight controller. Question: How can the flight controller dynamically control the power output of the video transmitter? Does it output a proportional voltage at the VTX output depending on the setting of the potentiometer in the radio? Regards, Carlou",Does it have a recognized protocol? * For future reference you can often just do a Google search for the Wiki. In this case “ardupilot vtx”
127,How does VTX Power dynamically control the Video Transmitter?,2,"Hi, I wired up an EACHINE TX805S 5.8GHz AC VTX to my Kakute H7 V2 as shown below. * Everything is working as expected but what I still cannot understand, and I don’t even know if its working is the VTX functionality of Copter 4.3. Here’s my parameter settings:  In the Messages TAB of Mission Planner, series of messages regarding the VTX Frequency and transmission power is spamming the message TAB. In the screen show below, the power is 0mW but I can still see video in the googles. I was expecting that there will be no video sent out at 0mW power output.  In my radio, I assigned an output to control RC10 and when I set it to MIN, the power displayed in the message TAB is 0mW while if I set it to MAX the power displayed in the message TAB is 1000 mW.  * But looking at the wiring diagram, the Power Supply input of TX805S which is 7-24V is connected to the VTX output of the flight controller. Question: How can the flight controller dynamically control the power output of the video transmitter? Does it output a proportional voltage at the VTX output depending on the setting of the potentiometer in the radio? Regards, Carlou",You need to wire the smart audio pin to a UART TX pin
127,How does VTX Power dynamically control the Video Transmitter?,3,"Hi, I wired up an EACHINE TX805S 5.8GHz AC VTX to my Kakute H7 V2 as shown below. * Everything is working as expected but what I still cannot understand, and I don’t even know if its working is the VTX functionality of Copter 4.3. Here’s my parameter settings:  In the Messages TAB of Mission Planner, series of messages regarding the VTX Frequency and transmission power is spamming the message TAB. In the screen show below, the power is 0mW but I can still see video in the googles. I was expecting that there will be no video sent out at 0mW power output.  In my radio, I assigned an output to control RC10 and when I set it to MIN, the power displayed in the message TAB is 0mW while if I set it to MAX the power displayed in the message TAB is 1000 mW.  * But looking at the wiring diagram, the Power Supply input of TX805S which is 7-24V is connected to the VTX output of the flight controller. Question: How can the flight controller dynamically control the power output of the video transmitter? Does it output a proportional voltage at the VTX output depending on the setting of the potentiometer in the radio? Regards, Carlou","Hi @ Andy, Does the Smart Audio control the VTX Power? I don’t have an extra UART but if the Smart Audio is the one controlling the VTX Power, I may need to remove my Lidar connectred to one UART and use that UART for teh Smart Audio. What is the SERIALxPROTOCOL settings of the Smart Audio? Is it 37?"
127,How does VTX Power dynamically control the Video Transmitter?,4,"Hi, I wired up an EACHINE TX805S 5.8GHz AC VTX to my Kakute H7 V2 as shown below. * Everything is working as expected but what I still cannot understand, and I don’t even know if its working is the VTX functionality of Copter 4.3. Here’s my parameter settings:  In the Messages TAB of Mission Planner, series of messages regarding the VTX Frequency and transmission power is spamming the message TAB. In the screen show below, the power is 0mW but I can still see video in the googles. I was expecting that there will be no video sent out at 0mW power output.  In my radio, I assigned an output to control RC10 and when I set it to MIN, the power displayed in the message TAB is 0mW while if I set it to MAX the power displayed in the message TAB is 1000 mW.  * But looking at the wiring diagram, the Power Supply input of TX805S which is 7-24V is connected to the VTX output of the flight controller. Question: How can the flight controller dynamically control the power output of the video transmitter? Does it output a proportional voltage at the VTX output depending on the setting of the potentiometer in the radio? Regards, Carlou",It’s all in the wiki - yes it controls VTX power
128,Obstacle Avoidance hardware,1,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,  Some people have tried it. But I do not know their results.   Tons of people do it. And there is even software for the jetson. search for apsync and you will find it  
128,Obstacle Avoidance hardware,2,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,"We are using an ouster lidar and a jetson tx2 running ROS. We send the lidar messages over mavlink. OA worked when we were using 4.1.1 firmware, but since we have updated to 4.2.3, OA has stopped working. Only avoid is working in manual modes. I posted about this a couple of days ago in the 4.2 forum with no reply."
128,Obstacle Avoidance hardware,3,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,Post more and better details on how to reproduce the issue on a * issue.
128,Obstacle Avoidance hardware,4,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,"I have been researching since my OP…and have started focusing on a solution based on either:  Four of the Benewakes TF02 pro (four sides with slight angle down) or three of the stereo vision IMX219 w/160 degree FOV. (front, back and bottom)  I am leaning toward the IMX219 as it also has the video feed for facial recognition, FPV and tracking/following functionality. Still working on getting multiple devices connected simultaneously to the Nano (i did read about a version of the Nano that includes more than one camera input…but the three i have are all B02 version which just has the single camera connect). I did consider the Realsense d430 (well, the OEM Dell laptop version as you can pick those up for $60 + $20 for the USB power conversion) instead of the $200+ cost of the retail d430"
128,Obstacle Avoidance hardware,5,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,"After posting this question i continued researching and found that many have integrated the Nano into UAVs… Additionally, i am starting to think the Nano is not the best solution for UAVs…"
128,Obstacle Avoidance hardware,6,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,I have done some OA work with a Jetson TX2 and a ZED Stereo Cam. Works well with Arducopter 4.2.
128,Obstacle Avoidance hardware,7,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,"looking at the ZED Stereo cam info now, thank you!"
128,Obstacle Avoidance hardware,8,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,"quick question as i read the github: I see this was built around the TX2, How difficult would it be to use the Nano 4Gb? Jetpack 4.5.1. Is the 2.5x processing of the TX over the Nano required?"
128,Obstacle Avoidance hardware,9,I have been researching the different versions of Obstacle Avoidance (OA) here on ArduPilot and a few other forums to zero in on cost effective reliable hardware. Question One: RPLidar A2 is noted on the configuration page (with sampling rates of 4k & 8k). Slamtec has a few other options that have similar power and size dimensions with 32k sampling rates at a comparable or lower cost. Has anyone used the RPLidar A2M8-R6 (lower res/cost unit) or the RPLidar S2 or S2L…both with 32k sample rate and better range? Question Two: Can Nvidia Jetson be integrated with ArduPilot? Has anyone successfully used the Jetson onboard medium size drone?,"With my implementation, I am afraid, yes you need all the computing power you can get. The TX2 already runs at its limits. But there are a lot of new solutions out there. You may look at the new ZED2i where a lot of the 3D imaging processing has been moved into the camera."
129,High magnetic_field,1,I am facing a high magnetic field (>500). Could someone help out with how to minimize this value? Dataflash Log: *,"There’s a lot of current related issues here.  You may have to move some of the power wires away from the compass/GPS module and work on shielding.  It’s common with the cube to suggest using the external compass over the internal, but the external on here looks like it’s getting much more interference. You might consider running MagFit on this quad to improve the COMPASS_MOT values, but only after you’ve tried to fix some of the wiring issues. Here’s a good post that might give you some clues:"
129,High magnetic_field,2,I am facing a high magnetic field (>500). Could someone help out with how to minimize this value? Dataflash Log: *,I think you need to show Yaw on that graph to see the bigger picture. But running Magfit for calibration and motor interference is a good idea. It should be part of standard tuning really. I’m not sure I see any problem with the compass but flying on default parameters isn’t the best plan. Particularly flying an Auto Mission.
129,High magnetic_field,3,I am facing a high magnetic field (>500). Could someone help out with how to minimize this value? Dataflash Log: *,"Thank you for Helping out I am using Kore carrier board for my quadcopter and my herelink antennas, Multiband antenna are placed 10 cm above the cube. Is this causing the problem? Please help!! "
129,High magnetic_field,4,I am facing a high magnetic field (>500). Could someone help out with how to minimize this value? Dataflash Log: *,What problem? What flight issue or errors are you seeing?
129,High magnetic_field,5,I am facing a high magnetic field (>500). Could someone help out with how to minimize this value? Dataflash Log: *,Is that the major reason for High mag fields? Are the antennae causing more interference?
129,High magnetic_field,6,I am facing a high magnetic field (>500). Could someone help out with how to minimize this value? Dataflash Log: *,"Dave has a good point, what problems are you seeing?  There’s no warning messages in the logs.  If you’re having flight performance issues then tune the quad, because it’s still running default tuning parameters. (I didn’t look at that earlier, but the tuning sure could use some work) Then run magfit and dial in the compasses. Start here: *"
129,High magnetic_field,7,I am facing a high magnetic field (>500). Could someone help out with how to minimize this value? Dataflash Log: *,Ok will tune Thank you
130,Force GPIO pin HIGH when bootloader running,1,I want to force GPIOs high when bootloader is running. I tried to config add new define in hwdef-bl.dat but not success.  ensure PWM output low PH10 M1 OUTPUT OPENDRAIN HIGH PH11 M2 OUTPUT OPENDRAIN HIGH PH12 M3 OUTPUT OPENDRAIN HIGH PI0 M4 OUTPUT OPENDRAIN HIGH But GPIO not high when bootloder is running. Board : CUAV-Nora Firmware : ArduCopter 4.0 Please Advise. Thank you,"Are you trying to solve a problem where some external device is affected by the GPIO output status during boot? Before the GPIO output is set to it’s desired at-rest state? Rather than changing the GPIO operation via firmware, can you apply a delay to the power supply of the external device? For example using a MOSFET with delay."
130,Force GPIO pin HIGH when bootloader running,2,I want to force GPIOs high when bootloader is running. I tried to config add new define in hwdef-bl.dat but not success.  ensure PWM output low PH10 M1 OUTPUT OPENDRAIN HIGH PH11 M2 OUTPUT OPENDRAIN HIGH PH12 M3 OUTPUT OPENDRAIN HIGH PI0 M4 OUTPUT OPENDRAIN HIGH But GPIO not high when bootloder is running. Board : CUAV-Nora Firmware : ArduCopter 4.0 Please Advise. Thank you,"Yes. Because of floating GPIO,  ESC state is missed. First I try to solve the problem without change any hardware."
130,Force GPIO pin HIGH when bootloader running,3,I want to force GPIOs high when bootloader is running. I tried to config add new define in hwdef-bl.dat but not success.  ensure PWM output low PH10 M1 OUTPUT OPENDRAIN HIGH PH11 M2 OUTPUT OPENDRAIN HIGH PH12 M3 OUTPUT OPENDRAIN HIGH PI0 M4 OUTPUT OPENDRAIN HIGH But GPIO not high when bootloder is running. Board : CUAV-Nora Firmware : ArduCopter 4.0 Please Advise. Thank you,Try this maybe? *
131,Adding driver to ardupilot,1,"hello there , i am working on the CAN obstacle avoidance readers for that ardupilot didnt have any driver so i wrote my own driver for that please help me how can i add the driver to ardupilot firmware actually i got the driver from the sensor manufacturer what i have to change i the driver in order to work with ardupilot * (111.5 KB) *","First of all, you will have to setup your build environment in order to build custom firmware for Ardupilot: Then, this can be a good starting point:"
132,Zealot H743 FC Internal Voltage Drop Due To IMU Heater,1,"All, Latest Copter, MP, H743 firmware, dead-cat 450 quad. I observed what I initially thought was an issue with the H743 voltage/current sensor:  It would not consistently report the calibrated voltage on the HUD or via telemetry.  The display was often 0.5V low, and would then slowly (over 5-8 seconds) return to within 0.03V of the calibrated voltage.  This ‘drop-then-return correctly’ cycle repeats every 15-20 seconds. The cycling and voltage drop are a result of the IMU heater requesting heat. To prove this, I set BRD_HEAT_TARG to -1, which kills the heating element.  After rebooting, the HUD reported voltage and actual voltage correctly remain within 0.03V of each other.  I determined that the voltage drop is ocurring within the FC itself, not caused by a voltage drop in the external wiring due to increased current demand. In my case, the false low voltage resulted in an unanticipated premature RTL Failsafe event, and a minor crash. Test setup consists of a variable voltage lab power supply and several DVMs of known accuracy. Representative test result:  Calibrated voltage at 11.90V  HUD says 11.93V, system wide current is 340 mA When IMU heater fires, HUD says 11.41V, current is 410 mA After ~20 seconds, displayed voltage slowly increases to 11.92V, current 340 mA Above cycle repeats every 20-30 seconds  So an internal-to-FC ~70mA current bump is causing the voltage sag - I’m not sure of a work around yet. No .bin file, this was all bench work. I’m thinking that the power bus (or internal traces/wires) in the H743 might need a revisit…or power the heating element from a different source?","Thanks for the report.  A dataflash log would be really handy - you can set LOG_DISARMED to 1 to start a log generating, and then back to 0 to close that log off. I can reproduce something similar to what you’re seeing here, but with nothing like the range: *"
132,Zealot H743 FC Internal Voltage Drop Due To IMU Heater,2,"All, Latest Copter, MP, H743 firmware, dead-cat 450 quad. I observed what I initially thought was an issue with the H743 voltage/current sensor:  It would not consistently report the calibrated voltage on the HUD or via telemetry.  The display was often 0.5V low, and would then slowly (over 5-8 seconds) return to within 0.03V of the calibrated voltage.  This ‘drop-then-return correctly’ cycle repeats every 15-20 seconds. The cycling and voltage drop are a result of the IMU heater requesting heat. To prove this, I set BRD_HEAT_TARG to -1, which kills the heating element.  After rebooting, the HUD reported voltage and actual voltage correctly remain within 0.03V of each other.  I determined that the voltage drop is ocurring within the FC itself, not caused by a voltage drop in the external wiring due to increased current demand. In my case, the false low voltage resulted in an unanticipated premature RTL Failsafe event, and a minor crash. Test setup consists of a variable voltage lab power supply and several DVMs of known accuracy. Representative test result:  Calibrated voltage at 11.90V  HUD says 11.93V, system wide current is 340 mA When IMU heater fires, HUD says 11.41V, current is 410 mA After ~20 seconds, displayed voltage slowly increases to 11.92V, current 340 mA Above cycle repeats every 20-30 seconds  So an internal-to-FC ~70mA current bump is causing the voltage sag - I’m not sure of a work around yet. No .bin file, this was all bench work. I’m thinking that the power bus (or internal traces/wires) in the H743 might need a revisit…or power the heating element from a different source?",We have a customer who reported the same issue. He solved it after reconnecting the power connector.
132,Zealot H743 FC Internal Voltage Drop Due To IMU Heater,3,"All, Latest Copter, MP, H743 firmware, dead-cat 450 quad. I observed what I initially thought was an issue with the H743 voltage/current sensor:  It would not consistently report the calibrated voltage on the HUD or via telemetry.  The display was often 0.5V low, and would then slowly (over 5-8 seconds) return to within 0.03V of the calibrated voltage.  This ‘drop-then-return correctly’ cycle repeats every 15-20 seconds. The cycling and voltage drop are a result of the IMU heater requesting heat. To prove this, I set BRD_HEAT_TARG to -1, which kills the heating element.  After rebooting, the HUD reported voltage and actual voltage correctly remain within 0.03V of each other.  I determined that the voltage drop is ocurring within the FC itself, not caused by a voltage drop in the external wiring due to increased current demand. In my case, the false low voltage resulted in an unanticipated premature RTL Failsafe event, and a minor crash. Test setup consists of a variable voltage lab power supply and several DVMs of known accuracy. Representative test result:  Calibrated voltage at 11.90V  HUD says 11.93V, system wide current is 340 mA When IMU heater fires, HUD says 11.41V, current is 410 mA After ~20 seconds, displayed voltage slowly increases to 11.92V, current 340 mA Above cycle repeats every 20-30 seconds  So an internal-to-FC ~70mA current bump is causing the voltage sag - I’m not sure of a work around yet. No .bin file, this was all bench work. I’m thinking that the power bus (or internal traces/wires) in the H743 might need a revisit…or power the heating element from a different source?",Is this specific to power via VBAT? Or can it be mitigated by using a redundant power supply via the Power Module connections?
132,Zealot H743 FC Internal Voltage Drop Due To IMU Heater,4,"All, Latest Copter, MP, H743 firmware, dead-cat 450 quad. I observed what I initially thought was an issue with the H743 voltage/current sensor:  It would not consistently report the calibrated voltage on the HUD or via telemetry.  The display was often 0.5V low, and would then slowly (over 5-8 seconds) return to within 0.03V of the calibrated voltage.  This ‘drop-then-return correctly’ cycle repeats every 15-20 seconds. The cycling and voltage drop are a result of the IMU heater requesting heat. To prove this, I set BRD_HEAT_TARG to -1, which kills the heating element.  After rebooting, the HUD reported voltage and actual voltage correctly remain within 0.03V of each other.  I determined that the voltage drop is ocurring within the FC itself, not caused by a voltage drop in the external wiring due to increased current demand. In my case, the false low voltage resulted in an unanticipated premature RTL Failsafe event, and a minor crash. Test setup consists of a variable voltage lab power supply and several DVMs of known accuracy. Representative test result:  Calibrated voltage at 11.90V  HUD says 11.93V, system wide current is 340 mA When IMU heater fires, HUD says 11.41V, current is 410 mA After ~20 seconds, displayed voltage slowly increases to 11.92V, current 340 mA Above cycle repeats every 20-30 seconds  So an internal-to-FC ~70mA current bump is causing the voltage sag - I’m not sure of a work around yet. No .bin file, this was all bench work. I’m thinking that the power bus (or internal traces/wires) in the H743 might need a revisit…or power the heating element from a different source?","Thanks for the responses, Jason and Yuri_Rage.  I have a bit more information.  The original voltage bounce was seen when running a 3S configuration.  Since then, I upgraded the drone to 4S, and at 15-16V the drop due to the IMU heater is < 0.1 V or so. I am presently powering the '743 exclusively from the 6 conductor harness from the power module.  At some point, Jason, I’ll try the alternate power connection.  But I can live with drop when running 4S.  FYI: * … I am getting another Qiotec for an old IRIS I picked up and am totally rebuilding as 4S with 2216 motors…"
133,How to assign a POT in the radio to a servo output,1,"My flight controller has 8 motor outputs. 4 of which are used by the QUAD motors and the other 4 motor outputs are not used. Is it possible to connect a servo and have that servo controlled by one of the potentiometers or sliders from the radio? If yes, can somebody share how to accomplish this? Might be a simple task but I’m not able to do it. Thanks for your help. *",It’s a very simple task. 1st determine what outputs are NOT on the same Timer groups as the motor outputs and choose one. Let’s say it’s M5. Configure a mix on your radio for whatever RC chan you want to use. Let’s say it’s Chan 8. Then set SERVO5_FUNCTION to RCIN8 (58). Perform a Radio Calibration in Mission Planner turning the Pot thru it’s range before using it. From the Hwedef file for that board you can use any one of 5-8 outputs.
133,How to assign a POT in the radio to a servo output,2,"My flight controller has 8 motor outputs. 4 of which are used by the QUAD motors and the other 4 motor outputs are not used. Is it possible to connect a servo and have that servo controlled by one of the potentiometers or sliders from the radio? If yes, can somebody share how to accomplish this? Might be a simple task but I’m not able to do it. Thanks for your help. *",Thanks. That was easy.
133,How to assign a POT in the radio to a servo output,3,"My flight controller has 8 motor outputs. 4 of which are used by the QUAD motors and the other 4 motor outputs are not used. Is it possible to connect a servo and have that servo controlled by one of the potentiometers or sliders from the radio? If yes, can somebody share how to accomplish this? Might be a simple task but I’m not able to do it. Thanks for your help. *",Sorry if this is a noob question but why not same timer group ?
133,How to assign a POT in the radio to a servo output,4,"My flight controller has 8 motor outputs. 4 of which are used by the QUAD motors and the other 4 motor outputs are not used. Is it possible to connect a servo and have that servo controlled by one of the potentiometers or sliders from the radio? If yes, can somebody share how to accomplish this? Might be a simple task but I’m not able to do it. Thanks for your help. *",That’s a good question and highlights that my reply was incomplete. I should have said “… NOT on the same timer groups as Dshot configured groups”. So  for asking!
134,Units for RSSI how ArduPilot reports it,1,"With the very kind help of * I’ve learned about built in functions in Mission Planner and user defined functions in MavExplorer. My goal was to plot distance to origin against RSSI - to examine the relationship. The expectation is that signal strength goes down as distance increases.  Being able to graph this relationship for different antenna helps in comparing the effectiveness of different antenna. The built in function for distance to origin in Mission Planner doesn’t include EKF1.PD - the vertical element of distance.  For radio signal strength, distance in three dimensions is necessary. I was able to plot this comparison in MavExplorer using a user defined function - but the result wasn’t what I expected. I expected RSSI to reduce as distance increased.  But the reverse is shown in the graph. I’m unschooled in radio engineering, but if the RSSI reported is a negative dB - then my plot makes sense - as “smaller” would mean “stronger signal.” Can someone please clarify how ArduPilot reports RSSI? As info - this RSSI comes from a HereLink V1.1 connection. *",ADDEMDUM: I went back and found a representative BIN file from a photo survey mission using a RFD900x SiK radio for telemetry.  Here the relationship between distance and RSSI is what I would expect. Here’s a map of this mission:
134,Units for RSSI how ArduPilot reports it,2,"With the very kind help of * I’ve learned about built in functions in Mission Planner and user defined functions in MavExplorer. My goal was to plot distance to origin against RSSI - to examine the relationship. The expectation is that signal strength goes down as distance increases.  Being able to graph this relationship for different antenna helps in comparing the effectiveness of different antenna. The built in function for distance to origin in Mission Planner doesn’t include EKF1.PD - the vertical element of distance.  For radio signal strength, distance in three dimensions is necessary. I was able to plot this comparison in MavExplorer using a user defined function - but the result wasn’t what I expected. I expected RSSI to reduce as distance increased.  But the reverse is shown in the graph. I’m unschooled in radio engineering, but if the RSSI reported is a negative dB - then my plot makes sense - as “smaller” would mean “stronger signal.” Can someone please clarify how ArduPilot reports RSSI? As info - this RSSI comes from a HereLink V1.1 connection. *","Received signal strength is just an indicator and it depends on the hardware capabilities. It can only be evaluated for the same hardware setup, different environmental conditions. For example some radio modules can handle -80dB but others are unable to process this kind of weak signal because of the preamp capabilities of the radio module so it’s impossible to evaluate with just using this indicator. Even when you use a different antenna for the same hardware, the RSSI will be totally different. RSSI based localization is still in focus of acedemic researches. Here is the source code how the autopilot handles with the RSSI data if provided by the radio modules."
134,Units for RSSI how ArduPilot reports it,3,"With the very kind help of * I’ve learned about built in functions in Mission Planner and user defined functions in MavExplorer. My goal was to plot distance to origin against RSSI - to examine the relationship. The expectation is that signal strength goes down as distance increases.  Being able to graph this relationship for different antenna helps in comparing the effectiveness of different antenna. The built in function for distance to origin in Mission Planner doesn’t include EKF1.PD - the vertical element of distance.  For radio signal strength, distance in three dimensions is necessary. I was able to plot this comparison in MavExplorer using a user defined function - but the result wasn’t what I expected. I expected RSSI to reduce as distance increased.  But the reverse is shown in the graph. I’m unschooled in radio engineering, but if the RSSI reported is a negative dB - then my plot makes sense - as “smaller” would mean “stronger signal.” Can someone please clarify how ArduPilot reports RSSI? As info - this RSSI comes from a HereLink V1.1 connection. *","Thanks * - I had previously read the article you cited - and many more over the years. Some of the articles I’ve read give the impression that there is a “defined” meaning of RSSI.  And some suggest that RSSI is what ever the radio wants it to be. It appears that ArduPilot simply takes the values from the radio and saves it in the log - there’s no “normalization” of the data. I’ve asked CubePilot to verify this - but it appears that the HereLink reports the absolute value of the dB signal strength.  So instead of RSSI of 0 to about -130, it reports 0 to 130.  Values closer to 0 indicate greater signal strength. The RSSI recorded from my RFD900x SiK radio example shows RSSI values from about 140 to 240 - where higher values mean stronger signal.  This is obviously very different than the values reported from HereLink. I seem to recall reading that RSSI isn’t a linear representation of signal strength. But perhaps that’s only true for one “brand” of RSSI. I recall reading some extensive discussion about this in BetaFlight regarding OSD display of RSSI.  This and among other reasons is why companies like Team Black Sheep use other signal strength indication such as LQ - Link quality. I may never have enough expertise to have my hands fully around all this - but now’s a good time to make some effort at it - and I appreciate your input."
134,Units for RSSI how ArduPilot reports it,4,"With the very kind help of * I’ve learned about built in functions in Mission Planner and user defined functions in MavExplorer. My goal was to plot distance to origin against RSSI - to examine the relationship. The expectation is that signal strength goes down as distance increases.  Being able to graph this relationship for different antenna helps in comparing the effectiveness of different antenna. The built in function for distance to origin in Mission Planner doesn’t include EKF1.PD - the vertical element of distance.  For radio signal strength, distance in three dimensions is necessary. I was able to plot this comparison in MavExplorer using a user defined function - but the result wasn’t what I expected. I expected RSSI to reduce as distance increased.  But the reverse is shown in the graph. I’m unschooled in radio engineering, but if the RSSI reported is a negative dB - then my plot makes sense - as “smaller” would mean “stronger signal.” Can someone please clarify how ArduPilot reports RSSI? As info - this RSSI comes from a HereLink V1.1 connection. *",This article has a helpful chart of RSSI expressed as dB and milliwatts. It also speaks to how in BetaFlight there is the option to present RSSI as a percentage - not recommended. I thought it was helpful.
135,CAN forwarding of custom device,0,"Hello! I want to know how it is possible to let the autopilot forward every CAN message of a device connected to it via MAVLink to my ground station. I have a custom device that sends messages that are conform to the CAN protocol. It is connected to the CAN_2 interface of my autopilot. CAN_P2 is set to use CAN_D1, and has the same Bitrate as my device. CAN_D1 is enabled and uses DroneCAN protocol. However using the command MAV_CMD_CAN_FORWARD (32000), it appears, that the autopilot either can’t see the messages, or it just doesn’t forward them, because the messages that my custom device sends do not appear, only those of built in components(like GPS). Is there any way to verify if ardupilot even receives those messages? Apart from that, the autopilot stops forwarding the messages after about 10seconds and I have to continously send the command in this interval in order for the autopilot to continue forwarding messages. Is this intended behavior or is this a bug?",
136,Reached Waypoints Too Fast,1,"In Auto Mode, Copter reached the waypoint and go to the next waypoint too fast. In real world, Copter not reach the watpoint yet (Error about 4-5 meters) Are there any parameters for tuning ? My Params WP_RADIUS = 200",For smooth en route navigation going directly through the gate is undesirable. If you need your copter to pass directly through a waypoint add an outgoing waypoint in a straight line with inbound and target waypoints (IIRC placing it too close will cause a copter to slow down) or add a delay after a waypoint so a copter stops at the waypoint.
137,Only 2 motor working fc skystar H743 hd,1,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",Trying this setting   All motor spin but spining full throttle trying mission planner motor test tab 5% throttle and test a motor all motor spin full throttle and motor hotting 
137,Only 2 motor working fc skystar H743 hd,2,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",Set MOT_PWM_TYPE to 6 SERVO_BLH_OTYPE to 0 (default) SERVO_BLH_MASK to 0 (default) SERVO_BLH_3DMASK to 0 (default) Then after connecting to Mission planner what does this message say in the Messages screen? 
137,Only 2 motor working fc skystar H743 hd,3,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",I dont see tomorrow check and try your setting share results
137,Only 2 motor working fc skystar H743 hd,4,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",Bi-directional dshot support ?
137,Only 2 motor working fc skystar H743 hd,5,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ","You are using the Bdshot firmware? And, you should be using the latest Stable or beta version not the Dev version unless there is a compelling reason to do so."
137,Only 2 motor working fc skystar H743 hd,6,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",That doesn’t tell me anything. Why bother with Betaflight if you want to run Arducopter? Did you flash the Arducopter Bdshot version of firmware to the Skystar Board? It will show in the messages screen also. Post a screen capture (not a photo) of the messages screen after connection.
137,Only 2 motor working fc skystar H743 hd,7,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",I know I see article  what a saying
137,Only 2 motor working fc skystar H743 hd,8,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",There isn’t a bdshot version of this board - they are sending me one
137,Only 2 motor working fc skystar H743 hd,9,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ","OK, no Bi-directional Dshot and I see why you are using the -Dev version. Anyway from default you only need to set these 3 parameters for Standard Dshot: MOT_PWM_TYPE to 6 SERVO_BLH_AUTO to 1 SERVO_DSHOT_ESC to 1"
137,Only 2 motor working fc skystar H743 hd,10,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",Trying MOT_PWM_TYPE to 6 SERVO_BLH_OTYPE to 0 (default) SERVO_BLH_MASK to 0 (default) SERVO_BLH_3DMASK to 0 (default) Same issue
137,Only 2 motor working fc skystar H743 hd,11,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ","Right because Chan 1,2 and 9 are configured for Neopixel not motor outputs. I suppose because those are all on Timer1. You could use Outputs 3,4,5&6 SERVO_BLH_MASK to 252 SERVO_BLH_OTYPE to 6 I wonder if you can simply disable Neopixel by setting NTF_LED_TYPES to 0. Might try that 1st."
137,Only 2 motor working fc skystar H743 hd,12,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",Change the function on SERVO9 to -1
137,Only 2 motor working fc skystar H743 hd,13,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ","For future reference is that because 1,2 and 9 share the same timer?"
137,Only 2 motor working fc skystar H743 hd,14,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",Yes. 1&2 are using complimentary channels so if I do a bdshot version I will fix this (bdshot can’t use complimentary channels)
137,Only 2 motor working fc skystar H743 hd,15,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",Changes MOT_PWM_TYPE to 6 NTF_LED_TYPES to 0 SERVO9 to -1 All motor test work fine 
137,Only 2 motor working fc skystar H743 hd,16,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",* does somebody have pwm output map and uart map information for this board please?
137,Only 2 motor working fc skystar H743 hd,17,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",*
137,Only 2 motor working fc skystar H743 hd,18,"Recently buy new fc SkyStars H7 HD Dual Gyro + KM60 BLHeli_32 ESC 30×30 Stack Try install arducopter firmware latest 	arducopter_with_bl.hex APMVERSION: ArduCopter V4.3.0-dev All setup done try to motor test but only 2 motor work 3,4 4 motor test in betaflight all work perfect  * * * * * * param list.param  (19.4 KB)         ",Thank you very much. I really appreciate what you gave to me now. Regards.
138,Distance from takeoff point in dataflash logs,1,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!",The EKF3 tracks the position relative to home in North and East values.  With math you’d be able to figure out the total distance from home with those. XKF1.PN XKF1.PE
138,Distance from takeoff point in dataflash logs,2,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!",Nice trick man! Thanks for the tip!
138,Distance from takeoff point in dataflash logs,3,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!","Allister - yes - trigonometry is our friend! To do this I’d have to export the data values - and process them outside Mission Planner - unless there are more tricks I haven’t learned…  I haven’t had the pleasure of exporting data series out of BIN files yet. I had noticed the North and East values - and wondered why they were reported.  I’m guessing it’s just easy to compare the longitude and latitude of each recorded point on the flight path with longitude and latitude of the home point. While it would take some processing power to compute distance real time, having it available via MavLink would be a real advantage on the ground control station.  Distance from home is pretty ubiquitous - everything from DJI to Betaflight has it."
138,Distance from takeoff point in dataflash logs,4,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!","Easier ways: If you’re using Mission Planner the math is done for you already in the MavGraphs. Bulletin/Distance from EKF Origin MavGraph Real time: If you’re using Yaapu Telemetry, it’s displayed right on the screen of your radio.  Mission Planner and QGC will also display it on their flight maps."
138,Distance from takeoff point in dataflash logs,5,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!","By any chance did you mean MavExplorer, not Mission Planner? I had to dig around to find a reference to MavGraph. Seems it’s the ability for MavExplorer to graph data following user requested elements. * There are quite a few dataflash log parameters that refer to the “origin” - I’m guessing these might be the one’s I might use: * Once I figured out the case sensitivity, it was easy enough to make a graph: * Nice - I’ve always wondered where some of the non-standard MavExplorer graphs came from. OK - now more to figure out. Assuming I’m graphing the right data elements - what the heck are the units being displayed? And then there’s creating a formula.  I understand python math functions can be used - but I’ve tried some basic arithmetical operations and got no results.  So computing the distance to the origin will still take more work here… Thanks * for pointing me the right direction.  Any more hints would be appreciated."
138,Distance from takeoff point in dataflash logs,6,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!",OK - maybe something like this: If I remember my geometry correctly (of course I had to look it up) the distance in 3 dimensions is the square root of the some of the square of the distances in each dimension. And it seems the units are meters - mission was flown at 60 meters - and that matches the EKF1.PD. So plotting the distance formula against RSSI made a nice graph - but it’s opposite what I would expect. I would expect a lower RSSI when the distance is greater. The graph shows a higher RSSI when the distance is greater. So either my distance formula is wrong - or the RSSI being reported is wrong. Any thoughts or ideas?
138,Distance from takeoff point in dataflash logs,7,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!","Yes, you can use MavProxy/MavExplorer.   But I did mean Mission Planner when I said it. The units are meters.  There’s also some graphs in that same list for distance vs RSSI."
138,Distance from takeoff point in dataflash logs,8,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!","Brilliant! I never know these function existed.  I’m going to have to spend a day studying them. I just noticed that this function in Mission Planner is only horizontal distance - it excludes the “down” element to compute the “slant” distance.  For looking into radio signal strength, I think this “slant” distance is necessary. I’m curious if there’s a way to add a user defined function. Here’s the distance vs rssi graph from Mission Planner: It still shows RSSI decreasing with distance. I’ll admit to being a rank amature in radio engineering - and from what I’ve read, RSSI can have several different meanings. If in this case RSSI is a negative dB - then a lower value means “better signal strength”. Any idea if this might be correct?"
138,Distance from takeoff point in dataflash logs,9,"Is there a way to easily show the distance from the takeoff point in the BIN dataflash logs?  Ideally, the “slant” distance - although I can make do with the horizontal distance. I’ve been plotting RSSI for new antenna - and I’d like to be able to relate it to the distance from the transmitter. I’ve seen parameters that contain the relative altitude above home - but not the distance.  I’m guessing it’s there - I just haven’t been able to find it yet. Thanks for your help!","Yeah, RSSI confusing and I’m going to not claim any expertise here.  It depends on the radio you’re using as to how it’s reported.  And is it reporting RSSI, or LQ or some other variation. I do most of my graphs in MavExplorer, including custom math.  In fact I use MavExplorer more than anything else now for logs."
139,The date and time of my log file is incorrect,1,"The date and time of my log file is incorrect. Where can I set it? Its stange that sometimes its correct, sometimes its not. In the screen shot below, the date is Jan. 1, 1970 @ 11AM. *  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4 ",Usually that means you don’t have sufficient GPS lock.  The time is taken from the GPS.
139,The date and time of my log file is incorrect,2,"The date and time of my log file is incorrect. Where can I set it? Its stange that sometimes its correct, sometimes its not. In the screen shot below, the date is Jan. 1, 1970 @ 11AM. *  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4 ",Activate fence. This will prevent you from arming without GPS lock and will guarantee correct date Inn the logs.
139,The date and time of my log file is incorrect,3,"The date and time of my log file is incorrect. Where can I set it? Its stange that sometimes its correct, sometimes its not. In the screen shot below, the date is Jan. 1, 1970 @ 11AM. *  Flight Controller - Kakute H7 V2 GPS - GPS & Compass M8Q-5883 – Matek Systems ESC - Holybro Tekko32 F6 60A running on BLHeli. Motors - Racestar AirA 2508 1200KV Firmware - V4.3.0 Beta 4 ",I have not explored about fence. I will read into it. Thanks.
140,Position pid control,1,"Hello! in the position control, there is just P controller. But I want I controller because of steady state error. How can I make my custom controller?",Have you checked all the PSC_* parameters?
140,Position pid control,2,"Hello! in the position control, there is just P controller. But I want I controller because of steady state error. How can I make my custom controller?","Thank you for your reply! I already checked it. There are just PSC_ACC parameter for P,I,D gain I just can find Position P gain no I or D gain"
140,Position pid control,3,"Hello! in the position control, there is just P controller. But I want I controller because of steady state error. How can I make my custom controller?",Also I’m in using through source code change
140,Position pid control,4,"Hello! in the position control, there is just P controller. But I want I controller because of steady state error. How can I make my custom controller?",*
140,Position pid control,5,"Hello! in the position control, there is just P controller. But I want I controller because of steady state error. How can I make my custom controller?","Hi *, So within the AC_PositionControl you should find that there are at least two layers.  The higher level Position controller but then also a 2nd level velocity controller.  In AP’s control design, we’ve generally found that the lower levels are the ones that need the I and D term.  The highest level normally is fine with just a P-term.  In fact, we’ve found that it doesn’t work well to have I-terms at multiple levels."
140,Position pid control,6,"Hello! in the position control, there is just P controller. But I want I controller because of steady state error. How can I make my custom controller?","using ADRC controller to replace PID, it could be get more perfermance without intergral I"
141,esp8266 + matek f405 + takeoff,1,"hi, I would like to ask if such an outcome is possible. We transmit a signal from one esp to the esp, which is located in the quadcopter and the quad is automatically armed and takes off, thanks in advance for the answer","Are you asking if you can use wifi telemetry links?  Yup. * If the quad is a new build then you’ll want to get it flying with an RC first to get it tuned and setup, but then running a mission from a wifi link is easy."
141,esp8266 + matek f405 + takeoff,2,"hi, I would like to ask if such an outcome is possible. We transmit a signal from one esp to the esp, which is located in the quadcopter and the quad is automatically armed and takes off, thanks in advance for the answer","My English is not very good, but I think you can understand me. I have done WIFI telemetry, I would like to send a signal to the copter with the esp board droga so that it takes off and sits down."
141,esp8266 + matek f405 + takeoff,3,"hi, I would like to ask if such an outcome is possible. We transmit a signal from one esp to the esp, which is located in the quadcopter and the quad is automatically armed and takes off, thanks in advance for the answer",What are you connecting the ESP8266 board to on the ground?  A laptop or tablet?  Then you can send the commands from the ground control software like QgroundControl or Mission Planner.
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,1,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)",* check the messages tab in mission planner. I am guessing that you switched from a version that was 4.1 or earlier and you need to set H_COL_ANG_MIN and H_COL_ANG_MAX. Check this wiki to learn how to set them. You can watch the set up video on that page as well. *
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,2,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","I fell for that one with my other TRex 500, going from v3.something to v4.1  But this time I’m going from v4.2.3 (which flew okay last week) to 4.3.0, and the MP prearm error message is ‘Helis motors checks failed’.  Plus I noticed several parameters had changed from previously, as mentioned above.  Those params that I noticed are fixed now because I retreived and wrote my last v4.2.3 param file to the FC, but the ‘motors checks failed’ issue still prevents arming."
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,3,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)",Set the LOG_DISARMED param to 1 and then reboot your controller. Let it perform its boot process and let it give you the prearm error. Then you can change that param back to 0 and reboot again and pull the log file and post it here.
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,4,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","* Don’t bother doing the log disarmed test I described in my previous post.  I wasn’t able to look at your param file earlier today as I was out.  Now I had a chance to look at your parameters. Here are the two parameters from your file that I was concerned about H_COL_ANG_MAX,90 H_COL_ANG_MIN,-90 These are the code defaults to force the user to change them.  So somehow it went back to the defaults.  Can you send me the param file that had when you were flying 4.2.3?"
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,5,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","Thanks for looking Bill.  Attached is the param file that I was using last weekend when I flew the heli in STAB, POS HOLD, and RTL modes without any issues.  That was my final vibe check before installing the heli back into its scale fuselage, which I did during the past week.  It was when I connected to MP to recalibrate accelerometer and compass (because of some metal and magnets  in the fuselage) that I got the message to upgrade to v4.3.0.  I did the upgrade and then did the recalibrations, which reported successful. Then I started getting Pre-arm error messages.  The first one was about Bat1 voltage too low, which made me look at the configuration and param pages and see that the battery cell count had changed from 6 to 4 and battery monitor parameters had changed.  Then I got another one about throttle, which made me look at the configuration page again and see that HeliRSC had changed from ch6 to ch8.  I changed those incorrect params back to what I remembered they were before, and rebooted to ensure they’d been saved, but am still left with the Heli motors checks error preventing arming.  Edit:  I then re-wrote the previous file, as below, but still get the Heli motors check error. * (20.3 KB)"
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,6,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","The parameters are definitely set in this parameter file. So I’m not sure why they weren’t set properly in the previous file that you posted with the upgrade after loading this file. manually go into the parameters and set those two parameters. Here is what you had in your file above for those parameters H_COL_ANG_MAX,10.4 H_COL_ANG_MIN,-3.1 Tell me if that makes the pre-arm message stop."
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,7,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","No, I changed the H_COL params back to where they used to be (why did they change?) but the messages still come.  First I got the Bat1 low voltage error and found that my cell count is set to 4 cells again instead of 6, and BATT_MONITOR is set to 4 instead of 0,  Then I got a check FS_THR_VALUE message and found it was set to 975 instead of 965.  Having done that I was able to arm using left stick bottom right, but not using my arm switch.  But then MP was showing that my modes switch was not switching from STAB to POS HOLD to RTL, so there’s obviously more of my configuration screwed up. So I then reloaded my ‘Hughes 500 board mounted horizontally …’ parameters file and wrote that to the board, and everything seems to be working except that MP shows my compass is way off – it’s registering about 170 degrees while the heli’s facing north.  I’ll recalibrate it and accelerometer, and see how it goes. Attached for your info is the current param file, which is obviously still not quite right for Battery cellcount in the Initial parameters setup screen is still showing 4-cell. * (20.6 KB) Edit:  Recalibrated accelerometer and compass, and I’ve just managed a 1-minute flight in STAB mode before it gets dark, to check the vibe levels   All seems well.  Thank you."
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,8,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)",* i have a Trex 700 that is currently on 4.2.3. I will upgrade it and see if I have any problems with parameters that change unexpectedly.
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,9,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","Checking further I’ve just noticed that my H_SW_H3_PHANG has gone back to 0, from the 10 degrees which I’d set it at.  H_SW_TYPE is correct, as are the servo positions."
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,10,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","‘retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.’ - this is where u went wrong.  u should have read params from the FC , after-the-upgrade, and compared the differences between the two, keeping as many of the new  ones as possible. …as what you’ve effectively done is throw-away any parameter migration/upgrade changes that the system did, and replaced them with ‘old’ params from your param-file-on-laptop."
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,11,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","I don’t understand what’s wrong with replacing the params with an old set that had been working well the week before.  In the case I’m discussing here, it appeared that the upgrade to 4.3.0 had actually changed some params back to default; for instance H_SW_H3_PHANG and H_COL_ANG_MAX and _MIN.  The evidence being that the heli flew the week before but then gave prearm error messages after the upgrade, which led to me tracking down the values that had changed. I’m familiar with the comparison function in MP, but I’m always confused about which column is the existing params from the heli and which is the set I’m comparing with, so I never use it."
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,12,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)",Compare! You should use it   each time when loading a new FW. Also don’t forget to safe the present FW to file. Doing the compare feature and load the  saved older FW you just replaced. Unclick at the bottom right all changes just to be save. The values from the previous (old) FW will now be on the right hand side. Even on the top you will read new values. But that means if you click one or two or more of your old values at the right hand side those 2 or more will than be new to your just loaded new FW. But you must write  them so the change takes affect. I do before a  quick screen shot with my phone so I see later just in case what I did change. I do it that way for years now. Most times I changed nothing. Good luck!
142,Prearm: Helis motors checks failed after upgrading to 4.3.0,13,"I’ve got a Matek H743MINI controller in my TRex 500 heli, and I had a couple of successful test flights last week with v4.2.3. Yesterday I connected it to MP prior to installing it into a scale (ish!) fuselage and got the message that v4.3.0 was available, so I installed it.  Today trying to have a test flight in the fuselage I get the error message ‘Helis motor checks failed’.  Prior to that I also had the error message ‘Battery 1 low voltage failsafe’ and, on checking my setup and parameters I saw that the battery cell-count had changed from 6 to 4, and BATT_LOW_VOLT and a couple of other BATT parameters had numbers in them, whereas I’d previously had them at ‘0’. Googling the Heli motors check error I see that it’s to do with my radio’s throttle channel PWM being incorrect, so I checked radio calibration and all channels are going from 982 to 2006 as before.  I then noticed that the channel assigned to HeliRSC had changed from 6 to 8, so I changed it back to 6 and disabled ch8. At that point I retrieved my previous param file from my laptop because I didn’t know what other parameters might have changed, and wrote it to the FC.  But I’m still getting the failed motors checks message. Attached is the param file that I’ve just written to the FC.  Any suggestions why I’m getting the prearm error, please? * (20.8 KB)","Thank you FRED_GOEDDERT.  I regularly save my param files as a matter of course, so I’ll use the compare function in future.  Thanks for clarifying how it works."
143,Countinuously increase in throttle,1,"we have a quad copter and we are using 4in1 esc (blheli_32 , F55 -55A)  and the connection between esc and pixhawk is through aux dshot 150 protocol , now the problem is that the motor’s speed is increasing countinuously after fixing the throttle value at 40% in terranes. so whats the reason behind this issue and how can we solve this problem?",What conditions are you testing? On the bench w/o props?
143,Countinuously increase in throttle,2,"we have a quad copter and we are using 4in1 esc (blheli_32 , F55 -55A)  and the connection between esc and pixhawk is through aux dshot 150 protocol , now the problem is that the motor’s speed is increasing countinuously after fixing the throttle value at 40% in terranes. so whats the reason behind this issue and how can we solve this problem?",On the bench and same result with prop and without prop.
143,Countinuously increase in throttle,3,"we have a quad copter and we are using 4in1 esc (blheli_32 , F55 -55A)  and the connection between esc and pixhawk is through aux dshot 150 protocol , now the problem is that the motor’s speed is increasing countinuously after fixing the throttle value at 40% in terranes. so whats the reason behind this issue and how can we solve this problem?","It’s normal, there is no problem. For this test use Mission Planners Motor Test function (w/o props of course) and test using various throttle levels. You cant test a closed loop control system if it doesn’t have sensor feedback which is exactly what happens when it’s sitting on the bench."
144,Loiter mode without GPS,1,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks","Not 100% sure, but I don’t think so… we need it on Loiter mode to estimate velocity and position, I think that even AltHold needs a GPS Receiver, is the other flight mode that supports this feature. But, maybe this could help you someway: *"
144,Loiter mode without GPS,2,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks",Can you confirm me if AltHold needs GPS for flying? Thanks
144,Loiter mode without GPS,3,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks","If I am not mistaken, AltHold uses GPS data to estimate velocities, but I didn’t find anything about it on Wiki, I heard about it in some other post on this forum. * can probably elucidate it for you."
144,Loiter mode without GPS,4,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks","AltHold does not need GPS with default EKF settings, possibly only if you change the altitude source."
144,Loiter mode without GPS,5,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks",So with barometer as alt source you do not need GPS for AltHold at all?
144,Loiter mode without GPS,6,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks",I believe that to be the case
144,Loiter mode without GPS,7,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks","Hi *, * is correct, AltHold does not require a GPS. The * and the “Pos Sensor” column indicates whether they need a GPS (or other position sensor). * does work in AltHold but it doesn’t work well because the vehicle can’t stop itself if it doesn’t know its speed and position.  The best that can be done is the vehicle leans away from obstacles and this leads to the vehicle bouncing away from obstacles which is OK but not great really. I think the project might go better if you put an * (like the *) and a downward facing lidar on it.  By the way, AP supports *."
144,Loiter mode without GPS,8,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks","Wow thats fantastic… Thanks for the info and your time mate. So as I see in your video, it is possible to use Loiter mode but, instead of using GPS as reference, using the optical flow sensor like hereflow right?? If I can do that, can i even use the obstacle avoidance with it? It would be fantastic. I dont understand whats the point on the Lidar. I see in your post that it is not recomended to use the integrated one in HereFlow. Why¿?"
144,Loiter mode without GPS,9,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks",The Hereflow integrated lidar sensor is very short-range(2m max) and doesn’t work well in various light conditions. For this reason * is suggesting to use a separate downward facing lidar (with a decent range) for altitude.
144,Loiter mode without GPS,10,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks","I agree with what * has written. Optical flow is only useful for position estimation I’m afraid.  It is not a full 3D SLAM camera or anything fancy like that.  It just uses the movement seen by the downward facing camera plus the lidar distance to estimate how quickly the vehicle is moving horizontally. … ah, maybe I’m misunderstanding what you’re suggesting… using Optical Flow in place of GPS will allow the vehicle to fly in Loiter mode and simple avoidance to work much better because the vehicle will know its horizontal speed so it can slow down and stop before it hits obstacles sensed by separate horizontal facing lidar."
144,Loiter mode without GPS,11,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks","Yes, that is exactly my suggestion, so i can use Obstacle Avoidance safely indoors in Loiter mode thanks to HereFlow. But there is yet one thing i dont understand. Why do i need to use another lidar with HereFlow? Do I need to connect that lidar to HereFlow? If you know any tutorial please let me know. My dron would be a S500 frame with PixHawk 2.4.8 (only avialable right now here in Spain), with a front face lidar for simple obstacle avoidance. And for Loiter mode, the HereFlow sensor (+down facing lidar?). What Ardupilot version should I use? Thanks for your time."
144,Loiter mode without GPS,12,"Hi, for my university project i need to make a drone that flights inside a greenhouse. I need to put a obstacle avoidance feature like this one * However, it says it works in loiter mode. Is there anyway can i use loiter mode without GPS? As I wont be installing any GPS module to my drone. Can I use * in a normal flightmode? Thanks","As * says, hereflow’s built in downward facing lidar doesn’t work very well so another separate downward facing lidar is required. An optical flow sensor must always be paired with a rangefinder (aka sonar, lidar, etc) pointing in the same direction.  Imagine looking out a car window, things that are very far away (like mountains) appear to move slowly across your field of view while things that are very close appear to move quickly.  You can imagine that for the autopilot’s estimation system to know how quickly it is moving it requires knowing both how quickly things are moving across the camera’s field of view (aka the flow sensor value) and the things’ distance."
145,Copter-4.3.0-beta4 released!,1,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,*
145,Copter-4.3.0-beta4 released!,2,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Quick question… Do you know if the following issue, “DO_CHANGE_SPEED not working if immediately after a TAKEOFF command #21080” Will make it into the release? Many thanks, Max"
145,Copter-4.3.0-beta4 released!,3,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Can somebody take a look at the Auto Tune functionality for the firmware of Kakute H7 flight controller. When I switch to Auto Tune, the copter does not enter Auto Tune and mission planner displays “LED”. Please refer to screen shot. Flight Controller: Kakute H7 V2 Firmware: Copter: version to 4.3.0-beta4 Motors: Racerstar AirA 2508 1200Kv ESC: Holybro Tekko32 F4 50A 4in1 ESC "
145,Copter-4.3.0-beta4 released!,4,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"I have also activated the GPS but even if the PPS LED of the GPS idicates that it has aquired a GPS Fix, the fligt controller does not. I have provided the wiring diagram and the parameter settings of the GPS unit according to Matek. Am I missing another parameter so that the flight controller will recognize the GPS Fix? Please help. "
145,Copter-4.3.0-beta4 released!,5,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Seems unlikely to me that MSP is what you want. What is the specific Matek model?
145,Copter-4.3.0-beta4 released!,6,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"I’ve encountered this before. There was two problems on that drone. First it had two channels dedicated to enable autotune, although I believe that is a separate error message so might not be your issue. The other thing was that I needed to increase the dead-zone of one of the stick inputs. If arducopter detects a stick input other than centered sticks, it won’t start autotune or paus it in the air. What you should do is to perform the radio calibration to ensure that arducopter knows where middle stick is. Second to do is to increase the dead-zone for that input. The simplest to do is to increase the dead-zone of all stick inputs by a little bit. Maybe increase with 10 PWM and try again."
145,Copter-4.3.0-beta4 released!,7,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,It’s 
145,Copter-4.3.0-beta4 released!,8,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Yeah I have several of those - you should just use regular setup, so protocol 5 and type 1"
145,Copter-4.3.0-beta4 released!,9,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Protocol Type = 5 GPS_TYPE = 1 Magic. It Works. Thank you very much. The documentation of Matek is incorrect. Can you help on the Auto Tune issue as well. Please.
145,Copter-4.3.0-beta4 released!,10,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"When I bought a flight controller, I did not know the use of the SD card so I did not care that time and decided to buy the Kakute H7 V2 flight controller whick does not have an SD card slot. When I was going deeper into the functionalities of Arducopter, I realized that without the SD card, I am not able to run LUA scripts. Is there another way to uplaod and run a LUA script without the SD Card. May be a dumb question but experts might have some ways to do it. If its not possible, are there H7 flight controllers with the same form factor in the market with an SD card?"
145,Copter-4.3.0-beta4 released!,11,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,It’s not possible right now. Matek H743 Slim.
145,Copter-4.3.0-beta4 released!,12,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"The reason I am after using LUA script is I have connected a WS2812 LED to the FC. The leds indicate if the emergency switch is ON/OFF, and the quad is ARMED/DISARMED. But the LED’s does not indicate when the LiPo low voltage setting is reached. So I am still relying on a timer to end my flight. It would be nice if those LED’s can indicate low voltage and critical alarms. Or am I missing a parameter to accomplish this? The only settings of the LED I found are  These are the LED’s I am using  This is how I connected them. Each LEd is on each arm of teh QUAD. I was hoping I can use the LUA script as well such that the LED change color depending on how the quad is banking left/right/back/front. But since my FC does not have an SD Card, then this is not possilbe. "
145,Copter-4.3.0-beta4 released!,13,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Hi *, I don’t think that the fix for the do-change-speed will make it into 4.3.0 (stable) but it will surely be fixed in a follow up minor release (e.g. 4.3.1 or 4.3.2)"
145,Copter-4.3.0-beta4 released!,14,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Wouldn’t the servo functions be 120 - 123?
145,Copter-4.3.0-beta4 released!,15,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Thanks for noticing that. I changed my parameter settings to  I guess this is the correct settings. But the LED’s still does not indicate when the LiPo low voltage setting is reached. The leds only indicate if the emergency switch is ON/OFF, and the quad is ARMED/DISARMED. I have rebooted the board after thischange. Do you have any other recommendation to make the LED’s indicate low battery voltage?"
145,Copter-4.3.0-beta4 released!,16,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Lua script? Otherwise, it would have to be a function of AP_Notify"
145,Copter-4.3.0-beta4 released!,17,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,The Kakute H7 flight controller does not have an SD card so I am not able to run LUA Script. I tried to find the parameter AP_Notify but it does not exist in the build of this flight controller. Does that mean that there is no support on low voltage alarm on the LED of this flight controller?
145,Copter-4.3.0-beta4 released!,18,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,If the external LEDs are replicating what the build in LED would do (and that should be the case) then the colour will change to yellow when there is a battery failsafe. Have you got a complete param file?
145,Copter-4.3.0-beta4 released!,19,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"I guess I have set all the parameters. Here’s my settings for you to check  With those settings, the LED’s does not change to yellow when the battery failsafe (Low or Critical) voltage is reached . I’m pretty sure I’m missing somehting but I cannot figure it out. Any help will be appreciated. Here’s the compelte parameter file * (20.0 KB)"
145,Copter-4.3.0-beta4 released!,20,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Have you confirmed that battery voltage monitoring is working? EDIT: I didnt ask for a .bin log because you dont have an SDCARD if I am correct So you’d need to see battery voltage reading correctly on the screen while connected to MissionPlanner via USB cable
145,Copter-4.3.0-beta4 released!,21,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Yes. And to do the test, I set the BATT_LOW_VOLT = 22.2  and the BATT_FS_LOW = 1 which is land. Hover the copter until the battery voltage dropped to 22.2. And yes after 10 seconds, the copter landed. So the battery monitoring is working as expected. It’s only the LED indicator that does not indicate when the battery voltage drops below the threshold of 22.2V. I can also see the battery voltage in Mission Planner. This FC does not have an SD card but it can store log files. I’m attaching one here if it will help. * (777.7 KB) Here’s the battery voltage from the Log.  *"
145,Copter-4.3.0-beta4 released!,22,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Yes, I couldnt see anything really wrong. I’ll think about it more, try to rig up the LEDs on another aircraft here maybe."
145,Copter-4.3.0-beta4 released!,23,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Thanks Shawn. I am really scratching my head on this. I think I’ve set all the required parameters. I hope you can find an answer to this issue.
145,Copter-4.3.0-beta4 released!,24,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Does the LED Outputs needs to be set here. I tried to put a tick on Servos 5-8 but it did not help. 
145,Copter-4.3.0-beta4 released!,25,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,I dont think so - are the LED strips working like a normal flight controller integrated LED? (except for the voltage) *
145,Copter-4.3.0-beta4 released!,26,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Yes, the LED’s indicates when the emergency switch is ON/OFF and when the motors are Armed/Disarmed. Its the other indicators like low voltage, GPS Lock etc that does not work."
145,Copter-4.3.0-beta4 released!,27,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Can somebody confirm if Copter-4.3.0-beta4 release supports a Lidar configured to measure vertical distance. I installed one and I can see the vertical distance in mission planner but when I switch to Alt-Hold, the copter does not climb when I put my palm below the sensor. Here’s a video of the lidar bench test. The hieght measured by the lidar is the yellow font at the bottom left of Mission Planner."
145,Copter-4.3.0-beta4 released!,28,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Hi *, I’m pretty sure that suface tracking still works fine in Copter-4.3.0.  If possible could you provide an onboard log with the problem?  I tried to look at the video but it’s just not providing as much detail as an onboard log would."
145,Copter-4.3.0-beta4 released!,29,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Hi @ Macky Attached with are the Log and my parameter settings uploaded in Google drive because the log size has exceeded the allowable size of this site. Log * My Parameter settings * I think this is the log that shows the desired altitude is not tracking with the rangefinder altitude. Or did I interpret it incorrect? Looks like the Lidar is telling the controller that this is my desired altitude but the actual altitude of the controller is erratic (up/down).  This log shows that the controller is tracking with the Barometer and not the Lidar. Or am I expecting too much? What the WIKI say is if the vertical distance is within the Lidar range, it should use the Lidar, otherwise it will use the BARO.  Thanks again for your assistance. Regards, Carl"
145,Copter-4.3.0-beta4 released!,30,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,I think I found the problem. I have set MOT_HOVER_LEARN = 2 and it has determined that the MOT_THST_HOVER = 0.3 which is far from ThO. I decided to turn off MOT_HOVER_LEARN and set MOT_THST_HOVER = 0.2. This time Alt-Hold is better. But I am not able to set MOT_THST_HOVER lower than 0.2 to align with ThO. Is there a way to set MOT_THST_HOVER lower than 0.2 to align it with ThO? 
145,Copter-4.3.0-beta4 released!,31,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Please ignore this error. I found what is the root cause. The message that is suppose to be displayed is Mode change to AUTOTUNE failed: initialisation failed. But it was broken down into two lines and only the second line was displayed in the HUD which meslead me thinking that the HUD is prompting me something about the LED. I think the request must be: Can you fix the display of message to the HUD so that it shows everything and not only a portion of the message. Quite very confusing.
145,Copter-4.3.0-beta4 released!,32,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"OK, so I think you’ve resolved the issues you were seeing but a few extra points in any case:  the, “Mode change to AUTOTUNE failed: initialisation failed” has been shortened in “latest” so we can backport this to 4.3.1 (the next point release).  Sorry about the confusion. When looking at the CTUN logs, the “SAlt” (Sonar Alt) and DSAlt (Desired Sonar Alt) are the ones to look at. *  "
145,Copter-4.3.0-beta4 released!,33,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Thanks Mackay. That message regarding the autotune initialisation failed got me for how many days. I have an operational question if you may. When I plug in the battery, It takes too much time to wait for the motor to Arm. So I thougth it might be the GPS so I went and untick it in the ARMING_CHECK parameter. But it did not really solve the problem. Is there a way to vew all the checks that the flight controller is doing before allowing the motors to Arm? I found the following Arming Checks in trhe WIKI:   Radio calibration has been done. Accelerometer calibration has been done Whole bunch of Compass checks to make sure that the compass is healthy. It also checks that the offsets are not too large (Should be in the range of -50 to -150). Checks that compass calibration is done. Or you turn compass learning on (Not recommended) Checks that the magnetic field is the appropriate size (APM2 should be about 330 and APM1 should be about 530) Checks that the barometer is healthy If GEO Fence is enables, checks that the is has a GPS locked. Checks that the board voltage is between 4.5 to 5.8V  The bold once can be easily checked. The rest, I don’t know where to look. Can you point out how to investyigate those? When GPS is included in teh ARMING_CHECK, what do we need to look at. I read somewhere that having a 3DFix and the number of SATS is not enough. What is the value of HDOP so that the motors can be armed? Are there other GPS parameters being validated? Regards, Carlou"
145,Copter-4.3.0-beta4 released!,34,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"I suspect you’re right that it is the GPS, or more precisely it is taking time for the EKF to calculate the vehicle’s position.  This can take time if the position from the GPS is not very accurate for some reason (perhaps there is radio equipment on the drone that is producing EMI in the 1.5GHz range?) or the values from the accelerometer, gyro or barometer are moving around too much.  This can be because of a bad accelerometer calibration or perhaps the board needs to heat up.  Also be careful not to move the drone while it is doing the gyro calibration – you should see the LEDs flashing red-green-blue. In general I don’t think that turning off arming checks is a good idea and it probably won’t help.  There are a lot of arming checks but they’re also there for a reason.  Each one has been added normally after someone crashed their vehicle.  It’s best to know about any problems while the vehicle is on the ground.  Safety first! How long is it taking by the way?"
145,Copter-4.3.0-beta4 released!,35,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,"Hi @Macky, Its weekend today in Sydney and its time to go to the flying site and run AutoTune after figuring out all the problems. Wow after the AutoTune, the drone flies better. I should say that this is my first drone and I am starting to love it. Regarding the time it takes to arm the motor, it varies from 3 min to 10 mins. I know the other fliers are already piss waiting for me to finish so they can take their turn. Next week, I will read the WIKI about trying to mitigate those sources of EMI’s. Here’s one of my flight. Apology for the video quality.      The number of SATS detected and HDOP is very good in the area where we fly. And at the end when the battery failsafe triggrers, the return to launch is most of the time perfect or a meter away from the take off point. No complain about that. The Break flight mode is very nice as well. Next week, I may be trying missions. Again thanks a lot for your help. My regret that I did not by a flight controller with an SD Card so I can run LUA Scripts."
145,Copter-4.3.0-beta4 released!,36,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,The normal time it takes from battery plug in to all checks pass is 40 seconds. There is something wrong with your copter. Do not disable any arming checks. Fix the issues instead
145,Copter-4.3.0-beta4 released!,37,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Yes I want to fix the issue but I don’t know where to start. Any suggestions to look for the root cause would be appreciated.
145,Copter-4.3.0-beta4 released!,38,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Start your own thread with the latest .bin log and detailed description of the issue and details of your copter hardware.
145,Copter-4.3.0-beta4 released!,39,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!, that some new machine
145,Copter-4.3.0-beta4 released!,40,Copter-4.3.0-beta4 has been released for beta testing and can be installed using MP or QGC’s beta firmwares link or it can be downloaded directly from *. The changes vs -beta3 are in the * and copied below.  Scripting supports implementing AUX functions Bug fixes a) BMI085 accel scaling fixed b) Build with gcc 11.3 fixed (developer only) c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous e) NMEA GPS’s KSXT message parsing fixed (affected position accuracy) f) Scripting random number generator fix  We expect this to be the final beta before 4.3.0 becomes the stable release so all testing and feedback is very much appreciated!,Phone typing error fixed 
146,Copter weird behaviour,1,"Dear Team, I have made quadcopter with pixhawk 2.4.8 and the Frame size is 450, I have set the initial parameters and flew it. The log file 71 & video attached flew well without any oscillation. I try to fly it again in ten min gap observed that the copter started moving wihtout any input. Log file 78 and video attached for reference. Didnt have any clue what made it change the behaviour of the copter without applying any input on Pitch and Roll. Please advise *, * * (777.1 KB) * (628 KB)",Did you power cycle between two sortie? what was the mode you are flying in?
146,Copter weird behaviour,2,"Dear Team, I have made quadcopter with pixhawk 2.4.8 and the Frame size is 450, I have set the initial parameters and flew it. The log file 71 & video attached flew well without any oscillation. I try to fly it again in ten min gap observed that the copter started moving wihtout any input. Log file 78 and video attached for reference. Didnt have any clue what made it change the behaviour of the copter without applying any input on Pitch and Roll. Please advise *, * * (777.1 KB) * (628 KB)","I was flying it in Altitude hold mode. Power cycle - did you mean switch on and off ? If so. Yes. After the first flight Switched off the copter, and while try to Arm again got an error saying RC pitch/RC roll not neutral after some adjustment on trim button and reset trim button to neutral powered on again. Second time while arming it was moving to one direction without anypitch/roll input. Thanks for your help"
146,Copter weird behaviour,3,"Dear Team, I have made quadcopter with pixhawk 2.4.8 and the Frame size is 450, I have set the initial parameters and flew it. The log file 71 & video attached flew well without any oscillation. I try to fly it again in ten min gap observed that the copter started moving wihtout any input. Log file 78 and video attached for reference. Didnt have any clue what made it change the behaviour of the copter without applying any input on Pitch and Roll. Please advise *, * * (777.1 KB) * (628 KB)","It will drift in pitch and roll axes in althold mode,  try flying in Pos hold and if you still find the same issue, do a Accels calibration, try doing RC calibration before next flight."
146,Copter weird behaviour,4,"Dear Team, I have made quadcopter with pixhawk 2.4.8 and the Frame size is 450, I have set the initial parameters and flew it. The log file 71 & video attached flew well without any oscillation. I try to fly it again in ten min gap observed that the copter started moving wihtout any input. Log file 78 and video attached for reference. Didnt have any clue what made it change the behaviour of the copter without applying any input on Pitch and Roll. Please advise *, * * (777.1 KB) * (628 KB)","Hi, Thanks for the reply. But if you see the 00071 log and video in Altitude hold mode it didnt drift except small movement due to wind. However for 00078 it starts drifting without any RC input"
146,Copter weird behaviour,5,"Dear Team, I have made quadcopter with pixhawk 2.4.8 and the Frame size is 450, I have set the initial parameters and flew it. The log file 71 & video attached flew well without any oscillation. I try to fly it again in ten min gap observed that the copter started moving wihtout any input. Log file 78 and video attached for reference. Didnt have any clue what made it change the behaviour of the copter without applying any input on Pitch and Roll. Please advise *, * * (777.1 KB) * (628 KB)","If you scroll down the list of improvements in the new copter 4.3.0 firmware, there is a listed bug fix that causes unstable flight if you land than fly again. It was some parameter that didn’t reset on landing as it should. First I would recommend you load the latest 4.3.0 firmware to your copter."
146,Copter weird behaviour,6,"Dear Team, I have made quadcopter with pixhawk 2.4.8 and the Frame size is 450, I have set the initial parameters and flew it. The log file 71 & video attached flew well without any oscillation. I try to fly it again in ten min gap observed that the copter started moving wihtout any input. Log file 78 and video attached for reference. Didnt have any clue what made it change the behaviour of the copter without applying any input on Pitch and Roll. Please advise *, * * (777.1 KB) * (628 KB)","Hi Axel, The firmware version is 4.3 only. If you see the log the motor copter doesnt get armed/disarmed unless the motors interlock are enabled. After arming I had to disable for lifting else the copter gets disarmed in few seconds. So I never had a chance to manually disarm the copter it gets automatically disarmed when I disable to interlock. Is this could be a reason for some paramters not been able to reset ?? Please advise."
146,Copter weird behaviour,7,"Dear Team, I have made quadcopter with pixhawk 2.4.8 and the Frame size is 450, I have set the initial parameters and flew it. The log file 71 & video attached flew well without any oscillation. I try to fly it again in ten min gap observed that the copter started moving wihtout any input. Log file 78 and video attached for reference. Didnt have any clue what made it change the behaviour of the copter without applying any input on Pitch and Roll. Please advise *, * * (777.1 KB) * (628 KB)","You have some noise in your rate controler and the desired rate vs actual is also off. You have some variation in the pitch and roll desired angle vs actual. This is in both logs so you aircraft probably needs some tuning. Regarding the issue that you asked about, I didn’t find anything that could result in that. I’m no the most experienced arducopter user so someone with more knowledge might find a reason. Your vibrations looks good so the only thing to do in order to improve your aircrafts performance would be tuning and noise reduction. The nosie reduction is a bid on the advanced side though since you would be playing with the rate filters. Did you reboot/unplug the battery between each flight?"
147,ArduCopter NOOB,1,"Hello Everyone, I will freely admit that I am a noob, both when it comes to drones, electronics, programming and ArduCopter. Though I am a mechanical engineer, 3d modeler/printer, and machinist. What I am wanting to build is basically a DIY version of a camera drone with some basic functionality such as: GPS return to home, position hold (via some combination of GPS, barometer, and/or optical flow), gimbal control and camera control (start/stop video recording, take a picture, zoom, and transmitting back some kind of low quality video feed so that they camera can be aimed by the pilot). I understand that trying to do all of this at once is probably a bad idea, and that starting with the basics is the path forward, but what I am wondering is if this is a good place to seek help, or more geared for those people who have a clue to what they are doing to begin with and THEN run into a specific problem. Lee","Hi Lee You are in the right place. Arducopter is complex and it’s important to stick to the setup and tuning instructions. Start simple, get something flying, then later start adding the cameras and doing trickier things. A stiff frame is a good frame. You’ll see a lot of carbon fibre. 3D printed plastic or even properly moulded commercial plastic frames (arms in particular) can have problems. Start by choosing a flight controller and GPS unit, and some sort of frame with a bit of scope for additions. There are some kits that bundle together a frame and motors, sometimes even the flight controller too. Cheap stuff from china is rarely much good and usually outdated. It’s important to go over the documentation. If you run into issues you’ll get asked for an onboard log (or .bin log file). Feel free to yell out if you want more specifics."
147,ArduCopter NOOB,2,"Hello Everyone, I will freely admit that I am a noob, both when it comes to drones, electronics, programming and ArduCopter. Though I am a mechanical engineer, 3d modeler/printer, and machinist. What I am wanting to build is basically a DIY version of a camera drone with some basic functionality such as: GPS return to home, position hold (via some combination of GPS, barometer, and/or optical flow), gimbal control and camera control (start/stop video recording, take a picture, zoom, and transmitting back some kind of low quality video feed so that they camera can be aimed by the pilot). I understand that trying to do all of this at once is probably a bad idea, and that starting with the basics is the path forward, but what I am wondering is if this is a good place to seek help, or more geared for those people who have a clue to what they are doing to begin with and THEN run into a specific problem. Lee","Thanks for getting back to me! I am considering a kit that comes with an Arducopter compatible controller, from Holybro: * Think this would be a good starting point, for the price they are asking? If there’s a better one out there, im all ears "
147,ArduCopter NOOB,3,"Hello Everyone, I will freely admit that I am a noob, both when it comes to drones, electronics, programming and ArduCopter. Though I am a mechanical engineer, 3d modeler/printer, and machinist. What I am wanting to build is basically a DIY version of a camera drone with some basic functionality such as: GPS return to home, position hold (via some combination of GPS, barometer, and/or optical flow), gimbal control and camera control (start/stop video recording, take a picture, zoom, and transmitting back some kind of low quality video feed so that they camera can be aimed by the pilot). I understand that trying to do all of this at once is probably a bad idea, and that starting with the basics is the path forward, but what I am wondering is if this is a good place to seek help, or more geared for those people who have a clue to what they are doing to begin with and THEN run into a specific problem. Lee","The X500V2 frame is good. I’m pleased with the airframe and it’s flight characteristics.   I haven’t used their motor kit, as my local vendor made a kit for me with different motors, props and ESCs. The EDU-450 is also a good kit, but having built both now I’d say I prefer the X500V2."
147,ArduCopter NOOB,4,"Hello Everyone, I will freely admit that I am a noob, both when it comes to drones, electronics, programming and ArduCopter. Though I am a mechanical engineer, 3d modeler/printer, and machinist. What I am wanting to build is basically a DIY version of a camera drone with some basic functionality such as: GPS return to home, position hold (via some combination of GPS, barometer, and/or optical flow), gimbal control and camera control (start/stop video recording, take a picture, zoom, and transmitting back some kind of low quality video feed so that they camera can be aimed by the pilot). I understand that trying to do all of this at once is probably a bad idea, and that starting with the basics is the path forward, but what I am wondering is if this is a good place to seek help, or more geared for those people who have a clue to what they are doing to begin with and THEN run into a specific problem. Lee","So with this controller, the Pixhawk 6C, does that leave me the provision to later add a gimbal, and a remote controlled camera on said gimbal?"
147,ArduCopter NOOB,5,"Hello Everyone, I will freely admit that I am a noob, both when it comes to drones, electronics, programming and ArduCopter. Though I am a mechanical engineer, 3d modeler/printer, and machinist. What I am wanting to build is basically a DIY version of a camera drone with some basic functionality such as: GPS return to home, position hold (via some combination of GPS, barometer, and/or optical flow), gimbal control and camera control (start/stop video recording, take a picture, zoom, and transmitting back some kind of low quality video feed so that they camera can be aimed by the pilot). I understand that trying to do all of this at once is probably a bad idea, and that starting with the basics is the path forward, but what I am wondering is if this is a good place to seek help, or more geared for those people who have a clue to what they are doing to begin with and THEN run into a specific problem. Lee",cant go wrong with that. you can mount cameras and such easily and tuning parameters for x500v2 are available as a preset from Mission Planner (someone correct me if im wrong). really cant get easier than that and you will get an excellent drone. just make sure the payload requirements are such that the max thrust is 2x (ideally) the weight. any lower and you risk losing stability.
148,Implementation of AIS Future on Copter with ADS-B,1,"Hello, I am using arducopter on UAV drone that already have an ADS-B receiver. I would like to know if it is possibile to use the * also for copter and not only for the rover FW, togheter with the ADS-B. Thanks in advance."," According to the page you sent, yes…         "
148,Implementation of AIS Future on Copter with ADS-B,2,"Hello, I am using arducopter on UAV drone that already have an ADS-B receiver. I would like to know if it is possibile to use the * also for copter and not only for the rover FW, togheter with the ADS-B. Thanks in advance.","Thanks for the reply * , yes actually it seems possibile. Anyone who did it? [image] Actually I have a different problem,  that I have detailed better in another topic: * Thanks again for the support"
149,Finding the root cause of EKF3 lane switch due to yaw innovations,1,"Flying one of my standard test missions today, my copter got an EKF3 lane switch. * The copter continued the mission successfully - and I repeated it again right after this mission concluded - no further problems. I would like to see how much I can learn about the cause of this lane switch. - to see if there’s anything I can do to prevent it’s reoccurrence. I first looked at MavExplorer  EKF3/Normalised Innovations and found that there was a spike in XF4(x).SV at exactly the time of the lane switch:  14:38:14.632 * Using Mission Planner I found that all three EKF’s had a spike in SV at the time of the lane switch. * From here I need some guidance. Since all three EKF’s had the same spike in SV, does that mean that the lane switch accomplished nothing - the firmware simply tried a different lane to see if another lane was OK? (If so - I suppose no lane switch was necessary - but probably good to do anyway.) I’m trying to understand if any of this points to a likely hardware of software problem.  Do innovations on all three EKF’s generally point to software or hardware issues? If it’s hardware - I’ll try to fix it by repair or replacement.  If it’s software, perhaps the DEVs would like to take a look at it. I’d appreciate any advice or input on next steps I can take. Thanks you! *",ADDENDUM Since I repeated the mission directly after the one with the lane switch - you can see the effect by comparing the two flight path maps. The lane switch occurs as the copter approaches waypoint 20.  This is the flight path on the following flight with no lane switch. 
149,Finding the root cause of EKF3 lane switch due to yaw innovations,2,"Flying one of my standard test missions today, my copter got an EKF3 lane switch. * The copter continued the mission successfully - and I repeated it again right after this mission concluded - no further problems. I would like to see how much I can learn about the cause of this lane switch. - to see if there’s anything I can do to prevent it’s reoccurrence. I first looked at MavExplorer  EKF3/Normalised Innovations and found that there was a spike in XF4(x).SV at exactly the time of the lane switch:  14:38:14.632 * Using Mission Planner I found that all three EKF’s had a spike in SV at the time of the lane switch. * From here I need some guidance. Since all three EKF’s had the same spike in SV, does that mean that the lane switch accomplished nothing - the firmware simply tried a different lane to see if another lane was OK? (If so - I suppose no lane switch was necessary - but probably good to do anyway.) I’m trying to understand if any of this points to a likely hardware of software problem.  Do innovations on all three EKF’s generally point to software or hardware issues? If it’s hardware - I’ll try to fix it by repair or replacement.  If it’s software, perhaps the DEVs would like to take a look at it. I’d appreciate any advice or input on next steps I can take. Thanks you! *","Those paths look very good apart from that glitch. I couldnt see what caused it, though many others may be able to. I ran magfit over that log and your compass settings are pretty close, you could adjust them to these if you want to be a bit more exact: COMPASS_OFS_X -91 COMPASS_OFS_Y -67 COMPASS_OFS_Z -7 COMPASS_DIA_X 1.033 COMPASS_DIA_Y 1.014 COMPASS_DIA_Z 0.897 COMPASS_ODI_X -0.029 COMPASS_ODI_Y 0.072 COMPASS_ODI_Z -0.129 COMPASS_MOT_X -1.215 COMPASS_MOT_Y -0.061 COMPASS_MOT_Z -1.027 COMPASS_SCALE 1.00 COMPASS_OFS2_X -226 COMPASS_OFS2_Y 30 COMPASS_OFS2_Z 254 COMPASS_DIA2_X 0.985 COMPASS_DIA2_Y 1.053 COMPASS_DIA2_Z 0.800 COMPASS_ODI2_X -0.013 COMPASS_ODI2_Y -0.013 COMPASS_ODI2_Z -0.016 COMPASS_MOT2_X -2.408 COMPASS_MOT2_Y 0.882 COMPASS_MOT2_Z 1.608 COMPASS_SCALE2 1.00 COMPASS_MOTCT 2 and unrelated but attitude control looks really good."
150,Very Peculiar and Erroneous Auto-Tune Behavior,1,I’ve been getting some very peculiar and erroneous behaviors with Auto-Tune on Copter 4.3. Some times one of PIDs axis are inconsistent. Some times a couple of parameters for an axis don’t get stored. (observed by comparing the MavLink message report or the Auto-Tune PIDs with what actually got stored in the parameters) Some times the twitching is a little bizarre - and autotune has to be aborted before all axis are complete. I don’t have detailed enough notes to totally reconstruct my tests - but I have been keeping records of PIDs from successive tunes. * The shaded values are the ones that make the most sense - and they one’s I’ll try again with tomorrow. I flew a test mission after completing the autotune in COLUMN-T - where the roll PIDs don’t make sense.  The MavExplorer attitude plot confirms that roll is wrong. * Until it’s sorted out - I urge caution.,Did you graph your vibes ? Usually vibrations ruin autotune runs. Happened to me last week.
150,Very Peculiar and Erroneous Auto-Tune Behavior,2,I’ve been getting some very peculiar and erroneous behaviors with Auto-Tune on Copter 4.3. Some times one of PIDs axis are inconsistent. Some times a couple of parameters for an axis don’t get stored. (observed by comparing the MavLink message report or the Auto-Tune PIDs with what actually got stored in the parameters) Some times the twitching is a little bizarre - and autotune has to be aborted before all axis are complete. I don’t have detailed enough notes to totally reconstruct my tests - but I have been keeping records of PIDs from successive tunes. * The shaded values are the ones that make the most sense - and they one’s I’ll try again with tomorrow. I flew a test mission after completing the autotune in COLUMN-T - where the roll PIDs don’t make sense.  The MavExplorer attitude plot confirms that roll is wrong. * Until it’s sorted out - I urge caution.,"No - but I can easily do it now. Here’s the vibe plot from an AutoTune were the pitch and roll twitches were OK, but then the yaw twitches became erratic and I hand to cancel the AutoTune sessions. And here’s the vibe plot from when roll twitches were OK, but I had to cancel autotune when the pitch twitches became erratic. The BIN files for these two flights are on dropbox:"
151,BiCopter no tuning tab,1,Running into an issue with a BiCopter I’m building and having a lot of frustration with it. I updated the firmware to 4.3.0 on an original cube black and now I don’t have the tuning tab anymore. IM also running into an issue where once I get the craft to hover speed pitch goes crazy as if the craft is trying to move it in the opposite direction needed. The bicopter I’m building is slightly different as I’m not moving the motors themselves but vanes under the motors. The few times I actually had it flying I know I needed to swap the vane control servos but after rebuilding after an ESC burnout I havnt been able to get this aircraft flying anymore. IM on a bit of a time crunch and need as much help as possible.,"I’ve never built a bicopter before but I have had similar issue with tabs in mission planner missing. My issue was that my frame class and type parameters were not set. Check those and see to that they are set correctly for your bicopter type. Maybe the firmware update messed with them and made them reset or something. Regarding behavior, a .bin log file is needed for anyone to be able to give support"
151,BiCopter no tuning tab,2,Running into an issue with a BiCopter I’m building and having a lot of frustration with it. I updated the firmware to 4.3.0 on an original cube black and now I don’t have the tuning tab anymore. IM also running into an issue where once I get the craft to hover speed pitch goes crazy as if the craft is trying to move it in the opposite direction needed. The bicopter I’m building is slightly different as I’m not moving the motors themselves but vanes under the motors. The few times I actually had it flying I know I needed to swap the vane control servos but after rebuilding after an ESC burnout I havnt been able to get this aircraft flying anymore. IM on a bit of a time crunch and need as much help as possible.,Not familiar with Bicopter either but are you using ArduCopter or ArduPlane?  If the later then Q_ENABLE to 1 (refresh) and Q_FRAME_CLASS to 10 and the QP Extended Tuning Page will light right up. Bicopter and Balance Bot are the Red Headed Stepchildren of Ardupilot 
151,BiCopter no tuning tab,3,Running into an issue with a BiCopter I’m building and having a lot of frustration with it. I updated the firmware to 4.3.0 on an original cube black and now I don’t have the tuning tab anymore. IM also running into an issue where once I get the craft to hover speed pitch goes crazy as if the craft is trying to move it in the opposite direction needed. The bicopter I’m building is slightly different as I’m not moving the motors themselves but vanes under the motors. The few times I actually had it flying I know I needed to swap the vane control servos but after rebuilding after an ESC burnout I havnt been able to get this aircraft flying anymore. IM on a bit of a time crunch and need as much help as possible.,"Using Arducopter since that had a bi-copter already part of the frame choice. I also noticed that if I choose different frames I get my tuning tab back, just weird in that I had it on older versions but I have no idea which version it was. As far as adding a .bin log how do I do that as its saying the file is to large. Needs to be under 4.4mb and this log is 4mb"
151,BiCopter no tuning tab,4,Running into an issue with a BiCopter I’m building and having a lot of frustration with it. I updated the firmware to 4.3.0 on an original cube black and now I don’t have the tuning tab anymore. IM also running into an issue where once I get the craft to hover speed pitch goes crazy as if the craft is trying to move it in the opposite direction needed. The bicopter I’m building is slightly different as I’m not moving the motors themselves but vanes under the motors. The few times I actually had it flying I know I needed to swap the vane control servos but after rebuilding after an ESC burnout I havnt been able to get this aircraft flying anymore. IM on a bit of a time crunch and need as much help as possible.,"* Put in cloud storage somewhere (dropbox, etc) and post a link to it."
152,Repeat Autotune consideration of state of battery charge,1,"Encouraged by help from several here I decided to do a repeated autotune - to see if I would achieve improvements on subsequent autotunes. I neglected to consider the impact of battery charge state. While I was pleased that I was able to complete two 3-axis autotunes on a single charge, I have the feeling that the second autotune is ineffective as it started with the battery on about a 75% charge. Below are the mavlink messages with the autotune results.  Does this suggest that my hunch is correct - and that I should do repeat autotunes all on fresh batteries? *","How was the flight behaviour with same 2 times autotune, can you feel any significant change?"
152,Repeat Autotune consideration of state of battery charge,2,"Encouraged by help from several here I decided to do a repeated autotune - to see if I would achieve improvements on subsequent autotunes. I neglected to consider the impact of battery charge state. While I was pleased that I was able to complete two 3-axis autotunes on a single charge, I have the feeling that the second autotune is ineffective as it started with the battery on about a 75% charge. Below are the mavlink messages with the autotune results.  Does this suggest that my hunch is correct - and that I should do repeat autotunes all on fresh batteries? *","I didn’t conduct a test. What I noticed was on the first autotune with the fresh battery, that PID’s were higher than the second autotune with the battery at about 75%. To be able to tell the difference I need to do two autotunes with fresh batteries."
152,Repeat Autotune consideration of state of battery charge,3,"Encouraged by help from several here I decided to do a repeated autotune - to see if I would achieve improvements on subsequent autotunes. I neglected to consider the impact of battery charge state. While I was pleased that I was able to complete two 3-axis autotunes on a single charge, I have the feeling that the second autotune is ineffective as it started with the battery on about a 75% charge. Below are the mavlink messages with the autotune results.  Does this suggest that my hunch is correct - and that I should do repeat autotunes all on fresh batteries? *","oh I see, ok now i understood"
152,Repeat Autotune consideration of state of battery charge,4,"Encouraged by help from several here I decided to do a repeated autotune - to see if I would achieve improvements on subsequent autotunes. I neglected to consider the impact of battery charge state. While I was pleased that I was able to complete two 3-axis autotunes on a single charge, I have the feeling that the second autotune is ineffective as it started with the battery on about a 75% charge. Below are the mavlink messages with the autotune results.  Does this suggest that my hunch is correct - and that I should do repeat autotunes all on fresh batteries? *",The Copter 4.3 auto-tune has generated some unexpected results for me. You might want to look at this too.
153,Does the frame of coaxial helicopter support now?,0,"I’m trying to make a K52 helicopter. Is the fuselage frame the same as that of ordinary helicopters? Or does it have a separate frame? From the perspective of control logic, I think there should be a collective pitch feedforward compensation action for K52 helicopter during yaw maneuver. Is this action available now? If not, can it be added to the follow-up?",
154,No mavlink message for ATC_RAT_YAW_FLTE at the end of autotune,0,It would be helpful if ATC_RAT_YAW_FLTE was reported in the mavlink message log.,
155,FFT comparison between Copter 4.2 and 4.3,1,I conducted my first flights using Copter 4.3 today. I compared the FFT results from my last flight on Copter 4.2 and my first on Copter 4.3. Note that the change (improvement) required Mission Planner to change the scale of the Y-axis. Copter 4.2  * Copter 4.3  *,Rescale both Gyro graphs to the same full scale (drag a window) and then compare them. It’s auto scaling to the rigid body mode at the low end which has little value. Drag the Y-axis scale to .01 on both.
155,FFT comparison between Copter 4.2 and 4.3,2,I conducted my first flights using Copter 4.3 today. I compared the FFT results from my last flight on Copter 4.2 and my first on Copter 4.3. Note that the change (improvement) required Mission Planner to change the scale of the Y-axis. Copter 4.2  * Copter 4.3  *,"I thought it might be interesting to have the original, un-attenuated plot for reference: Now the plots of Copter 4.2 and 4.3 FFT filter processing: The ACC0 plots show a whole order of magnitude lower amplitude of vibration.  As such - I couldn’t put make their Y-axis scales the same. I normalized the Y-axis scales for the GYRO plots. The results are interesting - and something I didn’t notice at first. While FFT does a wonderful job of filtering vibration detection, version 4.3 of copter (bottom graph) appears to let through more vibration than version 4.2 - and has two peaks. I’m wondering if this is just because Copter 4.3’s FFT improvements simply reports more accurately. I also thought it might be interesting to compare the processor load between Copter 4.2 and 4.3 - which of course entails a lot more than just the changes to FFT: Copter 4.2 load:  Copter 4.3 load: "
156,AP 4.3 PreArm: Internal errors 0x1000000 l:169 imu_reset,1,"Hi! I am using a cube orange with the latest 4.3 fw. I sometimes keep seeing this error while it has been sitting on the board with usb. Yesterday I saw it midflight also, i did not see any kind of filight behaviour changes. What could be the issue. I have only seen this with cube orange so far.","Hello all, I have also seen this a few times across different (Cube Orange) copters with varying hardware setups. Usually this error occurs after booting up and prior to arming. A reboot resolves the error but now it has also happened during flight exactly as the OP describes - also without any noticeable changes to flight behaviour. Firmware was 4.22 & 4.23. The error shows up in the flightlog as well when it happens during flight but there does not appear to be anything wrong as far as I can see… *"
157,CAN GPS issue (partly detected),1,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. I can see the compass in the GPS unit – on the “Compass” page I can see the device id, bus (CANUAV), address, device type, etc I am also able to calibrate the compass successfully. In the “DroneCAN/UAVCAN” page, running SLCAN on either CAN1 or CAN2 I do not see the GPS reporting in. I could do this in the past and did upgrade the software - not sure of the version though As soon as I power and connect the RC remote, I get the following error. GPS waiting for home Or Fence require position Home is programmed and shown on the map along with the correct location, heading and track info. The .bin file is at * Any help or advice would be appreciated","Good day,  did you set as GPS type the parameter to 9?? For fence just uncheck if you set it"
157,CAN GPS issue (partly detected),2,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. I can see the compass in the GPS unit – on the “Compass” page I can see the device id, bus (CANUAV), address, device type, etc I am also able to calibrate the compass successfully. In the “DroneCAN/UAVCAN” page, running SLCAN on either CAN1 or CAN2 I do not see the GPS reporting in. I could do this in the past and did upgrade the software - not sure of the version though As soon as I power and connect the RC remote, I get the following error. GPS waiting for home Or Fence require position Home is programmed and shown on the map along with the correct location, heading and track info. The .bin file is at * Any help or advice would be appreciated","Hi Yea, the following is configured… CAN_D1_PROTOCOL, 1 CAN_D2_PROTOCOL, 1 CAN_P1_DRIVER, 1 CAN_P2_DRIVER, 2 CAN-SLCAN-CPORT, 2 GPS_AUTO_CONFIG, 1 GPS_AUTO_SWITCH, 1 GPS_GNSS_MODE, 65 GPS_GNSS_MODE, 65 GPS_TYPE, 9 GPS_TYPE2, 9 AHRS_GPS_MINSATS, 6 NTF_LED_TYPES, 231 NTF_LED_OVERIDE, 0 LL"
157,CAN GPS issue (partly detected),3,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. I can see the compass in the GPS unit – on the “Compass” page I can see the device id, bus (CANUAV), address, device type, etc I am also able to calibrate the compass successfully. In the “DroneCAN/UAVCAN” page, running SLCAN on either CAN1 or CAN2 I do not see the GPS reporting in. I could do this in the past and did upgrade the software - not sure of the version though As soon as I power and connect the RC remote, I get the following error. GPS waiting for home Or Fence require position Home is programmed and shown on the map along with the correct location, heading and track info. The .bin file is at * Any help or advice would be appreciated",And FENCE is disabled
157,CAN GPS issue (partly detected),4,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. I can see the compass in the GPS unit – on the “Compass” page I can see the device id, bus (CANUAV), address, device type, etc I am also able to calibrate the compass successfully. In the “DroneCAN/UAVCAN” page, running SLCAN on either CAN1 or CAN2 I do not see the GPS reporting in. I could do this in the past and did upgrade the software - not sure of the version though As soon as I power and connect the RC remote, I get the following error. GPS waiting for home Or Fence require position Home is programmed and shown on the map along with the correct location, heading and track info. The .bin file is at * Any help or advice would be appreciated",Hi Any further thoughts on the GPS CAN issue?? LL
157,CAN GPS issue (partly detected),5,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. I can see the compass in the GPS unit – on the “Compass” page I can see the device id, bus (CANUAV), address, device type, etc I am also able to calibrate the compass successfully. In the “DroneCAN/UAVCAN” page, running SLCAN on either CAN1 or CAN2 I do not see the GPS reporting in. I could do this in the past and did upgrade the software - not sure of the version though As soon as I power and connect the RC remote, I get the following error. GPS waiting for home Or Fence require position Home is programmed and shown on the map along with the correct location, heading and track info. The .bin file is at * Any help or advice would be appreciated",i will do some test with your parameters but different modules… i will let you know asap
157,CAN GPS issue (partly detected),6,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. I can see the compass in the GPS unit – on the “Compass” page I can see the device id, bus (CANUAV), address, device type, etc I am also able to calibrate the compass successfully. In the “DroneCAN/UAVCAN” page, running SLCAN on either CAN1 or CAN2 I do not see the GPS reporting in. I could do this in the past and did upgrade the software - not sure of the version though As soon as I power and connect the RC remote, I get the following error. GPS waiting for home Or Fence require position Home is programmed and shown on the map along with the correct location, heading and track info. The .bin file is at * Any help or advice would be appreciated","Hello guys, I used a can splitter to connect dual here3 gps unit in a mini carrier board with cube orange as FC,  I too could seek the parameters of one of the GPS unit. What is difference btw CAN1 and CAN2? Is this the correct way of using CAN splitter to connect dual GPS in can 2 port"
157,CAN GPS issue (partly detected),7,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. I can see the compass in the GPS unit – on the “Compass” page I can see the device id, bus (CANUAV), address, device type, etc I am also able to calibrate the compass successfully. In the “DroneCAN/UAVCAN” page, running SLCAN on either CAN1 or CAN2 I do not see the GPS reporting in. I could do this in the past and did upgrade the software - not sure of the version though As soon as I power and connect the RC remote, I get the following error. GPS waiting for home Or Fence require position Home is programmed and shown on the map along with the correct location, heading and track info. The .bin file is at * Any help or advice would be appreciated",Try: GPS_AUTO_CONFIG = 2 Alternate GPS_AUTO_SWITCH = 0 and = 1. It some times doesn’t pickup the best gps Also why have you configured both GPS in the parameters and not just GPS2.?
157,CAN GPS issue (partly detected),8,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. I can see the compass in the GPS unit – on the “Compass” page I can see the device id, bus (CANUAV), address, device type, etc I am also able to calibrate the compass successfully. In the “DroneCAN/UAVCAN” page, running SLCAN on either CAN1 or CAN2 I do not see the GPS reporting in. I could do this in the past and did upgrade the software - not sure of the version though As soon as I power and connect the RC remote, I get the following error. GPS waiting for home Or Fence require position Home is programmed and shown on the map along with the correct location, heading and track info. The .bin file is at * Any help or advice would be appreciated",Why is CAN_P2_DRIVER set to 2?   as per the cubepilot it says 1 right?         
158,Kakute H7 V2 Question,1,"Hi, I apologize in advance if this is a stupid question.  But, there doesn’t appear to be a -bdshot version of the 4.3.0 binaries for the Kakute V2 the way there is for the V1 and I don’t understand the implications of this. Is the bidirectional dshot integrated into the KakuteH7v2 firmware or what am I missing? I’m using a Tekko32 F4 Metal ESC if that helps. Thank you.","* Yes, as per the Hwdef.dat file"
159,"In althold mode, the weight ratio of rangefinder data and imu data",1,"I use the ultrasonic module to set the height, if the terrain below changes, what is the change degree of the UAV, and what is the weight ratio of the ultrasonic data and imu data in the flight control code (does the UAV automatically increase the weight of the imu data when the terrain changes greatly?)","* Not exactly… in this specific scenario, the rangefinder data goes into a glitch protection logic that avoid the UAV making aggressive corrections in altitude, so these values with a bigger difference relative to the latest measure are not placed into the height controller."
160,How Main and Aux ports are implemented on non-Pixhawk boards,1,"I was reviewing the new boards added under 4.3.0. Looking at the non-Pixhawk boards, I wondered how Main and Aux ports are implemented. Looking at the Skystars RC H7 for example, it’s designed for easy connection to a 4-in-1 ESC.  But does that mean these motor ports are Aux ports - which ArduPilot requires for Dshot? If I had to guess, the motor pads on flight controllers such as these are defined in ArduPilot as Aux ports - and there aren’t any Main ports - just UARTS.  But I’d like to know more before I consider implementing such a board. Here’s a reference: *","They are directly FMU connected, yes. AUX is really a misnomer based on boards that have an IOMCU - the majority of boards do not have this and so all outputs are “main” and support dshot"
160,How Main and Aux ports are implemented on non-Pixhawk boards,2,"I was reviewing the new boards added under 4.3.0. Looking at the non-Pixhawk boards, I wondered how Main and Aux ports are implemented. Looking at the Skystars RC H7 for example, it’s designed for easy connection to a 4-in-1 ESC.  But does that mean these motor ports are Aux ports - which ArduPilot requires for Dshot? If I had to guess, the motor pads on flight controllers such as these are defined in ArduPilot as Aux ports - and there aren’t any Main ports - just UARTS.  But I’d like to know more before I consider implementing such a board. Here’s a reference: *","Thanks * - that’s helpful. Is an IOMCU required for the relay function? Also - since on the Cube you have to use Aux ports for Dshot - I’m wondering how flight controllers where all the ports are “main” manage to support Dshot. I seem to recall that on the Cube, “main” ports operate at 400Hz, which is one reason they’re unsuitable for servos.  (sketchy memories about this - I may be way off base here)  And I seem to recall that the Cube’s Aux ports default to 50Hz - and on that can be configured. I’ve learned that you don’t have to set the Cube’s main port frequency to use Dshot - perhaps because Dshot is digital instead of analog (pwm).  Or maybe it’s default is OK for Dshot. All this makes me wonder how all this is implemented on a non-pixhawk board’s motor pads."
160,How Main and Aux ports are implemented on non-Pixhawk boards,3,"I was reviewing the new boards added under 4.3.0. Looking at the non-Pixhawk boards, I wondered how Main and Aux ports are implemented. Looking at the Skystars RC H7 for example, it’s designed for easy connection to a 4-in-1 ESC.  But does that mean these motor ports are Aux ports - which ArduPilot requires for Dshot? If I had to guess, the motor pads on flight controllers such as these are defined in ArduPilot as Aux ports - and there aren’t any Main ports - just UARTS.  But I’d like to know more before I consider implementing such a board. Here’s a reference: *",*
160,How Main and Aux ports are implemented on non-Pixhawk boards,4,"I was reviewing the new boards added under 4.3.0. Looking at the non-Pixhawk boards, I wondered how Main and Aux ports are implemented. Looking at the Skystars RC H7 for example, it’s designed for easy connection to a 4-in-1 ESC.  But does that mean these motor ports are Aux ports - which ArduPilot requires for Dshot? If I had to guess, the motor pads on flight controllers such as these are defined in ArduPilot as Aux ports - and there aren’t any Main ports - just UARTS.  But I’d like to know more before I consider implementing such a board. Here’s a reference: *","Yes - no doubt my understanding of ports came from this document. As I read this, the issues appears to be if an IOMCU is present.  The name “main” and “aux” may not follow the convention on all boards - but the port capabilities in ArduPilot is determined by if they are IOMCU ports. Do I have this about right?"
160,How Main and Aux ports are implemented on non-Pixhawk boards,5,"I was reviewing the new boards added under 4.3.0. Looking at the non-Pixhawk boards, I wondered how Main and Aux ports are implemented. Looking at the Skystars RC H7 for example, it’s designed for easy connection to a 4-in-1 ESC.  But does that mean these motor ports are Aux ports - which ArduPilot requires for Dshot? If I had to guess, the motor pads on flight controllers such as these are defined in ArduPilot as Aux ports - and there aren’t any Main ports - just UARTS.  But I’d like to know more before I consider implementing such a board. Here’s a reference: *",The outputs on those boards could all be called AUX. IOMCU>Main FMU>AUX No IOMCU=All AUX It’s a clumsy description and a holdover from the days when those boards were not supported.
160,How Main and Aux ports are implemented on non-Pixhawk boards,6,"I was reviewing the new boards added under 4.3.0. Looking at the non-Pixhawk boards, I wondered how Main and Aux ports are implemented. Looking at the Skystars RC H7 for example, it’s designed for easy connection to a 4-in-1 ESC.  But does that mean these motor ports are Aux ports - which ArduPilot requires for Dshot? If I had to guess, the motor pads on flight controllers such as these are defined in ArduPilot as Aux ports - and there aren’t any Main ports - just UARTS.  But I’d like to know more before I consider implementing such a board. Here’s a reference: *","Thanks *  -  makes perfect sense. I’m guessing that if AUX ports can essentially do anything, the value added by the IOMCU is that it offloads processing from the MCU. If I’m right about that, perhaps today’s fast processors (i.e. F7, H7, etc.) really don’t need the support of an IOMCU.  My EDU-450 running Dshot isn’t using it at all. From my brief work with FPV and Betaflight, I learned that motor pads could be re-defined to be UARTs.  I had to do this once - but I can’t remember why now. So I’m guessing that the ArduPilot firmware may has the capability to define how the pads on a flight controller’s board may be used - or may have that capability when or if it’s implemented."
160,How Main and Aux ports are implemented on non-Pixhawk boards,7,"I was reviewing the new boards added under 4.3.0. Looking at the non-Pixhawk boards, I wondered how Main and Aux ports are implemented. Looking at the Skystars RC H7 for example, it’s designed for easy connection to a 4-in-1 ESC.  But does that mean these motor ports are Aux ports - which ArduPilot requires for Dshot? If I had to guess, the motor pads on flight controllers such as these are defined in ArduPilot as Aux ports - and there aren’t any Main ports - just UARTS.  But I’d like to know more before I consider implementing such a board. Here’s a reference: *",It’s supposed to be a failover. If the FMU stops responding then the IOMCU can do passthru (RC>PWM). I don’t see the usefulness for Copter/multirotor but perhaps someone could correct me there.
161,Gimbal POI feature,1,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","Yes, it is. Please use ArduCopter 4.3.0-beta3 for better results."
161,Gimbal POI feature,2,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","Thanks! Sounds promising  I’ ll check it out. There is another observation I’ve made using a pan gimbal with 4.2.3: Between the various modes (RCTargetting, GPS) there seems to be a different scaling in the pan movement. Is there also something to expect with 4.3?"
161,Gimbal POI feature,3,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks",4.3 ads a lot of features and fixes many bugs. You will have to try it for yourself.
161,Gimbal POI feature,4,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks",I’m testing with 4.3.0 beta4 and right now I’m missing yaw stabilisation. Seems there isn’t any stabilisation parameter as we had in the version before (MNTx_TILT/ROLL/YAW_STABILIZE). With tilt it just works. I’m using RC-targetting.
161,Gimbal POI feature,5,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks",* can you help @rst?
161,Gimbal POI feature,6,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","Hi, I’ve moved this discussion to the Copter-4.3 category. For yaw stabilization I think you’ll need to setup an auxiliary switch for “Mount Lock”.  So for example set RC9_OPTION to 165 (“Mount_Lock”) and then you’ll find that one position of the switch causes the gimbal to maintain its earth frame heading while the other position leaves it pointing in the same direction as the vehicle. If you could provide more details on the setup that would also help.  For example, which gimbal are you using?  Maybe provide an onboard log as well if possible…"
161,Gimbal POI feature,7,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks"," “Mount Lock” = 163 works. I’m using a self designed servo gimbal with yaw and tilt. 2 questions now:  when the gimbal is turned 90° the tilt servo should act as roll compensation, how could that work? (- when setting a POI via MP no reaction is seen at the gimbal.)seemed to be a user error Both issues were observed while the copter was still disarmed. "
161,Gimbal POI feature,8,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","here are now some observations from the flying field:  when in Auto Mode the Pan and Tilt correction works with POIs when setting a POI via MP and flying in Loiter the tilt doesn’t show a reaction when flying towards a POI with height=0 the flying behaviour in Loiter aud Auto changed, actions seems more aggressive after sending new waypoints there is an internal error reported which needed a restart to clear *  "
161,Gimbal POI feature,9,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","Hi *, Txs again for testing. Re “when the gimbal is turned 90° the tilt servo should act as roll compensation”, so this is only a 2-axis gimbal?  I don’t think it will do this but I also don’t think it would do this in previous versions of AP either (e.g. 4.2.x or earlier) although there was a 3-axis transformation that I removed because (as far as I could see) it could never be used without causing other problems. I think this is the first time you’re using AP’s gimbal (aka mount) controller right?  It’s helpful for me to know which issues (if any) are new to 4.3 because it could affect when 4.3 becomes the stable version. Re, “when setting a POI via MP and flying in Loiter the tilt doesn’t show a reaction when flying towards a POI with height=0”.  I just tested this and wasn’t able to reproduce the problem.  You’re using MP’s Data screen’s right-mouse-button menu’s “Point Camera Here” feature?  My guess is that “0” is being interpreted as the current altitude.  I think you’ll find if the vehicle climbs or descends the gimbal’s pitch is reacting. Re, “Loiter aned Auto” behaviour changed… if you mean the way the vehicle flies is different between the two modes then you’re absolutely right.  Loiter is a pilot controlled mode and allows more aggressive accelerations and decelerations while Auto mode is configured by default to use much lower maximum accelerations.  Auto can be made more aggressive by changing some WPNAV_xx parameters. Txs for the report on the internal error.  This is from the Position Controller and we should resolve this.  I think it can happen if you send two waypoints with exactly the same lat, lon and altitude."
161,Gimbal POI feature,10,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","I’m running a servo Pan-Tilt gimbal and had some hassle with unexpected behavior with previous AP versions  but I got it to work as roll compensation when the pan was at an angle. Don’t know about the accuracy but looked quite well. Yes, right mouse “Point camera here”. If “0” is current height would the values be relative? I would have expected +/-10 to be at +/-10m above/below takeoff level. But the dialog for entering the value could give some clarification  Anyway I could check that again the next days. I meant that copter tunes work different. With 4.2.3 and earlier the copter had a behavior without overshoot, but smooth behavior in pitch and roll. To me it seems that the copter breaks hard if the deflected stick is brought back by just a fraction. Also in Auto the copter is alternating acceleration and braking several times before reaching a waypoint. This wasn’t the case with the former version. Are there some changes in parameters(names), defaults which could cause these things? Thank U 2"
161,Gimbal POI feature,11,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks"," but I got it to work as roll compensation when the pan was at an angle  OK, to be clear.  Do you mean you have it working well in 4.3 now?  or it was working in 4.2 but it is not working in 4.3? There haven’t been any significant attitude or navigation controller changes between 4.2 and 4.3 so I don’t think they should fly differently in Loiter or Auto mode. Thanks again for testing 4.3 and providing feedback!"
161,Gimbal POI feature,12,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","Yes, it was working in versions < 4.3 Would be great to have it back again  I didn’t have a look at the logs so far but I’ll check if there is something visible."
161,Gimbal POI feature,13,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","Thanks for the clarification. OK, so for the pitch servo to be used to correct for the vehicle’s roll in some situations (e.g. when vehicle is rolled 90deg) I think we need to restore the more complex matrix calculation that I cut from the AP_Mount library.  The calculation was only used when the “yaw stabilization” parameter was set which would lead to the gimbal always moving in earth-frame (e.g. it would never move with the vehicle) which was not what most users wanted (I think).  … anyway, I think I can come up with a better than 4.2 version."
161,Gimbal POI feature,14,"Hi there, I’m looking for a gimbal feature with the following behaviour: Set a POI on the map where the camera should point to. If the spot is on the ground and the copter at a certain height the pitch of the gimbal should change while flying towards the spot and maintaining height. Is such a feature implemented in AP? Thanks","* thanks for your effort. Would it be possible if “yaw stabilization” is set active that the gimbal would look towards a POI if set in Auto mode or by right click “point camera here” in eath-frame and when switching “mount lock” move it with the vehicle? With the difference in attitude behaviour I couldn’t see a difference in PID parameters from now and then. But here are 2 flights in Auto, not the same path but still somehow comparable I would say. There is some significant difference in pitch and roll behaviour: around 20°  around 7°   But this was flown using 4.1.4. So could you tell if there have been changes in the control algorythms since then?"
162,Radio Calibration of AT9S Pro,1,"Hello y’all, I have a specific problem with my radio controller (i don’t know whether it is caused by the radio controller or not actually). I’m using Navio2 for the flight controller, AT9S Pro for the radio controller, and Mission Planner for the ground controller software. I bound the receiver to the transmitter accurately. I can see the radio inputs from the mission planner while changing the sticks from the radio controller. When I change the throttle stick from the radio controller, it actually changes exactly the throttle channel from the mission planner. It means that I don’t need to do RC_MAP from the mission planner. The problem is the sensitivities of the channels are not accurate. I mean when I push up the throttle stick to the highest point from the radio controller, I cannot see the highest point of the throttle in the mission planner. By the way, I also changed the trims from the radio controller it didn’t affect much. Did I miss something here? I would be appreciated it if you helped me. Thanks. *",Did you notice the little green button labeled “radio calibration”? Click on it and follow the instructions and it should solve your problem.
162,Radio Calibration of AT9S Pro,2,"Hello y’all, I have a specific problem with my radio controller (i don’t know whether it is caused by the radio controller or not actually). I’m using Navio2 for the flight controller, AT9S Pro for the radio controller, and Mission Planner for the ground controller software. I bound the receiver to the transmitter accurately. I can see the radio inputs from the mission planner while changing the sticks from the radio controller. When I change the throttle stick from the radio controller, it actually changes exactly the throttle channel from the mission planner. It means that I don’t need to do RC_MAP from the mission planner. The problem is the sensitivities of the channels are not accurate. I mean when I push up the throttle stick to the highest point from the radio controller, I cannot see the highest point of the throttle in the mission planner. By the way, I also changed the trims from the radio controller it didn’t affect much. Did I miss something here? I would be appreciated it if you helped me. Thanks. *","I did radio calibration. What I was trying to say, while calibrating the radio, the sticker movements and mission planners are not the same. The channels are the same but the movements are not."
162,Radio Calibration of AT9S Pro,3,"Hello y’all, I have a specific problem with my radio controller (i don’t know whether it is caused by the radio controller or not actually). I’m using Navio2 for the flight controller, AT9S Pro for the radio controller, and Mission Planner for the ground controller software. I bound the receiver to the transmitter accurately. I can see the radio inputs from the mission planner while changing the sticks from the radio controller. When I change the throttle stick from the radio controller, it actually changes exactly the throttle channel from the mission planner. It means that I don’t need to do RC_MAP from the mission planner. The problem is the sensitivities of the channels are not accurate. I mean when I push up the throttle stick to the highest point from the radio controller, I cannot see the highest point of the throttle in the mission planner. By the way, I also changed the trims from the radio controller it didn’t affect much. Did I miss something here? I would be appreciated it if you helped me. Thanks. *",Not the same direction or in what way not the same?
162,Radio Calibration of AT9S Pro,4,"Hello y’all, I have a specific problem with my radio controller (i don’t know whether it is caused by the radio controller or not actually). I’m using Navio2 for the flight controller, AT9S Pro for the radio controller, and Mission Planner for the ground controller software. I bound the receiver to the transmitter accurately. I can see the radio inputs from the mission planner while changing the sticks from the radio controller. When I change the throttle stick from the radio controller, it actually changes exactly the throttle channel from the mission planner. It means that I don’t need to do RC_MAP from the mission planner. The problem is the sensitivities of the channels are not accurate. I mean when I push up the throttle stick to the highest point from the radio controller, I cannot see the highest point of the throttle in the mission planner. By the way, I also changed the trims from the radio controller it didn’t affect much. Did I miss something here? I would be appreciated it if you helped me. Thanks. *","It had the same direction as the controller’s like, when I push up from the radio controller, the mission planner’s direction is also upward. However, it has not the same sensitivity as my radio controller. While pushing up slowly, it immediately goes to the highest point in some cases."
162,Radio Calibration of AT9S Pro,5,"Hello y’all, I have a specific problem with my radio controller (i don’t know whether it is caused by the radio controller or not actually). I’m using Navio2 for the flight controller, AT9S Pro for the radio controller, and Mission Planner for the ground controller software. I bound the receiver to the transmitter accurately. I can see the radio inputs from the mission planner while changing the sticks from the radio controller. When I change the throttle stick from the radio controller, it actually changes exactly the throttle channel from the mission planner. It means that I don’t need to do RC_MAP from the mission planner. The problem is the sensitivities of the channels are not accurate. I mean when I push up the throttle stick to the highest point from the radio controller, I cannot see the highest point of the throttle in the mission planner. By the way, I also changed the trims from the radio controller it didn’t affect much. Did I miss something here? I would be appreciated it if you helped me. Thanks. *","Then you should redo the radio calibration. Before you do that, check if there are any mixers, expo, dual rates active in your transmitter."
162,Radio Calibration of AT9S Pro,6,"Hello y’all, I have a specific problem with my radio controller (i don’t know whether it is caused by the radio controller or not actually). I’m using Navio2 for the flight controller, AT9S Pro for the radio controller, and Mission Planner for the ground controller software. I bound the receiver to the transmitter accurately. I can see the radio inputs from the mission planner while changing the sticks from the radio controller. When I change the throttle stick from the radio controller, it actually changes exactly the throttle channel from the mission planner. It means that I don’t need to do RC_MAP from the mission planner. The problem is the sensitivities of the channels are not accurate. I mean when I push up the throttle stick to the highest point from the radio controller, I cannot see the highest point of the throttle in the mission planner. By the way, I also changed the trims from the radio controller it didn’t affect much. Did I miss something here? I would be appreciated it if you helped me. Thanks. *",I’m using RadioLink AT9S Pro for the radio controller. I didn’t see any type of mixers in my radio controller as active. I checked it that was inh (inhibited) which means it doesn’t have.
162,Radio Calibration of AT9S Pro,7,"Hello y’all, I have a specific problem with my radio controller (i don’t know whether it is caused by the radio controller or not actually). I’m using Navio2 for the flight controller, AT9S Pro for the radio controller, and Mission Planner for the ground controller software. I bound the receiver to the transmitter accurately. I can see the radio inputs from the mission planner while changing the sticks from the radio controller. When I change the throttle stick from the radio controller, it actually changes exactly the throttle channel from the mission planner. It means that I don’t need to do RC_MAP from the mission planner. The problem is the sensitivities of the channels are not accurate. I mean when I push up the throttle stick to the highest point from the radio controller, I cannot see the highest point of the throttle in the mission planner. By the way, I also changed the trims from the radio controller it didn’t affect much. Did I miss something here? I would be appreciated it if you helped me. Thanks. *","I changed the Radiolink AT9S Pro to a new one. It worked. Probably, someone in the lab might have broken the radio controller."
163,Calculate the drone heading using the velodyne in indoor enviroment,1,"We are trying to fly the drone in an indoor environment. In order to navigate we required a drone heading, we only have an accelerometer, gyro and Velodyne ( no magnetometer, no GPS) as a source. So how we can calculate drone heading using only these sources?",First update to ArduCopter 4.3.0 The version you are using is very old and limited.
163,Calculate the drone heading using the velodyne in indoor enviroment,2,"We are trying to fly the drone in an indoor environment. In order to navigate we required a drone heading, we only have an accelerometer, gyro and Velodyne ( no magnetometer, no GPS) as a source. So how we can calculate drone heading using only these sources?","Sorry its type error ,we have already use 4.3"
163,Calculate the drone heading using the velodyne in indoor enviroment,3,"We are trying to fly the drone in an indoor environment. In order to navigate we required a drone heading, we only have an accelerometer, gyro and Velodyne ( no magnetometer, no GPS) as a source. So how we can calculate drone heading using only these sources?",Have you taken a look at the apsync companion computer?
163,Calculate the drone heading using the velodyne in indoor enviroment,4,"We are trying to fly the drone in an indoor environment. In order to navigate we required a drone heading, we only have an accelerometer, gyro and Velodyne ( no magnetometer, no GPS) as a source. So how we can calculate drone heading using only these sources?","Yes, we did use a similar setup. There is PI 4 connected to USB of Cube black. This PI has mavproxy running inside and then routed the data to use it on ROS. We can feed the orientation via NMEA strings and set EK3_SRC1_YAW to GPS. The only problem here is if we disable the compass then the GPS-type navigation functionality is gone since our assumption is it requires true north heading. Is there any documentation on how this GPS navigation work internally in ardupilot firmware?"
163,Calculate the drone heading using the velodyne in indoor enviroment,5,"We are trying to fly the drone in an indoor environment. In order to navigate we required a drone heading, we only have an accelerometer, gyro and Velodyne ( no magnetometer, no GPS) as a source. So how we can calculate drone heading using only these sources?","So basically it is a SLAM configuration, using the rotating Lidar to build a map and navigate"
163,Calculate the drone heading using the velodyne in indoor enviroment,6,"We are trying to fly the drone in an indoor environment. In order to navigate we required a drone heading, we only have an accelerometer, gyro and Velodyne ( no magnetometer, no GPS) as a source. So how we can calculate drone heading using only these sources?",Correct. We want to inject localization data of LIDAR via GPS hardware port and then give navigation coordinates via mavlink.
163,Calculate the drone heading using the velodyne in indoor enviroment,7,"We are trying to fly the drone in an indoor environment. In order to navigate we required a drone heading, we only have an accelerometer, gyro and Velodyne ( no magnetometer, no GPS) as a source. So how we can calculate drone heading using only these sources?",WIKI is your friend  Here is an example of ROS Cartographer implementation with ArduPilot *
164,Copter-4.3.0-beta1 released!,1,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",*
164,Copter-4.3.0-beta1 released!,2,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",Will gimbal roll control for missions and GCS commands be removed in the future? I want to keep using gimbal roll control in missions.
164,Copter-4.3.0-beta1 released!,3,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Copter working well in stabilized, loiter and auto. Successful tests using the ellipsoid altitude. One question regarding the setup for GPS altitude navigation, together with the new EK3_GPS_VACC_MAX setting. Is the correct set-up to follow “*” and also use the new EK3_GPS_VACC_MAX setting? This way i understand that if GPS fails/is lost, then the barometer takes over, even though all EK3_SRC""X""_POSZ are set to GPS? Thanks for the new update!"
164,Copter-4.3.0-beta1 released!,4,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",How change uart3 esc telemtry Uart4 gps Fc skystar h743 hd
164,Copter-4.3.0-beta1 released!,5,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!", 3-4 motor working  After Changes this parameter NTF_LED_TYPES to 0 SERVO9 to -1 1-4 motor work  but led not working         
164,Copter-4.3.0-beta1 released!,6,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","*, Thanks for getting involved with Beta testing. Yes, controlling the gimbal’s roll is still supported using the DO_MOUNT_CONTROL command.  We won’t remove support for this before we provide an alternative."
164,Copter-4.3.0-beta1 released!,7,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Hi *, Yes, I think your understanding is correct.  The * looks correct to me for Copter as well although the last step, “Set AHRS_GPS_USE to 2”  is not necessary but also does not harm for Copter."
164,Copter-4.3.0-beta1 released!,8,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","I’ve never used this particular flight controller but in general you can change what each serial port is used for by setting SERIALx_PROTOCOL. I might ask * to help you out with the RCOutput issue although it’s not clear to me exactly what problem you’re seeing.  Are you saying that the LEDs on the ESCs are not working?  … or is it the LEDs on the autopilot or maybe the GPS that are not working? EDIT: ah, you’re trying to setup * but can’t get them to work?"
164,Copter-4.3.0-beta1 released!,9,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",LEDs on the ESCs 1-2  are not working
164,Copter-4.3.0-beta1 released!,10,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","OK, thanks for the clarification.  I’ve added this to * for “requiring investigation” as well."
164,Copter-4.3.0-beta1 released!,11,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","I think we covered this in a different thread - PWM1,2 & 9 are all on the same timer so all need to share the same protocol"
164,Copter-4.3.0-beta1 released!,12,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Flying with a Pixhawk-2M with Stab, Alt, PosHold, Loiter mode. No issues. Thanks for the great work. Harald"
164,Copter-4.3.0-beta1 released!,13,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",I flew 6 batteries on two different vehicles yesterday - all was smooth including the upgrade
164,Copter-4.3.0-beta1 released!,14,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",Thanks for the work put in just want to clarify support for the Mamba F405 mk4 included the mini 20 x 20 version?
164,Copter-4.3.0-beta1 released!,15,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",Yes it does - it least that is the version I have. I think there might be an updated version with a different IMU that I don’t yet have
164,Copter-4.3.0-beta1 released!,16,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Thanks, This is the one I want to get just want to be sure its supported."
164,Copter-4.3.0-beta1 released!,17,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Version A is currently supported, Version B is not"
164,Copter-4.3.0-beta1 released!,18,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","About EK3_GPS_VACC_MAX there is ek3_src_alt to set to 3 ? Or is it automatic? Even if set to 1 baro, if gps vacc is below max thershold, ek3 use gps alt instead of baro?"
164,Copter-4.3.0-beta1 released!,19,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",Can someone detail what this means and how it locks arming?
164,Copter-4.3.0-beta1 released!,20,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Hi *, This means that if the FRAME_CLASS or FRAME_TYPE parameters are not set (e.g. left at 0) then it will not be possible to arm the vehicle even if the ARMING_CHECK parameter is set to 0.  Instead of arming a message, “Motors: Check frame class and type” will be displayed. *."
164,Copter-4.3.0-beta1 released!,21,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Sounds good, Thanks make sense…"
164,Copter-4.3.0-beta1 released!,22,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",Anyone can explain the changes in the use of gps alt instead of baro and how does it work ?
164,Copter-4.3.0-beta1 released!,23,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",Try to on esc telemtry  But cant work all setting change all protocol test not work Changing fc uart pin not work Change SERVO_BLH_ setting not work There is some other setting that I don’t know Testing betaflight it’s work Will there be a problem in the firmware ? If there is a problem in the firmware then you should check Fc&esc : skystar h743 hd &km60 blheli_32 esc stack  Changing uart3 to uart4 for gps work ok  Trying esc telemtry uart2 and uart3 not work @andyp1per @rmackay9
164,Copter-4.3.0-beta1 released!,24,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",I suggest you wait until mine arrives and then I will be able to do a bdshot version which you will find much better
164,Copter-4.3.0-beta1 released!,25,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","hello, does this release have the option of changing altitude during mission or guided?"
164,Copter-4.3.0-beta1 released!,26,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Hi! I tested the shiny new beta (works great!) on a wild 5"" quad and really like the new “Arm / Emergency Stop” RC switch option (154), which restarts the motors if I accidentaly bump the switch. But I noticed that it doesn’t enable airmode, contrary to the “Arm / Disarm” option (41) that I used before. Is it expected? (Of course I can workaround it e.g. by configuring an unused channel as “Airmode” (84) or (for acro) by setting a bit in ACRO_OPTIONS.)"
164,Copter-4.3.0-beta1 released!,27,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",We had some discussion about this. We thought it was better that airmode be on explicitly through an option rather than implicitly through some other function - but happy to hear why it would make more sense to do it as part of this.
164,Copter-4.3.0-beta1 released!,28,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","I’d like to have airmode in both ACRO and STABILIZE and not much preference on how exactly. ACRO_OPTIONS works for ACRO only and airmode aux switch uses an extra channel (the last one I have available). Maybe there is some other way? If we keep the option as is, maybe it’s a good idea to have a warning somewhere, as this was unexpected for me and took quite some time to notice why I have a problem controlling my upside-down quad after this change. "
164,Copter-4.3.0-beta1 released!,29,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",We probably should have a PILOT_OPTIONS to mirror ACRO_OPTIONS
164,Copter-4.3.0-beta1 released!,30,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Hi! Is there any news on firmware update from microSD? I remember it was mentioned at the last dev conference, but I didn’t hear anything new since then. Can we expect it on some future release of this version?"
164,Copter-4.3.0-beta1 released!,31,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",* has a branch up
164,Copter-4.3.0-beta1 released!,32,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","*, I’m afraid that Copter-4.3.0 does not include the ability to change the altitude using the RC sticks during missions.  Hopefully that will be included in 4.4 although I can’t promise that it will."
164,Copter-4.3.0-beta1 released!,33,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",thank you hope it will.
164,Copter-4.3.0-beta1 released!,34,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!",Any reference what is ellipsoid altitude. What will be your tests.
164,Copter-4.3.0-beta1 released!,35,"Copter-4.3.0-beta1 has been released for beta testing and can be installed using MP or QGC’s “beta firmwares” link or it can be directly downloaded from *. The changes vs 4.2.3 are in the * and copied below  New autopilot support a) AtomRCF405 b) CubeOrange-SimOnHardWare c) DevEBoxH7v2 d) KakuteH7Mini-Nand e) KakuteH7v2 f) Mamba F405 Mk4 g) SkystarsH7HD h) bi-directional dshot (aka “bdshot”) versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M EKF enhancements and fixes a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds) c) EKF3 source set change captured in Replay logs Gimbal enhancements a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc) b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver c) Dual mount support (see MNT1_, MNT2 params) d) Gremsy driver added (set MNT1_TYPE = 6) e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message) f) “Mount Lock” auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame) g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw) h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which replaces MNT_JSTICK_SPD) i) Yaw can be disabled on 3-axis gimbals (set MNTx_YAW_MIN = MNTx_YAW_MAX) Navigation and Flight mode enhancements a) Auto mode ATTITUDE_TIME command allows specifying lean angle for specified number of seconds (GPS not required) b) Auto mode support of DO_GIMBAL_MANAGER_PITCHYAW command c) Auto mode LOITER_TURNS command max radius increased to 2.5km d) AutoTune allows higher ANGLE_P gains e) Guided mode support DO_CHANGE_SPEED commands f) Manual modes throttle mix reduced (improves landing) g) Payload touchdown detection reliability improved h) Takeoff detection improved to reduce chance of flip before takeoff if GPS moves i) TKOFF_SLEW_TIME allows slower takeoffs in Auto, Guided, etc Notch filter enhancements a) Attitude and filter logging at main loop rate b) Batch sampler logging both pre and post-filter c) FFT frame averaging d) In-flight throttle notch parameter learning using averaged FFTs e) Triple harmonic notch RemoteId and SecureBoot enhancements a) Remote update of secure boot’s public keys (also allows remote unlocking of bootloader) Safety enhancements a) Arming checks of FRAME_CLASS/TYPE made mandatory (even if ARMING_CHECK=0) b) crash_dump.bin file saved to SD Card on startup (includes details re cause of software failures) c) Dead-reckoning for 30sec on loss of GPS (requires wind estimation be enabled) d) Dead-reckoning Lua script (On loss of GPS flies towards home for specified number of seconds) e) Disabling Fence clears any active breaches (e.g. FENCE_TYPE = 0 will clear breaches) f) “GPS Glitch” message clarified to “GPS Glitch or Compass error” g) Pre-arm check that configured AHRS is being used (e.g. checks AHRS_EKF_TYPE not changed since boot) h) Pre-arm check that gimbals are healthy (currently only for Gremsy gimbals, others in future release) i) Pre-arm check that all motors are setup j) Pre-arm check that scripts are running k) Pre-arm check that terrain data loaded if RTL_ALT_TYPE set to Terrain l) Pre-arm messages are correctly prefixed with “PreArm:” (instead of “Arm:”) m) RC auxiliary switch option for Arm / Emergency Stop n) RC failsafe made pre-arm check (previously only triggered at arming) o) RC failsafe option (see FS_OPTIONS) to continue in Guided obeyed even if GCS failsafe disabled p) TKOFF_RPM_MIN checks all motors spinning before takeoff q) Vibration compensation disabled in manual modes Scripting enhancements a) CAN2 port bindings to allow scripts to communicate on 2nd CAN bus b) ESC RPM bindings to allow scripts to report engine RPM c) Gimbal bingings to allow scripts to control gimbal d) Pre-arm check bindings (allows scripts to check if pre-arm checks have passed) e) Semicolon ( and period (.) supported (e.g both Logger:write() and Logger.write will work) Sensor driver enhancements a) Benewake H30 radar support b) BMI270 IMU performance improvements c) IRC Tramp VTX suppor d) Logging pause-able with auxiliary switch.  see RCx_OPTION = 165 (Pause Stream Logging) e) Proximity sensor support for up to 3 sensors f) Precision Landing consumes LANDING_TARGET MAVLink message’s PositionX,Y,Z fields g) RichenPower generator maintenance-required messages can be suppressed using GEN_OPTIONS param h) TeraRanger Neo rangefinder support i) GPS support to provide ellipsoid altitude instead of AMSL (see GPS_DRV_OPTIONS) j) W25N01GV 1Gb flash support Bug fixes a) Accel calibration throws away queued commands from GCS (avoids commands being run long after they were sent) b) Airmode throttle mix at zero throttle fix c) Cygbot proximity sensor fix to support different orientations (see PRXx_ORIENT) d) Loiter fix to avoid potential wobble on 2nd takeoff (was not clearing non-zero attitude target from previous landing) e) Lutan EFI message flood reduced f) Missions download to GCS corruption avoided by checking serial buffer has space g) Payload place fix so vehicle flies to specified Lat,Lon (if provided).  Previously it could get stuck h) Safety switch disabled if IOMCU is disabled (see BRD_IO_ENABLE=0) i) Script restart memory leak fixed j) Takeoff vertical velocity limits enforced correctly even if PILOT_TKOFF_ALT set to a significant height Developer items a) Custom controller support b) Fast loop task list available in real-time using @SYS/tasks.txt c) Parameter defaults sent to GCS with param FTP and recorded in onboard logs d) ROS+ArduPilot environment installation script e) Sim on Hardware allows simulator to run on autopilot (good for exhibitions) f) Timer info available in real-time using @SYS/timers.txt  While we think this beta is safe (many developers have been flying it), this is the first beta release of 4.3.0 so it includes a lot of changes and certainly the chance of issues is much higher than with other beta releases so please be careful and be ready to re-take control in a more manual mode like Stabilize or AltHold. We are very much looking forward to any and all feedback on this new major release and we will be answering and investigating all reports. Thanks to all the developers who contributed to this release!","Hi, Read this regarding different altitude references: * In short- it is a mathematically well-defined and simple altitude reference, which can simplify some specific types of mission planning. I tested that the ellipsoid altitude read in the ardupilot system was the same as multiple surveyor-registered GPS points with the ellipsoid altitude reference."
165,How to disable a rangefinder at runtime,1,I want to enable the rangefinder in hover mode and use the barometer in normal travel. How can I enable and disable the rangefinder in the code? thanks,You need to specify it a little bit… but I think it is not possible… but please give further information from what are you intending to do.
165,How to disable a rangefinder at runtime,2,I want to enable the rangefinder in hover mode and use the barometer in normal travel. How can I enable and disable the rangefinder in the code? thanks,"l want to start the shooting task in althold mode, because it is better to use a rangefinder to set the height in althold mode, so I want to use a barometer when the plane is moving, and switch to a rangefinder in althold mode. can i enable or disable the rangefinder at runtime?by the way ，i use the rangefinder to fix the height upwards"
165,How to disable a rangefinder at runtime,3,I want to enable the rangefinder in hover mode and use the barometer in normal travel. How can I enable and disable the rangefinder in the code? thanks,you might try this: * *
165,How to disable a rangefinder at runtime,4,I want to enable the rangefinder in hover mode and use the barometer in normal travel. How can I enable and disable the rangefinder in the code? thanks,"If it will be moving in Auto Mode (following pre-defined waypoints), you can simply change your coordinates frame to Relative when planning your mission, so in Auto mode it will fly by barometer height and in AltHold it will use rangefinder (as soon as you have enabled surface tracking feature by parameters, that’s what I think it is the case for you)."
165,How to disable a rangefinder at runtime,5,I want to enable the rangefinder in hover mode and use the barometer in normal travel. How can I enable and disable the rangefinder in the code? thanks,Thanks for your advice. I’ll try it
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,1,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,Can you describe more about the situation? what do you want to achieve? There’s definitely some position controller PIDs for XY axis and Z axis that can be adjusted independantly.
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,2,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"hi,nicie to meet you ! I want to add position acceleration controller，for example: *"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,3,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,I don’t know. Do you understand me
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,4,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,Check the complete parameter list and see if any of the PSC parameters do what you need. * Replacing those already in place might be difficult and unwarranted.
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,5,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"control, is not parameters"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,6,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"Hi *, There’s no acceleration layer in the position controller’s horizontal axis I’m afraid.  Instead it directly converts the desired accelerations (which come from the horizontal velocity control output) into lean angles. Could you tell me why you would like to add an acceleration control?  Is it because there are additional thrusters on the vehicle that don’t point downwards like regular multicopter motors?  If yes then it may be interesting to look at how PeterHall added support for 6DOF copters.  Another possibility is that * is working on a change for 4.4 that will remove the built-in assumption that multicopters only have downward thrust."
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,7,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"So far it doesn’t look like we need to add an acceleration loop. The physics of a multirotor let use a simple lean angle conversion. It looks like you are experimenting with it., what have you found?"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,8,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"I found that the vertical direction was controlled by an acceleration loop, so I wanted to try whether the horizontal position was possible. As a result, the experimental effect was not ideal"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,9,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"Yes, I think you will struggle to improve on what we have. This doesn’t need to be very fast and sits on top of a bunch of other controllers. So before you can really even evaluate your work you need to make sure your attitude controllers and Alt_Hold controller is perfect. Also we make the assumption that alt_hold is keeping 1g vertical. So there are a lot of things to make this hard for you."
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,10,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"Just curious after reading this thread… so if you were to send a * mavlink message with a bitmask to ignore everything but position and acceleration (or everything but acceleration), what would it do?"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,11,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"* I don’t understand your question but the answer is either “nothing” or “exactly what you tell it to do” If you command:  position position and velocity position, velocity and acceleration velocity velocity and acceleration acceleration  This will all work. If you command: position and acceleration It won’t work."
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,12,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"thank you very much *if the copter adapt position, velocity and acceleration  control,Will the control effect be good？"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,13,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"If the aircraft is built, setup, and tuned well this gives the most precise and fastest control you can get."
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,14,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"At present, there is no PID control for acceleration in horizontal position control"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,15,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"True, what is your point?"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,16,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"Whether the acceleration can be PID controlled, and then the control output can be converted into angle"
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,17,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,Do you know what I mean? 
166,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,18,Whether acceleration PID control can be carried out for horizontal position in ardupilot?,"Yes, I know exactly what you mean, but you need to make more effort to communicate your idea  why you want to add an Accel loop to xy? how do you think this will improve things? what do you think is not working properly with the current arrangement? "
167,There is a problem compiling the bootloader about arduplane-4.3.1,1,*,Works for me. I suspect you have the wrong version of gcc. You now need 10.2.1
167,There is a problem compiling the bootloader about arduplane-4.3.1,2,*,*
167,There is a problem compiling the bootloader about arduplane-4.3.1,3,*,I’m using 10.3-2021 version
167,There is a problem compiling the bootloader about arduplane-4.3.1,4,*,"It is normal for me to use the previous version, but there is a small error  Therefore, I have to change to the following code："
167,There is a problem compiling the bootloader about arduplane-4.3.1,5,*,"You must use the exact version supported by ardupilot. The code above all works, why did you think you needed to change it?"
167,There is a problem compiling the bootloader about arduplane-4.3.1,6,*,It cannot be compiled with the same gcc version
167,There is a problem compiling the bootloader about arduplane-4.3.1,7,*,Please use the correct gcc version
168,Secure Boot Support,1,"Hi, I am using CubeOrange board, I am trying to implement the secure boot, using the below command Tools/scripts/build_bootloaders.py BOARDNAME --signing-key=NAME_public_key.dat, I am generate the binary file but how we can flash to cubeOrange through Mission Planner or can you guide how I can the program the bootloader firmware to the CubeOrange board? Thanks, Nagaraj","Hi *, Sorry for the slow reply, *."
169,Crash on Loiter mode,1,"The other day my drone crashed while flying on Loiter Mode. I took off and it was stable for a few seconds but suddenly it moved sharply to the right and crashed to the ground. The drone is a hexacopter Tarot X6. I am new to this so I don’t know what may have happened. I checked that the motors are in the correct order and the propellers are in the correct position. Also, I calibrated the ESCs and the compass before flying. Here is the LOG of the flight: * Any help would be appreciated. Thanks","See on the map your position is wandering a lot. Also IMU psotion and GPS position dont agree. Set this to ensure you’ve got a good 3D Fix and Home before flying FENCE_ENABLE,1 and try GPS_GNSS_MODE,1 or GPS_GNSS_MODE,5 or GPS_GNSS_MODE,65 to see what gives the best result. Use the selection dialog in MissionPlanner to pick different GNSS constellations but only choose one or two, not 3 or more. Reading your params from that large log was tricky Check you value for ATC_INPUT_TC , 0.15 to 0.3 is typical, I use 0.2 Set these if you haven’t already INS_LOG_BAT_MASK,7 INS_LOG_BAT_OPT,0 I advise to start in Stabilise or AltHold modes, only switch to Loiter if takeoff has been successful and everything looks good. Once there’s more successful flight time arming Loiter could be OK. I suggest do another test flight after that and let’s see that log file. Just hover for a while in ALTHOLD and some gentle pitch and roll movements. If flight looks stable switch into Loiter for a short time and watch for instability. If AltHold was nice and steady, but Loiter showed oscillations then halve the value of these: PSC_POSXY_P PSC_VELXY_D PSC_VELXY_I PSC_VELXY_P and do another test. There’s some oscillations during arming, maybe wobbly landing gear?? Could be related to the position controller tuning though, since you appear to have been arming in Loiter. Share the new .bin logs too and we can check more."
169,Crash on Loiter mode,2,"The other day my drone crashed while flying on Loiter Mode. I took off and it was stable for a few seconds but suddenly it moved sharply to the right and crashed to the ground. The drone is a hexacopter Tarot X6. I am new to this so I don’t know what may have happened. I checked that the motors are in the correct order and the propellers are in the correct position. Also, I calibrated the ESCs and the compass before flying. Here is the LOG of the flight: * Any help would be appreciated. Thanks","Hello there, Sorry for the delay. I changed the parameters and have done some test flights as you told me. I have done two test flights in Stabilize mode. When taking off there are some vibrations but I assume it is due to the landing gear. After taking off, there were no visible oscillations but the drone was drifting, not hovering. It was windy so maybe that was the issue. Also when landing, the drone flipped due to the landing gear. The next day I will try in AltHold Mode and if everything goes fine I will set up the Harmonic notch filter as shown in the Documentation. Here are the LOGs of the flights. * * Thank you very much for the help."
170,Arducopter on Speedy Bee F4 V3 stack,1,Hii everyone so I was checking out this * flight controlller stack sounds great for the price 70$ and 50Amp escs … soo I was wondering is it possible to run arducopter firmware on it ?? Processor F405 Onboard Barometer 4 X UART i2c pads for compass,I don’t have the answer but *.  * is probably our expert in this area.
170,Arducopter on Speedy Bee F4 V3 stack,2,Hii everyone so I was checking out this * flight controlller stack sounds great for the price 70$ and 50Amp escs … soo I was wondering is it possible to run arducopter firmware on it ?? Processor F405 Onboard Barometer 4 X UART i2c pads for compass,Looks like I can get hold of one of these - I have put in a funding request so that I can do the port. Should be straightforward.
171,Copter-4.3.0-beta3 released for beta testing,1,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",*
171,Copter-4.3.0-beta3 released for beta testing,2,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Cheers Randy and the Dev team,you all rock."
171,Copter-4.3.0-beta3 released for beta testing,3,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Hello Concerning „ 1. Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M)“ Does MP recognize that the Pixhawk has the silicon errata or is it due the previous installed firmware that the alarm will come? Harald"
171,Copter-4.3.0-beta3 released for beta testing,4,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",MP will not recognize that. ArduCopter will recognise that.
171,Copter-4.3.0-beta3 released for beta testing,5,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","*, Txs for helping us test.  As * says, in this case, it is the ArduPilot flight code that will notice the mismatch between what the board is capable of and the firmware being used and then display a warning so Mission Planner is not involved. Separately I think that Mission Planner can display to the user if the board has the errata but I can’t immediately remember how or when it does that.  I think perhaps it is displayed on the Firmware Install screen just below the progress bar at some times… but I might be wrong."
171,Copter-4.3.0-beta3 released for beta testing,6,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Hi!, Yesterday I was in a park in the city where I live, so I took the opportunity to fly my Drone and after several minutes when I decided to descend with the throttle in the low position for a fast descent speed and when the drone was at a height of 20 meters, I released the throttle stick to make it stop, and it did not stop, hitting the ground, luckily there was no damage and it can still fly. A look at the log would be very helpful:"
171,Copter-4.3.0-beta3 released for beta testing,7,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",Link has an annoying Access Requirement.
171,Copter-4.3.0-beta3 released for beta testing,8,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",Just click on the “x” on the pop-up box then you can click “Download” as usual.
171,Copter-4.3.0-beta3 released for beta testing,9,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",Most likely because it doesn’t have sufficient thrust/weight to fly properly. You didn’t notice those Thrust Loss errors or the fact the outputs are often commanded to max when you reviewed the log? The MOT_THST_HOVER value learned at 0.548 is indicative of this also. At hover the average output is ~1700us.
171,Copter-4.3.0-beta3 released for beta testing,10,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Thank you very much for taking a look at the log, I have flown this drone for 6 years without major problems, with very good power and with a value of MOT_THST_HOVER not greater than 0.415 and without loss of power in the motors."
171,Copter-4.3.0-beta3 released for beta testing,11,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","That’s not what you have now. No current logging, that might help to see what’s going on."
171,Copter-4.3.0-beta3 released for beta testing,12,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","I get current from the log  If I’m not wrong, the green at 12 amps The voltage is getting quite low at the end too, that combined with insufficient thrust could be an issue."
171,Copter-4.3.0-beta3 released for beta testing,13,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Do you have more info about motors, weight, ESC etc?"
171,Copter-4.3.0-beta3 released for beta testing,14,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Do you think the motors have reached their useful life? or will it be a problem with the Arducopter beta3?I am using the DJI Spark motors, STABLE F411 BLheli_S 4IN1 12A ESC(16*16mm) and the weight of the Drone is 275 Grams."
171,Copter-4.3.0-beta3 released for beta testing,15,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",*
171,Copter-4.3.0-beta3 released for beta testing,16,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","I have no experience on how motors act when they get too old. Although your motor output is too high. You should be around 1500, yours is at around 1700 as Dave said. Don’t know why this has worked fine in the past since it shouldn’t. Do your motors get hot after flight? I guess you could tune the craft to be very soft and have very low angular speed when correcting pitch and roll, although the issue it still there. The best solution would be to try and reduce the weight of the aircraft to get the motor output below or around 1500."
171,Copter-4.3.0-beta3 released for beta testing,17,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","They are heating up more than normal, for a few days, however, that did not happen, the engines remained cold."
171,Copter-4.3.0-beta3 released for beta testing,18,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",Thats strange. Is this since you updated firmware to 4.3.0 beta3?
171,Copter-4.3.0-beta3 released for beta testing,19,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",That’s voltage. Current is the lower scale and obviously not right.
171,Copter-4.3.0-beta3 released for beta testing,20,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","I’m not sure, I started flying the drone when the betas came out, after several months of inactivity. Anyway, I will install the latest stable firmware to do several tests on it and see the behavior in flight. Another thing, I’m analyzing registers after this one that I loaded, and I see the outputs at 1600 us and MOT_THST_HOVER at 0.437. Are these values within normal?"
171,Copter-4.3.0-beta3 released for beta testing,21,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",* (964 KB)
171,Copter-4.3.0-beta3 released for beta testing,22,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","No, but it’s typically flyable. But under aggressive maneuvering you could still get thrust loss errors and lack of stability. So, as I said flyable and craft like a camera drone flying slowly without high wind this is fine. Under aggressive flying under poor conditions though I would want more thrust/weight."
171,Copter-4.3.0-beta3 released for beta testing,23,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Thanks for the help, I will make several changes to improve the thrust/weight."
171,Copter-4.3.0-beta3 released for beta testing,24,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",And get current logged if you can. I doubt this has anything to do with 4.3.0-beta3.
171,Copter-4.3.0-beta3 released for beta testing,25,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","In this case I don’t know what is happening, I have an mRo Hall Sens Power Module ACSP7, configured as recommended by the manufacturer and I can’t get the correct current reading."
171,Copter-4.3.0-beta3 released for beta testing,26,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","I would consider put a drop of oil into the motor bearings.  I have a 30 ml Scorpion Bottle it says: Mil-C-81309E, Type II. Lubricant Made in USA. If you have oiled the  bearings  forget about this."
171,Copter-4.3.0-beta3 released for beta testing,27,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!",Not a bad idea for motors that have run for 6yrs.
171,Copter-4.3.0-beta3 released for beta testing,28,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","*, I’ve said it before but that’s a nice looking little vehicle…"
171,Copter-4.3.0-beta3 released for beta testing,29,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Thank you very much Randy, It is a design inspired by the entire Ardupilot community."
171,Copter-4.3.0-beta3 released for beta testing,30,"Copter-4.3.0-beta3 has been released for beta testing and can be installed using MP or QGC’s beta firmwares links.  Alternatively it can be downloaded directly from *. Changes vs 4.3.0-beta2 are in the * and copied below  Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board’s flash size (1M and 2M) Scripting support for multi-byte i2c reads Bug fixes a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors) b) BRD_SAFETY_MASK fix for enabling outputs when safety is on c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only) d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)  We think we are quite close to the final release of 4.3.0 so all feedback is very much appreciated!","Thanks FRED_GOEDDERT, I haven’t considered putting oil in the motor bearings, never have but will try."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,1,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",Any chance this would work with the MIO?
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,2,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","*, Yes, it works with the MIO as well.  Sorry I didn’t include a link to the * but I have now."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,3,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",* this is great I have been hoping gremsy would get some support as they are one of the only gimbal suppliers with a nice range of sizes! I will be testing this at the end of the month currently out on a assignment.
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,4,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Ok, so I’ve got the preview firmware installed on a Gremsy MIO and loaded the customized ArduCopter build onto a Cube Orange. I built this from the rmackay9:gremsy-driver2 repository since the link in the original post doesn’t appear to be live. I can see the startup message, so communication between the flight controller and gimbal should be configured properly. Though I can’t seem to control the gimbal at all - RC targeting and “Point Camera Here” have no effect. Setting the mount mode to “Retracted” doesn’t disable the motors either. Any thoughts as to what I may have missed?"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,5,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Txs very much for giving it a try and sorry about the firmware link.  I’ve fixed the link now. My guess is that there’s something on the gimbal side that’s causing the problem.  For example even though it’s clearly communicating over MAVLink it’s still taking target angles from the RC. I wonder if maybe upgrading the firmware has wiped all the parameters from the gimbal and it won’t move at all.  Could you perhaps try controlling it with a regular RC somehow?  I guess to do this you need to change Settings, Controls to “SBUS” By the way, on my PixyU, I’ve got the Settings, Controls set to “SYNC”. I’ve asked my contact at Gremsy to test with the MIO."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,6,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Thanks Randy, looking forward to seeing if Gremsy has better luck. I think you’re onto something regarding a gimbal-side issue. If I revert the parameters and mount type to support the MAVLink control I was using previously, there’s still no response from the MIO that’s been updated to the preview firmware. I popped in another MIO that’s still on an earlier release and that works fine. I didn’t see anything in the updated gimbal’s settings that looked like it was wiped or reverted at first glance, but I’ll keep digging in the meantime."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,7,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","We have several T3v3’s in regular use with AC. I can’t offer to help test beta firmware on these machines sadly, but it’s great news this is being worked on. Does anyone know if it’s possible to read the current angles from the gimbal, rather than just setting them? e.g. if controlling pan / tilt via a separate SBUS receiver, is there any way of getting the mount angles on the ground station?"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,8,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","With 4.1.5 <= ArduCopter <= 4.2.1 you can use the mount_control.cpp mavros plugin (master) to do that. It reads controlls the setpoint and reads back the current angles and publishes errors on the ROS diagnostics topic. But you do need to keep it MAVLink only, no SBUS."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,9,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",With the new Gremsy driver the gimbal’s actual angles (not the targets) are sent to the GCS using the *.  I don’t know what will happen if you try to control the gimbal with a separate RC though. Getting ROS involved to retrieve the actual angles seems like a long way around to me.  It looks like the SToRM32 mavlink driver doesn’t retrieve the actual angles but there’s a to-do in the code to do it so I’ll take care of that after we complete this Gremsy driver.
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,10,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","* You can take a look at our * based on MAVLink. To control gimbal with external RC and keep MAVLink connection to retrieve gimbal attitude, you need to *"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,11,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",* * * Thanks for your replies. This level of integration is really fantastic! 
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,12,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","* It seams like the mavlink stream from the gimbal currently prevents GCS failsafe triggering. I think I have a fix locally, will post the results later"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,13,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Thanks very much for the feedback.  It is certainly possible that a new MAVLink device could cause the GCS failsafe to not trigger.  If there’s an issue I don’t think it will be related to this new driver but rather an existing issue. For example, here’s what I see from MP’s mavlink inspector and there are a lot of devices so the SYSID_MYGCS and SYSID_ENFORCE parameter probably need to be set in order to ensure the vehicle’s GCS failsafe isn’t fooled by, for example, the Herelink receiver which would keep sending heartbeats even if I disconnected Mission Planner or powered down the herelink transmitter.  EDIT: I see you’ve * and it does look like an existing issue and there are various solutions we can discuss on the next dev call."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,14,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","We merged the Gremsy PR this morning so within a few hours testers can load “latest” to test.  if using MP, go to the Install Firmware screen and press Ctrl-Q, then confirm the version displayed below each icon is 4.3.0-DEV and then push the icon to install."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,15,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hi all, anyone else have a chance to test this PR on a MIO yet?"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,16,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hi *, I’ve ping’d the Gremsy developer … he’s been fixing other little issues so I hope/expect he’ll get to this soon-ish."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,17,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *."," People have probably already seen this but in any case, here’s a demo of what is in “latest” (aka “master”, aka “Copter-4.3.0-DEV”) on a Gremsy.  By the way, this should work for all gimbals AP support (PWM, AlexMos, SToRM32, etc) The next enhancements planned are:  Lua scripting support Improve gimbal attitude reporting to the ground station dual gimbal support support for more types of gimbals GCS enhancements to ease gimbal control by the operator "
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,18,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hello all, I am running some bench tests on a Gremsy T3V3 and a CubeOrange. I have managed to get the gimbal to connect & mount to the Cube. Using MP I can also make the gimbal ‘look’ at a target using the ‘Point camera over here’ command so the AP talks to the Gremsy gimbal. The issue I am having is the ‘Set Mount’ commands in MP appear not to work for me. This is probably linked to the Gremsy not showing up in the Mavlink Inspector as MAV_COMP_ID_GIMBAL. The Gremsy does show as ‘Mounted’ in the messages window. Does anyone have a suggestion what could cause this and how to resolve the issue?"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,19,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Thanks very much for giving this a try! So it’s the “Set Mount” button that you’re trying to use I think.  It may not be clear but all this does is change the gimbal’s mode using the drop-down just to the left of the button.  So for example, if you set it to “Neutral” it will simply move to the body-frame angles specified by the MNT_NEUTRAL_X (=roll), _Y (=pitch) and _Z (=yaw).  Or if you set it to “RC Targeting” you should be able to move the gimbal round using the channels specified by the “MNT_RC_IN_xxx” parameters.  By the way, the intention is that “Retracted” mode will relax the gimbal but Gremsy hasn’t made the update to accomplish that yet."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,20,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",Thanks for your response * I think you’ve answered at least one of my questions so thanks for that. I was trying ‘Retracted’ to see if the gimbal motors would turn off to check if the ‘Set Mount’ command had any effect. Do I need to look further into the missing MAV_COMP_ID_GIMBAL or is that what you’d expect with the current software/firmware?
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,21,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hi Using a ground rig I have just been testing the Gremsy gimbal improvements using a Pixy-U gimbal Firmware 7.7.1, Orange Cube V4.3.0-Dev and a Taranis X9D, but I’m having limited success. Setting the Mount mode to “RC Targeting” the gimbal moves correctly with RC input except for the following. Yaw and Pitch are connected to the Left and Right Sliders on the Taranis X9D but are difficult to control. I.E., after moving the slider enough to just move the pitch or yaw it then will move quickly to full deflection. It seems the same with Expo applied. The “Mount Lock” switch works however Follow sets the gimbal about 30deg right of forward. This does not occur when connected and controlled via gTune In Follow and lock the Yaw channel is smooth and responsive when connected to gTune. When connected to the Cube via MAVLink the Yaw channel is slow and juddery. Setting the Mount mode to “RETRACTED” does not relax the gimbal but it looks as if this hasn’t been implemented? MNT_JSTICK_SPD parameter is missing in the parameters. Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” brings up a window asking for an altitude. Once this is entered and OK is selected the gimbal doesn’t move. Some more information on the Mission Planner Actions options would be helpful. I include my parameter file in case some of the setting are in error? I’m not sure if this of any help but I would be interested in some fed back especially on controlling the gimbal pitch and yaw rates. Peter * (17.9 KB)"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,22,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",This is an huge improvement for arducopter. Kudos to Randy and Gremsy!
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,23,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hi *, Thanks for testing and reporting back. MNT_JSTICK_SPD has been replaced by MNT_RC_RATE.  This new param is slighlty more intuitive as well because the scaling is in deg/sec. “Retracted” doesn’t relax the gimbal with gimbal version 7.7.1 but it does in 7.7.2 (but there are other issues with 7.7.2 so I’d recommend sticking with 7.7.1 for now) I wonder if maybe the vehicle doesn’t have a position estimate (aka GPS lock)?  To be able to properly switch between “body frame” (aka “follow”) and “earth frame” (aka “lock”) the gimbal needs to know the vehicle’s attitude and for the “Point Camera Here” the vehicle must know its position…"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,24,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",Hi Randy * Thanks for your reply. MNT_RC_RATE works well but I am still having problems with Yaw. When in Lock or Follow and the rig the gimbal is mounted on is moved the gimbal is very slow and juddery when it tries to correct its yaw position. The only setting I can find is the Follow speed in gTune which doesn’t help. I have compared this to when using SBUS connection and when using that the gimbal corrects normally so it has something to do with the Mavlink connection settings I have??? I also cant get the select “Point Camera Here” in the Mission Planner map to work. I have a GPS 3D Fix and HDOP 1.42. I’m not sure how to fix that. If you have any suggestions it would be appreciated.
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,25,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hey, thanks for the post. I followed your Setup instructions to a certain extent. We are looking to stabilize the top mounted gimbal towards the sun. Issues faced are that there is no movement along the Tilt axis below 40deg. It just does not do it. Other, like 41 get executed this is via MAV_CMD_DO_MOUNT_CONTROL. Does MAV_CMD_DO_GIMBAL_MANAGER_PITCHYAW work? Also how to get the gimbal actual angles on 4.3."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,26,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",I’ve updated *. There are GCS developer focussed instructions going into the wiki soon (*) MAV_CMD_DO_GIMBAL_MANAGER_PITCHYAW does work (make sure you’ve got Copter/Rover/Plane-4.3.0-DEV installed of course) although I have not tested it on an upward facing gimbal.  Do you have an onboard log file you could share?  You might need to set LOG_DISARMED = 1 in order to create a log while the vehicle is disarmed. The real-time attitude of the gimbal is available in the *.  For the moment at least these are only in Quaternions and always in body-frame regardless of whether the target has been provided in body-frame or earth-frame (aka “follow” vs “lock”). I have been planning to add support for * in case that would be helpful. Hope that helps.
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,27,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Thank you for your swift response. Yes, we are testing out the 4.3.0 Just switched LOG_DISARMED to 1. Will share it as I get some data. MAV_CMD_DO_GIMBAL_MANAGER_PITCHYAW gives the COMMAND_ACK {command : 1000, result : 3, progress : 0, result_param2 : 0, target_system : 255, target_component : 0} As I understand it reports it as unsupported command. Could you please share the message example, maybe we are doing it wrong somewhere. On the * side we have no immediate use to it."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,28,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",ok great.  The *.  I suspect if you compare this to what’s being sent you’ll find the issue but… I can’t be sure of course.
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,29,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","* 230MB! msg = the_connection.recv_match(type=“GIMBAL_DEVICE_ATTITUDE_STATUS”, blocking=True).to_dict() message, does not update, what is received when the scrips starts keeps rolling, with slight changes on second and later decimals. If gimbal is held in certain way it will register it on the script start, keeping almost the same values even it moved to another position. Computer is connected to CUAV X7 pro via USB cable, if that makes any difference."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,30,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","I suspect the issue is a configuration issue.  Could you check which version of the Gremsy gimbal software is installed?  The gimbal needs to be running 7.7.1 or higher. Which of the autopilot’s serial ports is the gimbal connected to?  I think it is probably Serial2 (aka Telem2) but I’d like to be sure.  With a successful serial connection we should see a message like, “Mount: Gremsy PixyU fw:7.7.1.0” or similar (we don’t see this message so the autopilot is not able to communicate with the gimbal). both RC2_OPTION and RC3_OPTION have been set to 163 (Mount Lock) but norrmally only a single RC input channel should be configured for this.  Also it is unusual to assign the pitch and throttle RC input channels for this purpose.  I suspect this is all just a mistake but I think it is a good idea to restore these two parameters to 0.  A higher channel like RC7_OPTION would be best. Have you tried controlling the gimbal for the RC input before trying to use MAVLink?  I think this would be a good idea in order to confirm the gimbal basically works. It looks like all arming checks except the “Compass” checks have been disabled.  This means the user won’t be notified of other issues including configuration issues that may be causing problems.  Txs for the logs and giving this new driver a try."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,31,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Gremsy has the latest firmware - 7.71 Telem2, regarding the communication, there DO_MOUNT_CONTROL works and GIMBAL_DEVICE_ATTITUDE_STATUS sends at least one message. However I’ll try to look into the communication further. I do not use the RC, this pixawk is dedicated only to the Gimbal. Gimbal does work with DO_MOUNT_CONTROL with Tilt avoiding comanded angles between -40 and +40 deg, that is why DO_GIMBAL_MANAGER_PITCHYAW came to mind. Yeah, checks are off as the other pixawk flies the drone. Would you suggest to activate some?"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,32,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",If DO_MOUNT_CONTROL works then DO_GIMBAL_MANAGER_PITCHYAW should also work assuming these messages are being sent to the autopilot and not directly to the gimbal. I noticed also that SERIALx_OPTION hasn’t been set to 1024. I think it might be a good idea to:  confirm the gimbal is moving correctly with RC controls connect with MAVProxy and then copy-paste the examples for DO_GIMBAL_MANAGER_PITCHYAW into the MAVProxy console. 
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,33,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","master.mav.command_long_send( master.target_system, master.target_component, gives out result 3 again. mavproxy works well with DO_MOUNT_CONTROL with ±40 ignorance. It appears that communication from the PX4 is the issue, as it doesn’t update the compass either, it takes more than 2 seconds to update the North. It is communicating with Win 10 over the COM port. Gimbal commands are responsive, feedback from the PX seems to be the issue. What do you propose? Would the companion RPI4 maybe solve the communication issue."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,34,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",I’m sorry to repeat myself but I think it would be good to do these 3 things:  set SERIALx_OPTION = 1024 (where “x” is the number of the serial port connected to the gimbal) confirm the gimbal is moving correctly with RC controls connect with MAVProxy and then copy-paste the examples for DO_GIMBAL_MANAGER_PITCHYAW  into the MAVProxy console. 
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,35,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Thanks for you assistance, Unfortunately we do not own RC controls at the moment. Further, the MAVproxy console gives:  Unknown command message COMMAND_LONG 0 0 1000 0 float(""NaN"") float(""NaN"") 0 5 0 0 0   We are seriously confused, replicated it on another X7 pro with another T7 with the same results. DO_MOUNT_CONTROL works well on all axis, until it has to go between -40 to +40. Solving this would solve our issue. Do you have any ideas why is it happening? 4.2.3 does not talk to T7 at all, with 7.7.1 firmware. We also noticed you had 7.7.2. can we maybe test it?"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,36,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",Look at the title of this post: T7 7.7.1 requires ArduCopter 4.3-x.
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,37,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Re MAVProxy’s message, did you type in “module load message” first? On the wiki page linked it says this: The example commands below can be copy-pasted into MAVProxy (aka SITL) to test this command. Before running these commands enter: - module load message Maybe the formatting of this was not clear?  Maybe I should move the “module load message” up so it’s not a bullet point. By the way, I think investigating in getting an RC transmitter/receiver is a good idea.  flying a drone without any RC is somewhat dangerous especially if you haven’t flown it before.  It will also make the setup much easier."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,38,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hello I test following this post upgrading gimbal t3v3 and autopilot with 4.3beta. It works relly better than before in auto mode and in speed mode. Just for this who want to use rc in angle mode with rc pot, the gimbal still not reacting proportionality to the pot for pitch for example. Can you check this feature for feedback?"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,39,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",Txs for testing the new Gremsy gimbal driver.  So you’re saying that the gimbal’s actual pitch is not reaching the limit you expect?  I suspect the issue is a mismatch between the gimbal’s internal pitch range and the MNT1_PITCH_MAX parameter.  I have added this to * and I will test on my own vehicle but if you have a log file that might also be useful. Txs again.
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,40,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hello Randy, no is not this behavior. The gimbal achieve min max angles so no issue on this sides. Pitch Min max are 90. -90. Pot is set on Rc8 1000-2000us no dead band. So pot set to 1500 gimbal is at 0 perfect If pot is set between 1500 1750 or 1250 1500 nothing. If pot is set to 1751 or 1249 gimbal axes ±45deg directly. Over this values we have expected proportional behavior. So its impossible to pitch between 1 to 44 or -1 -44 deg"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,41,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","OK, could you check the RC8_TRIM value to ensure it is halfway between RC8_MIN and RC8_MAX?  I think I saw something similar a few days ago myself and the issue for me at least was the way AP uses the trim value… We should potentially just ignore the _TRIM but let’s first be sure this is the problem. … could you also check the RC8_DZ value? … and finally if possible could you provide an onboard log file?  It might be necessary to set LOG_DISARMED = 1 to allow producing an onboard log while the vehicle is disarmed."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,42,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",I wonder if you managed to get the Gremsy gimbal working OK?  There is a new -beta2 available now although there are really no differences with previous versions. I’ve added this to our * so I’m keen to get to the bottom of the issue.
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,43,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Hi * , I see you are sending AUTOPILOT_STATE_FOR_GIMBAL_DEVICE to the Gremsy gimbal. Do you know if Gremsy is actually consuming AUTOPILOT_STATE_FOR_GIMBAL_DEVICE or whether you are simply future proofing the code for a time when Gremsy actually decides to use the information? If so, do you know which fields the Gremsy is consuming? The reason I am asking is I am writing a custom device driver for a non-autopilot device and it will take a lot of effort to compile the information for insertion into the message. Thank you Troy"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,44,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","The gimbal really consumes AUTOPILOT_STATE_FOR_GIMBAL_DEVICE for better state estimation. We use q[4] and feed_forward_angular_velocity_z. For more information, you can ping * for more information."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,45,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Thank you for getting that information so quickly. One last question, if you don’t mind. Does the gimbal also consume the ATTITUDE message? The reason I ask is that it contains duplicate roll, pitch, yaw information. Which message gets used if both ATTITUDE and AUTOPILOT_STATE_FOR_GIMBAL_DEVICE are sent to the gimbal? Best, Troy"
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,46,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","* I got SBUS RC working while receiving gimbal angles. But as far as I can tell, it only works with MAVLink Gimbal V1 (MOUNT_ORIENTATION, DO_MOUNT_CONFIGURE, DO_MOUNT_CONTROL), and NOT MAVLink Gimbal V2 (ATTITUDE_STATUS, GIMBAL_DEVICE_SET_ATTITUDE)."
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,47,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.",You need to update the gimbal firmware for that to work
172,ArduPilot 4.3 + Gremsy gimbal improvements -- testers wanted!,48,"I have been working with Gremsy to improve AP’s support of their gimbal and it’s at the point where I’d like to get feedback from any willing beta testers on the improvements. Enhancements include:  Startup message displays the gimbal hardware and software version (appears about 10 sec after startup so it is slightly easy to miss) “Mount Lock” auxiliary switch option allows the pilot to specify whether the gimbal should maintain a body-frame heading or an earth-frame heading while under pilot control.  Set RCx_OPTION = 165 and pull switch high to “lock” to earth frame heading MNT_ANGxxx parameters are defaulted to the gimbal’s angular limits (set using gTune).  Note that if you’ve already set this manually this defaulting will have no effect. DO_GIMBAL_MANAGER_PITCHYAW command supports specifying angles in body-frame or earth-frame Smoother movement during pilot input especially when using rate control (e.g. MNT_JSTICK_SPD param is non-zero) Gimbal motors are turned off if the gimbal is set to RETRACTED mode *   How to Setup:   Download and install Gremsy gimbal firmware 7.7.1 (or higher) on your gimbal.  Please note that you may need to re-calibrate your gimbal afterwards  PixyU firmware is here T3V3 firmware is here S1V3 firmware is here T7V1 firmware is here T3PE firmware is here MIO firmware is here    Using gTune, confirm the the “REDUCE DRIFT by DRONE” for “PAN AXIS” is enabled as shown below.  This causes the gimbal to consume the autopilot’s attitude information so that it knows  “earth frame” (e.g knows where true North is) *   Install “latest” ArduPilot firmware on your autopilot using MP’s Firmware Install screen (press Ctrl-Q to switch to “latest”)   Configure * but with these changes:  set SERIALx_OPTIONS = 1024 (“Don’t forward mavlink to/from”) to stop the autopilot<->gimbal mavlink traffic from being forwarded to the autopitot<->GCS link which can overwhelm it   set MNT_TYPE = 6 (Gremsy) no need to set SRx_xxx parameters set MNT_JOYSTICK = 100 if you want to control the gimbal’s attitude using rate control (e.g. RC stick inputs will control how quickly the angle of the gimbal changes) set MNT_RC_IN_PAN, ROLL and/or TILT to the RC channels you wish to use to manually control the angle of the gimbal set RCx_OPTION = 163 (Mount Lock) to allow controlling whether the gimbal locks on an earth-frame vs body-frame heading when under pilot RC control    How to test:  Set the Mount mode to “RC Targeting” and confirm the gimbal moves correctly with RC input. *  Pull the “Mount Lock” auxiliary switch high and confirm when the vehicle is rotated, the gimbal stays locked onto the earth-frame target.  Next pull the “Mount Lock” low and confirm the gimbal rotates with the vehicle set the Mount mode to “RETRACTED” and confirm the gimbal relaxes allowing the camera to be moved by hand Right-mouse-button-click on the Mission Planner map and select “Point Camera Here” and confirm the gimbal points in the correct direction *  Setup an Auto mission with DO_MOUNT_CONTROL with roll, pitch (-ve is down, +ve is up), yaw angles.  Switch the vehicle to Auto and confirm the gimbal points in the correct direction.  Note that if the command is the first command it will run without the vehicle being armed.  Set MIS_RESTART=1 to force the mission to be re-run from the first command whenever the vehicle is switched to Auto mode Setup an Auto mission with DO_GIMBAL_MANAGER_PITCHYAW (use “Unkown”, “1000”).  First column is Pitch angle (-ve is down, +ve is up), 2nd column is Yaw *   Of course please be careful with this firmware because both the AP firmware and the Gremsy gimbal firmware are works-in-progress and haven’t gone through the normal beta testing that we do before stable releases. BTW, I’m also happy to look into other gimbal issues people are facing and perhaps I can resolve some of these as follow-up changes to the Gremsy driver changes. For reference *.","Because the gimbal still supports AP version lower 4.3, which AUTOPILOT_STATE_FOR_GIMBAL_DEVICE is not present, gimbal consumes both messages. But AUTOPILOT_STATE_FOR_GIMBAL_DEVICE has higher priority. In your application, you can send ATTITUDE or AUTOPILOT_STATE_FOR_GIMBAL_DEVICE messages to the gimbal. But if an autopilot is present in the system, gimbal prefer consuming info from the autopilot."
173,How many times do I need to calibrate accelerometer?,1,"I’m playing around with different mountings for the FC in my TRex 500 heli, but it’s always in the same location and orientation.  So far I’ve been calibrating my accelerometer after each change, but I’m wondering if I really need to do that.  Given that the FC is always as-near-as-dammit in the same position, is Calibrate Level all I really need to do after each change? Better still, is calibrating the FC before mounting it in the heli all that’s needed, provided it’s been given the correct orientation parameter, as then it’s much easier to be sure that it’s exactly level, on edge, upside down, etc.","It depends on what you expect it to do and if you’re having issues. Personally, I would recommend you calibrate it fully time every time you move it. It doesn’t take long and it’s worth it. It may not have any noticeable effect most of the times but you’ll regret not doing it the one time it does. From personal experience, it’s better to calibrate in the actual aircraft with everything onboard. Only calibrate it offline if your aircraft is large and too hard to do. Back to my previous point, it depends on what you want it to do and on your airframe. It may only be a slight difference which isn’t noticeable for your purposes. And again, depends on your airframe and how you have everything mounted."
173,How many times do I need to calibrate accelerometer?,2,"I’m playing around with different mountings for the FC in my TRex 500 heli, but it’s always in the same location and orientation.  So far I’ve been calibrating my accelerometer after each change, but I’m wondering if I really need to do that.  Given that the FC is always as-near-as-dammit in the same position, is Calibrate Level all I really need to do after each change? Better still, is calibrating the FC before mounting it in the heli all that’s needed, provided it’s been given the correct orientation parameter, as then it’s much easier to be sure that it’s exactly level, on edge, upside down, etc.","Thanks Gabrielle, I’m not having any issues except I find it very difficult to hold a heli upside down and to be sure that it’s exactly level in that position  My heli will be in a scale fuselage so won’t be doing any exciting moves.  But I’ll persevere with what I’m doing, as you suggest.  Thank you."
173,How many times do I need to calibrate accelerometer?,3,"I’m playing around with different mountings for the FC in my TRex 500 heli, but it’s always in the same location and orientation.  So far I’ve been calibrating my accelerometer after each change, but I’m wondering if I really need to do that.  Given that the FC is always as-near-as-dammit in the same position, is Calibrate Level all I really need to do after each change? Better still, is calibrating the FC before mounting it in the heli all that’s needed, provided it’s been given the correct orientation parameter, as then it’s much easier to be sure that it’s exactly level, on edge, upside down, etc.","Hi Allan, I understand your issue - I’ve had the same myself. In that case, I’d recommend you make sure your FC is correctly mounted to the frame and properly leveled within the airframe. Then, calibrate it before mounting it and don’t worry about recalibrating it (unless you have issues). You’ll need to make sure the actual mounting position is properly level every time you move it but if you’re not doing anything too exciting, you probably won’t notice a large effect as long as you haven’t completely messed up the mount."
173,How many times do I need to calibrate accelerometer?,4,"I’m playing around with different mountings for the FC in my TRex 500 heli, but it’s always in the same location and orientation.  So far I’ve been calibrating my accelerometer after each change, but I’m wondering if I really need to do that.  Given that the FC is always as-near-as-dammit in the same position, is Calibrate Level all I really need to do after each change? Better still, is calibrating the FC before mounting it in the heli all that’s needed, provided it’s been given the correct orientation parameter, as then it’s much easier to be sure that it’s exactly level, on edge, upside down, etc.","From * :  The vehicle must be kept still immediately after pressing the key for each step. This is more important than getting the angle exactly right, ie. left being 90deg to horizontal, etc. Except for the first “LEVEL”, the positions can be within 20 degrees of being exact. Being still in each position as you press the key is much more important. "
173,How many times do I need to calibrate accelerometer?,5,"I’m playing around with different mountings for the FC in my TRex 500 heli, but it’s always in the same location and orientation.  So far I’ve been calibrating my accelerometer after each change, but I’m wondering if I really need to do that.  Given that the FC is always as-near-as-dammit in the same position, is Calibrate Level all I really need to do after each change? Better still, is calibrating the FC before mounting it in the heli all that’s needed, provided it’s been given the correct orientation parameter, as then it’s much easier to be sure that it’s exactly level, on edge, upside down, etc.","After finalising the build and everything, the FC is in about the same position and orientation as always,  just do the Calibrate Level step. (Level Horizon in QGC) I check that the aircraft really is level (not the FC itself) by packing under the landing gear and checking with a spirit level - there’s almost no such thing as a level surface to put the aircraft on."
173,How many times do I need to calibrate accelerometer?,6,"I’m playing around with different mountings for the FC in my TRex 500 heli, but it’s always in the same location and orientation.  So far I’ve been calibrating my accelerometer after each change, but I’m wondering if I really need to do that.  Given that the FC is always as-near-as-dammit in the same position, is Calibrate Level all I really need to do after each change? Better still, is calibrating the FC before mounting it in the heli all that’s needed, provided it’s been given the correct orientation parameter, as then it’s much easier to be sure that it’s exactly level, on edge, upside down, etc.","Thanks Chris, I’d missed that bit about 20 degrees error being acceptable. Thank you too Shawn.  Bearing in mind what Chris has pointed out, what you say sounds logical, and is what I was hoping to be the case.  Luckily I do have a level spot on my work bench for the Calibrate Level step of the process."
174,"Log download speed improved for boards with ""block"" backends",1,What are differences between last version and previous version about download dataflash log speed? I want too see difference as  C++ code. Thanks,*
174,"Log download speed improved for boards with ""block"" backends",2,What are differences between last version and previous version about download dataflash log speed? I want too see difference as  C++ code. Thanks,"I tried Arduplane V3.0 and V1.0 log download speed. When I clicked the Download All Logs button, (files size is total 7.7 mb) it took 22 scd in the both version. How was it possible?"
175,My quad is drifting while landing in auto mode,1,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","GPS position could easily be a few meters out, or drift somewhat while in use. Although that doesnt happen so much these days. Looks like a lot of default values and no tuning. Connect to MissionPlanner and go to Initial Parameters, put in your batter cells and prop size, also select to accept the recommended parameters, then accept everything it offers to update. Set this INS_LOG_BAT_MASK,1 and do a hover for a minute or so and just some gentle pitch and roll movements For GPS issues, try a different value for GPS_GNSS_MODE and GPS_GNSS_MODE2 - the same value in them, but just not the default 0 Use the selection dialog box in MissionPlanner to pick just one or two constellations, you might find a value of 65 works best for you.  In logs look for GPA Delta (update rate) and it should be a straight line along 200msec"
175,My quad is drifting while landing in auto mode,2,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Thanks for the help and recommendation Shawn, I really appreciate it. Yeah I know! I have not changed much of default values because I don’t know which parameters and what are the values I have to insert. Is there any guide or doc which can help me to find which default parameters we should change when we make a new drone? And for tuning the drone, Yeah! I tried auto-tuning few times but it never completed, last time I remember it was showing some error “Failing to Level” and where I live is little windy area so I get just few chances when there is not much wind for auto-tuning. I am not a good pilot so I have never tried manual tuning. If you have some better and safe way for this then please suggest me how can I safely do tuning? But btw, I have again flown the drone with only Here3 GNSS (removed the second GNSS) and found out it was landing perfect like earlier with few cm errors and when I connected back the second GNSS, it started landing again few meters away. Today, I will try with this GPS_GNSS_MODE = 65 parameter and see what will happen. Again Thanks for help!"
175,My quad is drifting while landing in auto mode,3,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *",This will rarely work from default parameters. At a minimum you need to use the Initial  Parameters Setup in Mission Planner. Hard to miss as it’s under the Mandatory Hardware section. These are pre-maiden flight parameters…
175,My quad is drifting while landing in auto mode,4,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Thanks, * (Shawn) & * (Dave), and sorry for the late response. While setting the initial set-up I noticed that it is asking to change some of the default settings. Should I be writing all the parameters to the FC? and If so then How safe is it to fly the drone in loiter mode after writing these recommended parameters to FC? Because I am still a learner so I prefer Loiter mode to fly. and after writing these parameters it says: After Test Flight Set “ATC_THR_MIX_MAN” to 0.5 Set “PSC_ACCZ_P” to MOT_THST_HOVER Set “PSC_ACCZ_I” to 2*MOT_THST_HOVER What does it mean by test flight? Do I need to fly in stabilize mode or I can fly in any mode? and what am I supposed to do on the test flight? some gentle pitch, roll, and yaw movement, or something else? and How long shall I fly on a test flight? Really looking forward to your help and suggestion. I will be eagerly waiting for your response. Again a big thanks to you both!"
175,My quad is drifting while landing in auto mode,5,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *",In this case it means fly (hover) in AltHold or Loiter until the hover thrust value has been learned. You will know this has happened when it is hovering with the throttle at mid stick. Or you can hover in any mode and then review the log and look at the average CTUN>Tho value.
175,My quad is drifting while landing in auto mode,6,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Thanks again for the quick reply, Do I need to do this test flight with the payload? or I can later add the payload after the final auto-tune is done? what do you suggest?"
175,My quad is drifting while landing in auto mode,7,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Hey * (Dave), I have set the initial parameters and done the test flight. (Sorry for the delay in test flight, It has been raining for last few days here so I was waiting for the clear sky day). In test flight, I put the drone on hover at few meters for about 5-7 minutes but after sometime it says “prearm: Compass Variance” so I landed the drone. Could you please help me out here to find out what could go wrong? Here are the logs: * Really looking forward for some help and suggestion."
175,My quad is drifting while landing in auto mode,8,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","OK, the hover throttle value was learned but as Shawn said set INS_LOG_BAT_MASK to 1 and repeat the hover test. Only a minute or so is required. You need this and the Hover thrust value to set the Notch Filter."
175,My quad is drifting while landing in auto mode,9,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Thanks again * (Dave). Today morning I got the best day for all the testing as there was no wind and I also performed the autotuning but it did not come out successfully, Pitch & roll was a success but when it started doing the yaw then it started showing “AutoTune: Failing to Level”. is it because I have not updated the ATC_THR_MIX_MAN to 0.5 or something else is the reason? and one more thing, are the pitch and roll rates come out good? and shall I update the roll & pitch rates as it is? Log of INS_LOG_BAT_MASK: * Log of AutoTune: * Thanks for all the help. Looking forward to some more suggestions."
175,My quad is drifting while landing in auto mode,10,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Looks like Autotune didnt complete because of battery voltage causing RTL. It’s OK to do Yaw Autotune last, it’s least critical. AUTOTUNE_AXES,4 You could get through pitch and roll on one battery charge though Put in these values from the Autotune that did make through pitch and roll sections ATC_ACCEL_R_MAX,68998 ATC_ACCEL_P_MAX,70760 ATC_ANG_RLL_P,13 ATC_ANG_PIT_P,11 ATC_RAT_RLL_P,0.123 ATC_RAT_RLL_I,0.123 ATC_RAT_RLL_D,0.0053 ATC_RAT_PIT_P,0.184 ATC_RAT_PIT_I,0.184 ATC_RAT_PIT_D,0.0074 When you do Autotune and it finishes, just stay in Autotune mode and “reposition” to land and disarm. Wait for PIDs to save (a couple of seconds) then you can arm in a normal mode and fly for testing. ONLY switch out of Autotune mode after landed and disarmed. I find this is the easiest way. Your collection of data for Harmonic Notch filtering seems odd, but set these anyway: INS_HNTCH_ENABLE,1  ← set this then refresh params to see the rest INS_HNTCH_MODE,1 INS_HNTCH_REF,0.16 INS_HNTCH_FREQ,60 INS_HNTCH_BW,30 INS_LOG_BAT_MASK,7 BATT_FS_CRT_ACT,1 ATC_THR_MIX_MAN,0.5 PSC_ACCZ_I,0.4 PSC_ACCZ_P,0.2 Now lets see a log from before the Yaw Autotune, then after  You could eventually do a Autotune of all axis just to make sure since autotune can adjust a couple of filter values that we havent listed above."
175,My quad is drifting while landing in auto mode,11,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Also recheck and change GPS_GNSS_MODE again, the update rate is a bit erractic. Try a value of 1 or 5 and see if it is any better in logs, look for GPA Delta. Also take into account the GPS HDOP (less than 1.0) For example I have plenty of Beidou sats usable but the HDOP is always higher than not using Beidou, and it can take longer to get a good 3D fix and arm."
175,My quad is drifting while landing in auto mode,12,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Hey, * (Shawn) thank you so much for the detailed explanation and quick response. Battery voltage did not cause RTL, When it started the Yaw tuning some warning started to appear “Autotune: Failing to Level” I waited for some time but that warning was keep coming so I switched the mode to RTL for calling the drone to Land. I will change these parameters and post the flight log of a test flight. Thanks for all the help. One more thing, could you please help me to understand the log analysis? like how did you come up with what parameters to change specifically? I have been trying to learn log analysis and watched the Ardupilot log analysis seminar on youtube plus the docs available on the net but I still lag to find out the issue. I would really appreciate it if there is anything you can share with me which can help me to understand it."
175,My quad is drifting while landing in auto mode,13,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","You must have just got to that RTL mode in time, because right around the same time the power safety indicator goes low, it would have done RTL if you didnt. EDIT: I take that back - you were right too - it didnt RTL for battery, and it wasn’t about to. I was looking at the wrong indicator → Safety (armed/disarmed) instead of Flags in the Power section of the log. I’ve really learned (some) log analysis the hard way - going exploring when I’ve had a flight issue, reading the docs over and over, and the developer docs too. There’s no one document of “how to” for ardupilot log analysis, since it depends a lot on how involved you need to get. There were these messages in the log: AutoTune: Roll Rate: P:0.123, I:0.123, D:0.0053 AutoTune: Roll Angle P:13.062, Max Accel:68998 AutoTune: Pitch Rate: P:0.184, I:0.184, D:0.0074 AutoTune: Pitch Angle P:11.283, Max Accel:70760"
175,My quad is drifting while landing in auto mode,14,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Hey, * (Shawn), A big thanks for all the help. I have updated the parameters as per your suggestion but it is behaving a little weirdly. Logs after updating the Autotune parameters: * Logs after updating the Autotune para and Notch filter para: * After updating all the parameters (Autotune & Notch) as per your suggestion, I felt that drone is shaking and drifting away in loiter mode. When I did the second flight again, the drone was shaking very badly, so I landed it quickly (here is the log: *  ) What could go wrong? It is behaving very weird and I am a little afraid to do anything. So eagerly waiting for your response & suggestion."
175,My quad is drifting while landing in auto mode,15,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","The 2nd log there actually looks good, attitude and desired attitude are quite close. The harmonic notch filter is set up correctly. Just set this so we can see the results in next flights INS_LOG_BAT_OPT,2 I see no differences between the last log and the previous log to cause the apparent lack of control. I think there’s 2 things to do to fix this.  Set the Fence, probably take off in AltHold anyway especially during testing Adjust some position control parameters  1 I highly recommend setting FENCE_ENABLE,1 then you can not arm until Home can be set. This can take a while but it means you at least have a known-good home point and relatively stable GNSS positioning. And you have time to think about your preflight check list and planned flight  2 Since you are arming and taking off in Loiter, it could be affected by the GNSS position wandering. You can test this by arming and taking off in AltHold , hover a while to see if everything looks OK, then switch to Loiter and see if there’s movements and what looks like oscillations. If so, set these, half of their default values PSC_POSXY_P,0.5 PSC_VELXY_D,0.25 PSC_VELXY_I,0.5 PSC_VELXY_P,1.0 Well, probably set these values anyway, there’s no real detriment. Other stuff RC control can be quite sensitive, if yours is try setting ATC_INPUT_TC,0.22 In logs it looks like you are taking off from a slope, and in flight pitch and roll are a couple of degrees apart. Maybe recalibrate “level” by using a spirit level across the tops of your motors and packing under the landing gear to get the “prop disc” as level as possible, then in MissionPlanner, Mandatory…, Accel…, Calibrate Level or QGC, it’s called Level Horizon BATT_FS_CRT_ACT probably should be 1 instead of 2. There’s usually no chance of doing an RTL at critical voltage level. Your current measurement is actually following the voltage measurement, so that’s wrong - but it wont affect performance or stability. It will be nice to get it correct. Did you have the power brick that came with the Cube Orange? Normally these are the settings when using the PowerA connector BATT_VOLT_PIN,14 BATT_CURR_PIN,15"
175,My quad is drifting while landing in auto mode,16,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Yeah! I have the power brick and I have already changed these parameters but the problem is, I have not connected the battery directly to the power brick as my battery is a little big (16000 mAH 6s), and peak current can also go up to 40A+ so I have connected the battery to the PDB as input and connected power brick to PDB as output. I think that’s the reason it is not measuring the current properly. What do you suggest about this? I will do one more test after updating the parameters you suggested. Thanks again!"
175,My quad is drifting while landing in auto mode,17,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","I am using a middle stick transmitter and It has been working fine, Is there any way to find the sensitivity? I mean If you want me to test by giving some gentle roll and pitch commands and later if we can check in the logs to see how sensitive the radio is then let me know I will do it. and one more thing, if it flies well after changing the parameters then shall I proceed with the Yaw tunning and how should I do it? because if I do autotune then I guess it will again start first roll and pitch tunning and then yaw."
175,My quad is drifting while landing in auto mode,18,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","No great need to measure the current, although it is handy. Probably just set BATT_CURR_PIN to -1 and BATT_MONITOR to 3 (voltage only)"
175,My quad is drifting while landing in auto mode,19,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Check through all the things I wrote, I think just about everything you need is in there, at least until we see the next .in log"
175,My quad is drifting while landing in auto mode,20,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Hey! * (Shawn), It flies well after the flight but I see little movement during the flight. I noticed a few things, without updating these paras: PSC_POSXY_P,0.5 : PSC_VELXY_D,0.25 : PSC_VELXY_I,0.5 : PSC_VELXY_P,1.0, the drone takes off well in Althold and flying stable too when I switched to loiter mode but when in next flight I have taken off in loiter mode, it was again shaking badly. So changed I the above-mentioned parameters and did the test flights in both althold and loiter modes and it turned out good in both modes. Here is the log of taking-off in Alt-hold: * Here is a log of taking-off in Loiter: * Now waiting for your signal to do yaw tuning. What I noticed is it is flying well as It was flying without tuning with default parameters and other things only you can tell me. Thanks again for all the help and recommendations. You are great!"
175,My quad is drifting while landing in auto mode,21,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","yeah, that’s true! but I just need to measure the peak current requirement of my drone by flying it in extreme conditions, this will help me to design the power board system for the drone (as they are designed based on the peak current & continuous current). So is there any way to measure the current drawn in the flight without directly connecting the battery to the power brick?"
175,My quad is drifting while landing in auto mode,22,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *",If your sure the current will be higher than the standard power brick can handle then get a Mauch current (and voltage) sensor and BEC
175,My quad is drifting while landing in auto mode,23,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Yes! the continuous current would be more than 30 Apms and this power brick is suitable for 30 Amps current so I prefer not to connect the battery directly to the brick. Is there a way I can limit the max./cont. current drawn? like putting a failsafe that if the continuous current requirement is more than 30 amps then it will land or RTL. In this way, I can check and test it. And sir, Have you got any chance to look at the above logs? please suggest to me any changes to be made and if is it safe to fly for the mission. Thanks for all the help."
175,My quad is drifting while landing in auto mode,24,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","There is MOT_BAT_CURR_MAX but that limit (in whole amps like 40) needs to be well above what you would normally use for most flight conditions, otherwise it will affect stability, payload carrying or wind resistance. It works by arducopter limiting the motor outputs (PWM in old terms) when total current goes above that limit for a set amount of seconds, MOT_BAT_CURR_TC Normally you’d only rely on this when you’ve got some headroom to play with. If you use 30amps to hover and the power brick is only capable of 30 amps continuous then it’s already under stress before any peaks of 60 or 80 amps."
175,My quad is drifting while landing in auto mode,25,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Yeah! thanks for the info * (Shawn), I think If I put the limit for 60 Ams and my continuous power requirement would be around 30Amps then it will work right? And I have done one small mission test flight and here are my observations:  EKF innovations are good, just sometimes the magnetometer shows a little high but still everything is considerable I guess.   Attitude graph is also good, the desired and actual roll & pitch are overlapping well because of the successful roll and pitch tunning (I guess).   Roll & Pitch other estimators are also estimating well enough.    Yaw estimation shows a little weird because I have not done the yaw tunning yet (I guess!) *   Magnetic Innovation also shows fluctuation but I don’t know whether they are under the acceptable range or not. *   Vibrations are a little high, I don’t know the reason but I compared to the earlier flight logs, vibrations are almost doubled, and pitch vibration is high. *   Both barometers measure the same altitude but different temperatures, any explanation for this? *   There is a significant difference between the yaw predicted by the compass and other estimators. *   Here I am having a doubt, I have checked the earlier flight logs when UAV used to land at the cm level accuracy and now it is landing around at a few meters accuracy but in both the logs, It shows the GPS horizontal accuracy more than 1. What could be the issue? *   It seems there is a noise in the gyroscope observation, I don’t know whether it is in acceptable range or not. *   This is my observation sir, here is the flight log of the same flight: * Really looking forward to your response and suggestion. Thanks again! there is so much to learn from you."
175,My quad is drifting while landing in auto mode,26,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Attitude control looks good. Did you try the Calibrate Level/Level Horizon? You should be able to run Yaw Autotune without problems, in fact probably best to run all 3 axis. If you like a snappy yaw response you might want to double the ATC_ACCEL_Y_MAX value that Autotune gives you. Adjust these: INS_HNTCH_FREQ,50 INS_HNTCH_BW,25 INS_LOG_BAT_MASK,0 INS_LOG_BAT_OPT,0 This should finalise the HNOTCH settings Set these to fine tune the compasses, courtesy of MAVExplorer magfit utility, this will save you from doing the Compass/Motor calibration and more COMPASS_USE,0 COMPASS_MOTCT 2 COMPASS_OFS2_X -1 COMPASS_OFS2_Y -190 COMPASS_OFS2_Z -33 COMPASS_DIA2_X 0.987 COMPASS_DIA2_Y 1.002 COMPASS_DIA2_Z 0.867 COMPASS_ODI2_X -0.020 COMPASS_ODI2_Y -0.003 COMPASS_ODI2_Z 0.032 COMPASS_MOT2_X 10.000 COMPASS_MOT2_Y -10.000 COMPASS_MOT2_Z -10.000 COMPASS_SCALE2 1.00 I dont see any other major issues. The only way to improve GPS landing position/accuracy is to experiment with the constellations, or buy a more expensive GPS unit with quality external antenna, or go RTK. There’s always going to be some drift or differences on different days/weeks/months. Caution! Battery rant below  Any reason not to set BATT_FS_CRT_ACT,1 ? I know it can be a personal preference, but batteries can go bad, all sorts of things happen… If the craft is already doing RTL for low voltage, what are the chances of continuing (or starting RTL if the battery suddenly goes bad) when the voltage drops the the critical level? This would be OK if you go conservative and set the Low voltage and Critical voltages higher than usual, say if you had a very high capacity battery pack. Then there might be a chance of completing a RTL with critical voltage - depends on the use case and how far the return to home is. Arguably in that case you still want the critical voltage at a “normal” level and it invokes Land. Let the Low voltage level invoke RTL and put a normal end to a flight. The Critical voltage level is there for when planning was poor (battery age, mission too long?) or something unexpected happened (there’s that bad battery again!) and just Landing without crashing would be good. Rally Points come into it too, particularly for long missions and long flight times."
175,My quad is drifting while landing in auto mode,27,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","I also meant to say, if using the CAN connected Here3 then set this BRD_BOOT_DELAY,3000 to allow the Here3 to boot up OK before the flight controller. This ensures reliable startup so you dont get a missing GPS and compass sometimes."
175,My quad is drifting while landing in auto mode,28,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Yeah! I tried to calibrate the Level Horizon but I guess it still shows some difference. This time I will remove the flight controller and calibrate the level separately. I think this may be the reason that during a straight flight, the drone is not flying level.  Here in the HUD, you can see the drone is a little roll towards the left while flying straight. One more thing what is the parameter “load” in the quick window? (last row)"
175,My quad is drifting while landing in auto mode,29,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *",Yeah! How can I miss that. Thanks for sharing it.
175,My quad is drifting while landing in auto mode,30,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","I tried to change the GPS_GNSS_MODE to different values and did a little hover flight but as you told me to check the GPA Delta (Update rate), I found not much change in that for different GPS_GNSS_MODE values. Here is the test flight log for your reference: *"
175,My quad is drifting while landing in auto mode,31,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","No specific reason but I have been flying the drone with 21v as a critical battery voltage and It works well because I generally fly the drone within a radius of 1km. So when the battery failsafe hits, the drone will come quickly and land with a voltage of around 20.5v which can go down to 19.8v (the cutoff voltage is 19.2v for this battery). I know I have not updated this but I thought once everything (tunning & all) is over, I will update this. And one thing I noticed in the drone is that while landing it lands very fast compared to earlier flights. I know I can change the landing speed parameters but what would you say? Is this landing speed good & safe?"
175,My quad is drifting while landing in auto mode,32,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Dont remove the FC - the calibrate level is all about the “prop disc”, not how level the FC is. If you did it and the motors were all level across their tops left/right/back/forwards/diagonals (and you packed under the landing gear) then that’s how it should be. I was just asking to see if you did it, I didn’t notice any big issue in logs."
175,My quad is drifting while landing in auto mode,33,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","The land speed and land speed high can be set separately. Set the land speed high for the fastest descent rate that is still stable. Set the (slow) land speed for something that wont damage the aircraft or payload, but not so low that the landing is not registered. Just do some test descents in Stabilise mode to work out what you fastest stable descent rate is."
175,My quad is drifting while landing in auto mode,34,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Sometimes testing is where you need the battery voltages set correctly the most. Many people dont set this up at all saying “I’ll do it later once I’ve worked out everything else” when in actual fact this contributes greatly to tuning and fault finding. Not to mention safety! Later it’s less likely to matter once you know more about how long your battery normally lasts, and you get over doing the Autotunes and “moon shot” demonstrations."
175,My quad is drifting while landing in auto mode,35,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","I calibrated the level after putting the assembled drone on the flat-level surface and made sure that all motors were level but is there any better way? I mean how would I make sure that every motor is all level, there will always be some error because I can’t measure the level of the diagonal motor properly as the Centre is occupied by other electronic things. I simply measured the height of every motor from the bottom and check the side motor levels. I would like to hear your way of checking the level of the motor. What way do you calibrate the drone?"
175,My quad is drifting while landing in auto mode,36,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *",Okay! thanks for the info. but why specifically in stabilize mode? Can I check with the land mode? and does the drone go for the fastest decent rate during the failsafe or there is something else that decides what decent rate (fast or slow) should the drone land?
175,My quad is drifting while landing in auto mode,37,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Yeah! that’s true, sorry I did not update this before. I will update it now. My lipo battery cell’s low voltage is 3.2v and high voltage is 4.2v. What would you suggest to update? I have flown the drone till 20.2v before. So shall I set the battery failsafe battery to 21V and the critical battery to 20.4v (BATT_FS_CRT_ACT=1)? Looking forward to your suggestion. Thanks for all the help and for making me understand things. I hope to become an expert like you "
175,My quad is drifting while landing in auto mode,38,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","I use a lightweight spirit level I made with some angle aluminium and then glued on a string level. Putting the drone on a surface that’s potentially not level doesnt work, and there can be slight differences in the landing gear heights too. I put the level across the tops of the motors or props as best as practical in as many directions as practical, and pack under the landing gear to get it as level as possible. Then it doesnt matter what surface it’s on."
175,My quad is drifting while landing in auto mode,39,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","These are the standard values for a 6S lipo BATT_ARM_VOLT,22.10 BATT_CRT_VOLT,21.00 BATT_LOW_VOLT,21.60 MOT_BAT_VOLT_MAX,25.20 MOT_BAT_VOLT_MIN,19.80"
175,My quad is drifting while landing in auto mode,40,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","Just one doubt, I think you calibrated the internal compass because here it shows  DEV_ID2 for the internal compass and DEV_ID for the external compass. I put the preference for CAN compass so I need to update for the same right?  And second, If I integrate the payload and other things then again compass offsets will change so again I guess I have to calibrate it using magfit and update the parameters right?"
175,My quad is drifting while landing in auto mode,41,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *",This seems a very interesting and advanced way of calibrating the level. Do you mind sharing some Images/Photos so That I can understand it better and maybe make one for me?
175,My quad is drifting while landing in auto mode,42,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","These were the MAVExplorer values for the 1st compass in case they were for the CAN compass COMPASS_OFS_X -292 COMPASS_OFS_Y -14 COMPASS_OFS_Z 13 COMPASS_DIA_X 0.966 COMPASS_DIA_Y 1.049 COMPASS_DIA_Z 0.921 COMPASS_ODI_X 0.000 COMPASS_ODI_Y 0.015 COMPASS_ODI_Z -0.007 COMPASS_MOT_X 10.000 COMPASS_MOT_Y -10.000 COMPASS_MOT_Z -1.901 COMPASS_SCALE 1.00 Just put them in and undo COMPASS_USE,0"
175,My quad is drifting while landing in auto mode,43,"I am facing some issues while landing in auto mode, my drone is drifting away and landed around a few meters away. Earlier when I was flying with Here3 GNSS alone, it was flying perfect and landing accurately (few cm errors) but now I fixed 2 GNSS and put GPS_AUTO_SWITCH=0 (Primary GNSS as Here3) because there is a signal loss issue in the second GNSS. What could be the issue? I have checked the EKF Lane 1, everything is under 0.25 which seems good.  * GPS1 Accuracy graph shows this:  * I compared it with the earlier Here3 GNSS alone graph, there is not much difference but yes some difference is there. what could be the issue? Can there be some kind of interference between the 2 GNSS? If yes! then how to check and what would be your recommendation to minimize it? Really looking forward to some help and suggestion. Here is the link for the flight log: *","A string level is like this, also very cheap and usually at any hardware  And I glued it to a bit of aluminium like this  the idea is the new level is about 100th the weight of a normal level and wont weigh down one side of your quad while using it"
176,Custom firmware builder takes 3 days?,1,"I need a custom firmware for my Kakute F7 boards, namely to include canvas mode OSD (or whatever it’s called), to get OSD via HDZero. * Anyway, it looks like the custom firmware builder web page is taking about 70 hours to build a firmware.  That just seems quite odd to me, shouldn’t it take just a minute?  5 minutes?  Is the custom firmware builder automated?  Or maybe someone is doing the builds manually? Thanks…","hello, thanks for the report, indeed something  looks wrong,  we  will  investigate"
176,Custom firmware builder takes 3 days?,2,"I need a custom firmware for my Kakute F7 boards, namely to include canvas mode OSD (or whatever it’s called), to get OSD via HDZero. * Anyway, it looks like the custom firmware builder web page is taking about 70 hours to build a firmware.  That just seems quite odd to me, shouldn’t it take just a minute?  5 minutes?  Is the custom firmware builder automated?  Or maybe someone is doing the builds manually? Thanks…","Looks like the firmware builder was working fine for a few hours, but now it’s back up to 20-24 hours to create a build. By the way, the ONLY feature I would like to add to the “official release” firmware for my Kakute F7, is canvas mode OSD.  The official release firmware is 700-some k - well below 1mb.  Seems like OSD (a very common wanted feature?) can be added to the Kakute F7 official firmware, so that a person doesn’t have to do a custom build.   Anyway, thanks for listening."
176,Custom firmware builder takes 3 days?,3,"I need a custom firmware for my Kakute F7 boards, namely to include canvas mode OSD (or whatever it’s called), to get OSD via HDZero. * Anyway, it looks like the custom firmware builder web page is taking about 70 hours to build a firmware.  That just seems quite odd to me, shouldn’t it take just a minute?  5 minutes?  Is the custom firmware builder automated?  Or maybe someone is doing the builds manually? Thanks…","While I’m not convinced that OSD is a super common feature (not all of us regularly use FPV or downlinked video of any kind), I can agree that if an autopilot includes OSD hardware, it should probably be supported by the native feature set."
176,Custom firmware builder takes 3 days?,4,"I need a custom firmware for my Kakute F7 boards, namely to include canvas mode OSD (or whatever it’s called), to get OSD via HDZero. * Anyway, it looks like the custom firmware builder web page is taking about 70 hours to build a firmware.  That just seems quite odd to me, shouldn’t it take just a minute?  5 minutes?  Is the custom firmware builder automated?  Or maybe someone is doing the builds manually? Thanks…","hello * my quad is tilting to one side…can u pl tell whats the problem. below is the log: Log File C:\Users\PRASHANT SOOD\AppData\Local\Temp\tmp123C.tmp.log Size (kb) 108.5234375 No of lines 2133 Duration 0:00:01 Vehicletype ArduCopter Firmware Version VDD_5V_PERIPH_nO Firmware Hash 4fcfa4b2 Hardware Type Free Mem 0 Skipped Lines 164 Test: Autotune = UNKNOWN - No ATUN log data Test: Brownout = GOOD - Test: Compass = WARN - WARN: Large compass offset in MAG data (X:377.00, Y:43.00, Z:38.00) mag_field interference within limits (9.07%) Test: Dupe Log Data = GOOD - Test: Empty = FAIL - Empty log? Throttle never above 20% Test: Event/Failsafe = GOOD - Test: GPS = FAIL - Min satellites: 0, Max HDop: 99.99 Test: IMU Mismatch = NA - Test: Motor Balance = UNKNOWN - ‘OCTAQUAD/X’ Test: NaNs = FAIL - Found NaN in CTUN.TAlt Found NaN in CTUN.DSAlt Test: OpticalFlow = FAIL - ‘FLOW_FXSCALER’ not found Test: Parameters = FAIL - ‘MAG_ENABLE’ not found Test: PM = UNKNOWN - No PM log data Test: Pitch/Roll = GOOD - Test: Thrust = GOOD - Test: VCC = UNKNOWN - No CURR log data"
176,Custom firmware builder takes 3 days?,5,"I need a custom firmware for my Kakute F7 boards, namely to include canvas mode OSD (or whatever it’s called), to get OSD via HDZero. * Anyway, it looks like the custom firmware builder web page is taking about 70 hours to build a firmware.  That just seems quite odd to me, shouldn’t it take just a minute?  5 minutes?  Is the custom firmware builder automated?  Or maybe someone is doing the builds manually? Thanks…","Prashant - I do not know (I am not an expert). I suggest you post your issue in one of these categories, depending on which version of Arducopter you are running:"
176,Custom firmware builder takes 3 days?,6,"I need a custom firmware for my Kakute F7 boards, namely to include canvas mode OSD (or whatever it’s called), to get OSD via HDZero. * Anyway, it looks like the custom firmware builder web page is taking about 70 hours to build a firmware.  That just seems quite odd to me, shouldn’t it take just a minute?  5 minutes?  Is the custom firmware builder automated?  Or maybe someone is doing the builds manually? Thanks…",We’re up to 65 hours now to generate a custom build.
176,Custom firmware builder takes 3 days?,7,"I need a custom firmware for my Kakute F7 boards, namely to include canvas mode OSD (or whatever it’s called), to get OSD via HDZero. * Anyway, it looks like the custom firmware builder web page is taking about 70 hours to build a firmware.  That just seems quite odd to me, shouldn’t it take just a minute?  5 minutes?  Is the custom firmware builder automated?  Or maybe someone is doing the builds manually? Thanks…",I  see again  what is happening. Thanks  for reporting. I will ping  the maintainer for Kakute board to see if we can include canvas mode by default. O
176,Custom firmware builder takes 3 days?,8,"I need a custom firmware for my Kakute F7 boards, namely to include canvas mode OSD (or whatever it’s called), to get OSD via HDZero. * Anyway, it looks like the custom firmware builder web page is taking about 70 hours to build a firmware.  That just seems quite odd to me, shouldn’t it take just a minute?  5 minutes?  Is the custom firmware builder automated?  Or maybe someone is doing the builds manually? Thanks…",Thanks very much.  
177,How to make use of simulator's time multiplier to speed-up the simulation clock,1,"We need to simulate the UAV to perform tasks many throusands of times, which takes an average of tens of seconds each time, which is quite time-consuming. Is there a way to make use of simulator’s time multiplier to speed-up the simulation clock by modifying the source code, similar to the speed-up gear in windows.","Yes, you can speedup the SITL simulations by using the sim_vehicle.py --sim-speedup parameter"
177,How to make use of simulator's time multiplier to speed-up the simulation clock,2,"We need to simulate the UAV to perform tasks many throusands of times, which takes an average of tens of seconds each time, which is quite time-consuming. Is there a way to make use of simulator’s time multiplier to speed-up the simulation clock by modifying the source code, similar to the speed-up gear in windows.","Yes, that is a useful method. However, can we change the flow rate of time by modifying the source code of the simulator, for example, setting the time flow rate in the simulator to be twice the real time"
178,"Change speed immediately, not on waypoint",0,"Hello, I’m trying to change speed in flight between two waypoints via mavlink command. Example 1: When drone is in a half way in waypoint#2 I’m sending command change speed to 15 m/s, it returns me ACK command and speed up to 10 m/s (max speed limited by parameter) after reached max speed (10 m/s) I send change speed command to 5 m/s. Drone doesn’t change speed to 5 m/s immediately, it must reached waypoint #2 to be able to change speed. Example 2: When drone is in a half way in waypoint#2 I’m sending command change speed from current 5m/s to 10 m/s, it returns me ACK command and start accelerates. Before reached 10 m/s I send command change speed to 5 m/s, it returns me ACK command but not slowing down to 5 m/s it still accelerates. When drone reached 10 m/s or reached waypoint#2 (before reached 10 m/s) it able to change speed to 5 m/s. I need to change it immediately, not waiting on next waypoint. Is there any parameter to change that behaviour?",
179,"Arducopter doesnt check SYSID_THISMAV with ""target_system"" in mavlink packet telemetry",1,"Hello, I’m trying to establish connection through telemetry 868MHz (HM-TRP on Sik Radio) as a secondary (backup) channel, when first channel on WiFi will crash due to its short range). I’m using 3 drones at the same time, so I need connection with all drones in GCS with mavlink. All drones has unique SYSID_THISMAV value (1,2,3) to allow send command into specific drone. Sadly, sending command packet with ID included in packet gives result that every drones received and executed command. For example having 3 drones on the ground connected I’d like to change flight mode through telemetry into one specific drone - it doesnt work. It works like broadcast, so I assume arducopter firmware (tested all versions 4.x.x) receive all packets and doesnt check if it message for him or for other drone without checking “target_system” in mavlink message. By reducing air rate I’ve disabled all SRx params and I’m asking for statuses which I’m only interested in (I dont need all params) using request method. This problem doesnt exist on WiFi connection, since all WiFi modules has unique UDP port (14550, 14551, 14552). The network layer on TCP/IP model sends packets into specific host (by unique UDP port). The 868MHz telemetry module doesnt have any OSI model in layer network to validate datagram like in WiFi connection. I think the arducopter firmware “believe” that all data received through telemetry is for execute without checking/comparing it’s SYSID_THISMAV with “target_system” in mavlink packet. Thats why all my drones changed flight mode at the same time by one command. I’ve tested on SiK 2.2 multi point firmware radio with HM-TRP module and from this topic where friend *  gives me his modified firmware 2.6. for example, I send: set_mode: COMMAND_LONG {target_system : 1, target_component : 0, command : 176, confirmation : 0, param1 : 1, param2 : 0, param3 : 0, param4 : 0, param5 : 0, param6 : 0, param7 : 0} RAW frame: fd1f00000bff004c00000000803f000000000000000000000000000000000000000000000000b0000198d2 * Here is my setup parameters with firmware 2.2 2.6 from friend’s *  firmware: GCS: NODEID: 0 NODEDESTINATION: 65535 NODECOUNT: 4 drone * SYSID_THISMAV: 1 //arducopter NODEID: 1 //telemetry NODECOUNT: 4 NODEDESTINATION: 0 drone #2 SYSID_THISMAV: 2 //arducopter NODEID: 2 //telemetry NODECOUNT: 4 NODEDESTINATION: 0 drone #3 SYSID_THISMAV: 3 //arducopter NODEID: 3 //telemetry NODECOUNT: 4 NODEDESTINATION: 0","Try QGroundControl to see if similar behavior also occurs, as it will come down to a misconfiguration of the drone. I tried it on the original software only change SYSID_THISMAV I wants to use this module in a similar way and I am also struggling with its limitations"
180,Activate S-CURVE,1,How to activate the s-curve? I didn’t find information in the documentation.,"If you are using Copter 4.3, S-Curve navigation is the default and can neither be activated nor deactivated via user preference."
181,Esc calibration-- compass motor calibration gives error,1,"esc calibration-- compass motor calibration gives error, latest 4.1.5 works fine when i install old versions. Help?. I’m using Cuav Nora",* You really want to use Magfit to generate the compass motor coefficients. Also for the Compass offsets (both at the same time actually). It’s easily done using MAVExplorer: * Don’t be intimidated by the the fact it’s a Python utility. MAVExplorer makes this mostly transparent.
181,Esc calibration-- compass motor calibration gives error,2,"esc calibration-- compass motor calibration gives error, latest 4.1.5 works fine when i install old versions. Help?. I’m using Cuav Nora",Why can’t we calibrate the compass motor in the new version? I can’t calibrate PWM Range esc in new version. How can we come up with a solution?
181,Esc calibration-- compass motor calibration gives error,3,"esc calibration-- compass motor calibration gives error, latest 4.1.5 works fine when i install old versions. Help?. I’m using Cuav Nora","You can but it’s inferior, and a general hassle, compared to using Magfit."
182,Variance the Weight,1,"* I was studying the topics where you comment about correct the ATC when variance the weight. I would just like to align the understanding. Currently I have this values: min tow: 9.000g max tow: 10.900g ATC_ACCELL_P_MAX =  46575.27 ATC_ACCELL_R_MAX =  54475.48 ATC_ACCELL_Y_MAX =  10891.68 I pretend add +one baterry to have autonomy larger. Then the load will change as below. min tow: 12.300g max tow: 13.300g It safe to do the account below? min_tow/max_tow = 0,92 ATC_ACCELL_P_MAX =  46575.27 * 0,92 =  43073.37 (New value) ATC_ACCELL_R_MAX =  54475.48 * 0,92 =  50379.58 (New value) ATC_ACCELL_Y_MAX =  10891.68 * 0,92 =  10072.76 (New value)","Looks good to me, yes."
182,Variance the Weight,2,"* I was studying the topics where you comment about correct the ATC when variance the weight. I would just like to align the understanding. Currently I have this values: min tow: 9.000g max tow: 10.900g ATC_ACCELL_P_MAX =  46575.27 ATC_ACCELL_R_MAX =  54475.48 ATC_ACCELL_Y_MAX =  10891.68 I pretend add +one baterry to have autonomy larger. Then the load will change as below. min tow: 12.300g max tow: 13.300g It safe to do the account below? min_tow/max_tow = 0,92 ATC_ACCELL_P_MAX =  46575.27 * 0,92 =  43073.37 (New value) ATC_ACCELL_R_MAX =  54475.48 * 0,92 =  50379.58 (New value) ATC_ACCELL_Y_MAX =  10891.68 * 0,92 =  10072.76 (New value)","Yes, and you can even round down those new values to something convenient like 43000, 50000 (or less), 10000 The single digits and decimal places wont make any noticeable difference. If those original values where from Autotune at 9kg then the new values might even be something like 32000, 38000, 8000 just as rough estimates (9/13 = 0.7) The danger with going too low will be losing resistance to disturbances (wind)."
182,Variance the Weight,3,"* I was studying the topics where you comment about correct the ATC when variance the weight. I would just like to align the understanding. Currently I have this values: min tow: 9.000g max tow: 10.900g ATC_ACCELL_P_MAX =  46575.27 ATC_ACCELL_R_MAX =  54475.48 ATC_ACCELL_Y_MAX =  10891.68 I pretend add +one baterry to have autonomy larger. Then the load will change as below. min tow: 12.300g max tow: 13.300g It safe to do the account below? min_tow/max_tow = 0,92 ATC_ACCELL_P_MAX =  46575.27 * 0,92 =  43073.37 (New value) ATC_ACCELL_R_MAX =  54475.48 * 0,92 =  50379.58 (New value) ATC_ACCELL_Y_MAX =  10891.68 * 0,92 =  10072.76 (New value)",* * Thanks! I go test and shared with you the result.
183,Getting message I not set,1,"Hi.im getting a message in the messages tab that I is not set,first time ive seen this.what have I not set please",We will need more details than that Marty
183,Getting message I not set,2,"Hi.im getting a message in the messages tab that I is not set,first time ive seen this.what have I not set please","Hi Amilcarlucas,thank you for your reply,will send screen shot later today"
183,Getting message I not set,3,"Hi.im getting a message in the messages tab that I is not set,first time ive seen this.what have I not set please","Sorry for the slow reply Amilcarlucas,here is the 1st error message,  *  andnow I have this message coming up on simulation wont let me do any thing with the sim missions * Thank you for your help"
184,Copter-4.3.0-beta2 has been released,1,"Copter-4.3.0-beta2 has been released and can be installed using Mission Planner, QGC or it can be directly downloaded from *. The changes vs 4.3.0-beta1 are in the * and also copied below  Autopilot specific fixes and enhancements a) AIRLink autopilot supports UART2 b) CUAV V6X supports CAN battery monitor by default c) MatekF405-CAN board uses less memory to fix compass calibration issues d) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space e) SkystarsH7HD-bdshot (allows Bi-directional DShot) f) SkystarsH7HD supports VTX power by default EFI support a) Currawong ECU support (added as Electronic Fuel Injection driver) b) Scripting support for EFI drivers (allows writing EFI drivers in Lua) c) SkyPower and HFE CAN EFI drivers (via scripting) Safety features a) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM Minor enhancements a) Autopilot board names max length increased to 23 characters (was 13) b) CAN actuators can report PWM equivalent values (eases debugging) c) Log download speed improved for boards with “block” backends d) Notch filter slew limit reduces chance of notch freq moving incorrectly e) SLCAN disabled when vehicle is armed to reduce CPU load Bug fixes a) DO_JUMP mission command fixed if active command changed before changing to Auto mode b) EKF3 altitude error fix when using dual GPSs and affinity enabled c) FFT indexing bug fixed d) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter) e) MSP fix to report arm status to DJI FPV goggles f) Notch fix for non-throttle notch (was being incorrectly disabled) g) OSD fixes for params, font and resolution h) RPM reporting from harmonic notch fixed i) “Sending unknown message (50)” warning removed j) SBF/GSOF/NOVA GPS auto detction of baud rate fixed k) VideoTX fixes for buffer overruns and Tramp video transmitter support  Although this is only the 2nd beta, 4.3.0 already seems to be quite reliable with only a * We very much appreciate all feedback both positive and negative.",*
185,Strange voltage sags,1,"I wonder what is wrong with that 5” quad and it’s battery. I have as I remember 20A ESC so 80A is max. Maybe 2200 40C battery is little to less. I have 2204 2300kV motors and ESC 20A. Battery is 3S.  * * I have to turn off low voltage failsafe, or set it much lower to not engage failsafe too early. What could be wrong with that setup? I’ve done initial setup, autotuning, motor compass calibration, notch filtering also.","The quality of the battery is not good anymore. At the beginning you have a voltage drop of 1,2V with 6A Current draw and at the end you have a voltage difference of 0,8V with a current draw of 6A. That is abnormal high. You need to try a new battery, I recommend CNHL batteries. BR Harald"
185,Strange voltage sags,2,"I wonder what is wrong with that 5” quad and it’s battery. I have as I remember 20A ESC so 80A is max. Maybe 2200 40C battery is little to less. I have 2204 2300kV motors and ESC 20A. Battery is 3S.  * * I have to turn off low voltage failsafe, or set it much lower to not engage failsafe too early. What could be wrong with that setup? I’ve done initial setup, autotuning, motor compass calibration, notch filtering also.",I have same situation on 3 different batteries I have. None of them are new so I could try get new one to make sure is that the problem.
185,Strange voltage sags,3,"I wonder what is wrong with that 5” quad and it’s battery. I have as I remember 20A ESC so 80A is max. Maybe 2200 40C battery is little to less. I have 2204 2300kV motors and ESC 20A. Battery is 3S.  * * I have to turn off low voltage failsafe, or set it much lower to not engage failsafe too early. What could be wrong with that setup? I’ve done initial setup, autotuning, motor compass calibration, notch filtering also.","I agree with Harold * . The battery sags ~1.5V with a 6A draw and down to 9.6V with a 12A draw. If all 3 batteries are that No Name brand perhaps they are junk. Note: Not a bad job tuning but you have ESC RPM so should be using that to drive the Notch filter rather than throttle. Better yet, use the Bdshot version of firmware for motor RPM."
185,Strange voltage sags,4,"I wonder what is wrong with that 5” quad and it’s battery. I have as I remember 20A ESC so 80A is max. Maybe 2200 40C battery is little to less. I have 2204 2300kV motors and ESC 20A. Battery is 3S.  * * I have to turn off low voltage failsafe, or set it much lower to not engage failsafe too early. What could be wrong with that setup? I’ve done initial setup, autotuning, motor compass calibration, notch filtering also.",I’m not sure how to turn it on  I flashed blheli-s with that rpm feedback. I have to read how to set that notch filtering with it.
185,Strange voltage sags,5,"I wonder what is wrong with that 5” quad and it’s battery. I have as I remember 20A ESC so 80A is max. Maybe 2200 40C battery is little to less. I have 2204 2300kV motors and ESC 20A. Battery is 3S.  * * I have to turn off low voltage failsafe, or set it much lower to not engage failsafe too early. What could be wrong with that setup? I’ve done initial setup, autotuning, motor compass calibration, notch filtering also.","OK, but best use the Bdshot version of firmware for Motor RPM. The data update rate is much faster than serial port data."
185,Strange voltage sags,6,"I wonder what is wrong with that 5” quad and it’s battery. I have as I remember 20A ESC so 80A is max. Maybe 2200 40C battery is little to less. I have 2204 2300kV motors and ESC 20A. Battery is 3S.  * * I have to turn off low voltage failsafe, or set it much lower to not engage failsafe too early. What could be wrong with that setup? I’ve done initial setup, autotuning, motor compass calibration, notch filtering also.",I set in MP for bdshot600. ESC are old Racerstar RS20A Blheli_S OPTO. As I remember but not sure. Could be better to upgrade to some blheli32 4in1 but for now I dont have any.   Motors: I wonder it will work with some 4S. But for sure I’ll test it with some new battery first.
185,Strange voltage sags,7,"I wonder what is wrong with that 5” quad and it’s battery. I have as I remember 20A ESC so 80A is max. Maybe 2200 40C battery is little to less. I have 2204 2300kV motors and ESC 20A. Battery is 3S.  * * I have to turn off low voltage failsafe, or set it much lower to not engage failsafe too early. What could be wrong with that setup? I’ve done initial setup, autotuning, motor compass calibration, notch filtering also.",Do you mean arducopter bdshot version? If yes I flashed that one omnibusf4pro-bdshot (29 august 2022)
185,Strange voltage sags,8,"I wonder what is wrong with that 5” quad and it’s battery. I have as I remember 20A ESC so 80A is max. Maybe 2200 40C battery is little to less. I have 2204 2300kV motors and ESC 20A. Battery is 3S.  * * I have to turn off low voltage failsafe, or set it much lower to not engage failsafe too early. What could be wrong with that setup? I’ve done initial setup, autotuning, motor compass calibration, notch filtering also.",Then configure it. Page down to Bi-directional Dshot. *
186,Arducopter support on New flight controller,1,"I am reaching out for advice- I am trying to build a new UAV using a new flight controller (FC) (*) entering the market … the controller comes loaded with PX4 however I wanted to use Arducopter… In theory it should work. How is arducopter firmware loaded on a new FC,?.. My intent is to first replace a cube on an existing copter and test it before using it on a new X8… my set ups are pretty basic now cube, kde motors / esc (any other suggections on esc), Mauch power, Here compass, RFD w/ TX mod for coms and alex mos gimbal board… so I am looking for advice if there would be any red flags to watch for in testing a new (PX4) Fight controller? Thanks",I belive its basically a pixhawk FMUV6x and is supported.
186,Arducopter support on New flight controller,2,"I am reaching out for advice- I am trying to build a new UAV using a new flight controller (FC) (*) entering the market … the controller comes loaded with PX4 however I wanted to use Arducopter… In theory it should work. How is arducopter firmware loaded on a new FC,?.. My intent is to first replace a cube on an existing copter and test it before using it on a new X8… my set ups are pretty basic now cube, kde motors / esc (any other suggections on esc), Mauch power, Here compass, RFD w/ TX mod for coms and alex mos gimbal board… so I am looking for advice if there would be any red flags to watch for in testing a new (PX4) Fight controller? Thanks",I did receive this message from the board developer… “I don’t think you will be able to load Arducopter without a hwdef file made for the ARKV6X in Ardupilot. You will also need to update Mission-planner to recognize the ARKV6X” If anyone can help me with the steps to get arducopter loaded on the board it is much appreciated Thanks!
187,Throttle response Issue,1,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated",Use Mission Planners Motor Test function if it’s on the bench w/o props. If the motors spin relative to the input throttle percent put props on and fly it.
187,Throttle response Issue,2,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated","hI I did that after calibrating the ESC. Tested the motors in the “Motor Test” page and they appeared to be fine. Also tested this in the “Compass/Motor Cal” page and again they appeared fine - reacted relatively to stick movement. Did not test this as if doing a normal flight without props. Just fitted props and treid to fly (as you suggested, but before I posted the initial question on the thread). Drone motors did not react to the first bit of stick movement, and then spun up quite fast and crashed. Three props and GPS broke off. LL"
187,Throttle response Issue,3,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated",Post the .bin log file
187,Throttle response Issue,4,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated",*
187,Throttle response Issue,5,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated",Hi Any further thoughts on this issue?? LL
187,Throttle response Issue,6,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated","All motors are commanded to maximum, and you are using POSHOLD. Only test in Stabilise then AltHold, after tests and stable flight use Loiter. Are you even getting airborne in the log? If you have BLHELI ESCs then turn off LOW RPM POWER PROTECT What ESCs are they? Set INS_LOG_BAT_MASK,1 for gathering some harmonic notch filter data"
187,Throttle response Issue,7,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated","Xfacta, thanks. Yes, that will explain the behaviour. I’ll make sure I’m in STABALISE and retest a bit later. I’ll set INS_LOG_BAT_MASK to1 while testing and upload the new log file."
187,Throttle response Issue,8,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated","OK. Reran the test - same results. I did a motor test and the individual motors ran as expected. Then tested under the compas/motor calibration and the moters reacted as expected. I made sure “Stabilise” was set as the flight mode. Moved the throttle a bit (about 5% movement) and the motors sped up instantly to probably 50%. Moving the stick back, the motors lag quite a bit then return to idle. The latest log file at * I really thought the “position hold” was the issue as you sugested. Regards Kobus"
187,Throttle response Issue,9,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated",Did you do the test with propelers on?
187,Throttle response Issue,10,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated","No, tested with props off. I’ve had one flyaway in the past (about a year ago). Last week, running the final test before flying, I broke three props and GPS mount. Also, cut my arm to shreds trying to prevent a flyaway - in hindsight, not a great plan. So, am very wary to test with the props on."
187,Throttle response Issue,11,"I seem to have an issue with my QCopter I recently rebuilt the entire system - was working but thought it will be nice to do for a clean-up. In the process I upgraded to the latest firmware I run a Cube Purple in a mini board. The Here3 GPS is installed on a stand far away from anything else and is connected to CAN2. On powerup here is a 5 second delay in booting the Cube to allow the GPS to boot first. During the setup I recalibrated the ESC and tested the motors individually. This seems to be ok. In the “Compass/Motor Calibration” (checked as part of a test) the motors seem to respond in conjunction with the throttle movement of the RC remote. i.e. small stick movement = small speed difference, 50% stick sounds like half speed and full stick sounds like full speed. Tested arming and disarming (without throttle input) that seem to work as expected. The issue comes in that if ARMED the motors do not respond to the first 30% of throttle stick movement, then runs (instantly) at a high speed (probably 50% power) and do not slow down when the throttle is moved to zero. Also, the motors do not disarm if a disarm instruction is sent. After a while the FC reports an accident and disarms the motors. This is while the drone is on my desk without props. The .bin file is at * Any help or advice would be appreciated",Search this forum for threads with “propellers off” to find under which circumstances your tests are invalid.
188,Take off issue 3inch cinewhoop,1,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)","You have your PIDs completely untuned. The default PIDs, which you use, are quite OK for a 9""-sized quad, but typically way too much for a small high-voltage quad. Could you please provide:  the kV rates of your motors; the overall weight of the craft (with a battery); the pitch of your propellers?  I will try to scale the tuning of my 3"" quad to your setup, so that you (hopefully) have a reasonable starting point. (After that, some adjustments, including running an autotune, will still be necessary, but the initial flight experience might be better)."
188,Take off issue 3inch cinewhoop,2,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",* post updated
188,Take off issue 3inch cinewhoop,3,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)","My suggestions are as follows: ATC_ACCEL_P_MAX: 279000 ATC_ACCEL_R_MAX: 349000 ATC_ACCEL_Y_MAX: 103000 ATC_RAT_PIT_P: 0.124 ATC_RAT_PIT_I: 0.124 ATC_RAT_PIT_D: 0.001 ATC_RAT_RLL_P: 0.068 ATC_RAT_RLL_I: 0.068 ATC_RAT_RLL_D: 0.001 ATC_RAT_YAW_P: 0.18 <— these seem to match the default ones, coincidentally ATC_RAT_YAW_I: 0.018 Note that:  The PID values are basically my PIDs scaled by 0.4, and this 0.4 comes from my idea of how that would scale depending on kV of motors, prop pitch, craft weight and voltage. Since our frames are very similar, this might do the trick. The ACCEL values are, again, my values scaled by the weight. These values implicitly assume that you already set up notch filtering, in particular the one using bidirectional DShot. If not:  You may want to decrease all PIDs sharply, e.g. by a factor of 2, if you still experience high oscillations at startup. I would strongly recommend to set up filtering anyway. This will allow for much sharper tunes and better flying overall.   "
188,Take off issue 3inch cinewhoop,4,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",tested  * (691.6 KB)
188,Take off issue 3inch cinewhoop,5,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",Fligh test video
188,Take off issue 3inch cinewhoop,6,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)","It’s never going to fly with those default Rate and Gyro filter values with a 3"" craft. Go to Mission Planners Mandatory Hardware>Initial Parameter Setup."
188,Take off issue 3inch cinewhoop,7,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",calculate initial parameters airscrew size in inch 3 Set After change same result * (649.2 KB) You can see 1st post
188,Take off issue 3inch cinewhoop,8,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",The log file didn’t attach
188,Take off issue 3inch cinewhoop,9,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)","Could you maybe please read my entire post, and not just the parameters? Since you don’t have harmonic notch set up, these particular PIDs may be too high for you. The video rather supports this. Please divide all the _P and _I values by two and repeat the test. If it gets noticeably better, but not flyable yet, repeat that. And yet again: the default PID values, which Mission Planner seems to set up for you, are too high for your craft! The filters, which * was speaking about, are the following values: ATC_RAT_PIT_FLTD ATC_RAT_PIT_FLTT ATC_RAT_RLL_FLTD ATC_RAT_RLL_FLTT ATC_RAT_YAW_FLTT which can all be safely set to 50 (and even to 100), and INS_GYRO_FILTER which can be set to 100 (and even to 200 together with the parameters above). Please use these values for initial tests (50 and 100 correspondingly). And a final remark - don’t think that Mission Planner knows what to do! It typically does not. Use your brains instead. If you cannot, for any reason, choose Betaflight."
188,Take off issue 3inch cinewhoop,10,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",Where is the compass?
188,Take off issue 3inch cinewhoop,11,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",My 1st custom made 450frame pixhawk quadcopter excellent flight I dont like betaflight
188,Take off issue 3inch cinewhoop,12,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",No gps and compass  
188,Take off issue 3inch cinewhoop,13,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",That’s funny. It’s spinning on the ground and you wonder why. There were many other things wrong but you need a compass. Take several steps back and start over. A small propped multirotor with Arducopter is nothing like a 450 size craft.
188,Take off issue 3inch cinewhoop,14,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",New compass ordered after 2 days delivered
188,Take off issue 3inch cinewhoop,15,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",My frame and hardware build good Trying to understand  software parameter setting 
188,Take off issue 3inch cinewhoop,16,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",today test Much better than the first and 1 more changes  MOT_SPIN_MAX 0.95 to 0.65 not shaking *
188,Take off issue 3inch cinewhoop,17,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)","Glad to see you have some attitude control at least. I don’t see how MOT_SPIN_MAX would affect your flying, since in the provided logs your motor outputs never exceed 0.5. That would be really interesting if that does affect your flying. I would rather expect changes from e.g. MOT_THST_EXPO, which is usually much better to be around 0.65 than what default settings suggest. Just as a side note, Ardu resets the battery consumption counter on powering on. So if you did some tests and then power-cycle without replacing the battery, you either want to adjust the battery capacity, or track the voltage more closely, so that you don’t drain your battery completely, as it was in your last test. With the current state, you might want to go and run the autotune. It is best done in a nearly still weather (I know not everyone can afford that), and in your conditions, I would find some nice area with soft surface so that a crash would harm less. I would recommend doing your tune one axis at a time, given that an initial tune goes much longer than a tune starting from an already good point, and that your battery is not “infinite”."
188,Take off issue 3inch cinewhoop,18,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",cant outdoor flying bacause rain outside flying in parking small area
188,Take off issue 3inch cinewhoop,19,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",Here is a build of the bdshot version + bootloader * (919.9 KB) * (17.3 KB)
188,Take off issue 3inch cinewhoop,20,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",thanks bro lets try something
188,Take off issue 3inch cinewhoop,21,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",I don’t understand your question
188,Take off issue 3inch cinewhoop,22,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)", compass not working  Esc telemtry not work  set SERIAL7_PROTOCOL 23         
188,Take off issue 3inch cinewhoop,23,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",tested  *
188,Take off issue 3inch cinewhoop,24,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",So is it working or not working? You need to provide more details of your problems in order to get help. You say “compass not working” and then show a picture of the compass working - which is it?
188,Take off issue 3inch cinewhoop,25,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",I literally have no idea what you are saying
188,Take off issue 3inch cinewhoop,26,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",Never mind all ok … 
188,Take off issue 3inch cinewhoop,27,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)","* How to get real-time display on mission planner esc rpm, current,temp via usb"
188,Take off issue 3inch cinewhoop,28,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)","bdshot only gives RPM, you need to use regular ESC telemetry to get the rest (so serial protocol 16 and mavlink connection needs to be mavlink v2)"
188,Take off issue 3inch cinewhoop,29,"*  skystar h743 hd dual gyro + km60 blheli_32 esc stack  1507 3800kv motor 3"" prop Gemfan D75 3 blade 4s 95c 850mah battery Weight with battery - 372g copter firmware 4.3.0 beta1 log file attachment calculate initial parameters airscrew size in inch 3 * (649.2 KB) calculate initial parameters airscrew size in inch default * (436.0 KB)",thanks * * * for support  https://drive.google.com/file/d/1E2KkOH9YF3HSQ-od8TU6-iXIEles0NP-/view?usp=sharing more flight more improvement  test log file  : *
189,Battery remaining percentage stuck on 0%,1,"Ok, i’m doing my first setup, i have the pixhawk 6c and the PM07 power board from Holybro.  I am powering my setup from a bench power supply. Everything was going great until I tried to setup the battery monitor.  Now no matter what I do, the remaining battery percentage is stuck on 0% and i get the “Prearm: Battery 1 unhealthy” message and I cant get rid of it.  Even selecting disabled for the monitor doesn’t get rid of this message. Any ideas?  Luckily I saved my params right before this operation so I can revert back, and then everything is fine again and it says 98% remaining again.  Not sure why configuring the power monitor breaks the system.","I think I resolved this by comparing my params to the saved params.  Looks like the default Pinout was correct but when I select a hardware version it changes to incorrect parameters.  I found this on the holybro website: * With Pixhawk 6C: If using power1 port, go to “Config” tab and input the following in the parameter list:   BATT_VOLT_PIN: 8   BATT_CURR_PIN: 4   Everything seems to be working again."
189,Battery remaining percentage stuck on 0%,2,"Ok, i’m doing my first setup, i have the pixhawk 6c and the PM07 power board from Holybro.  I am powering my setup from a bench power supply. Everything was going great until I tried to setup the battery monitor.  Now no matter what I do, the remaining battery percentage is stuck on 0% and i get the “Prearm: Battery 1 unhealthy” message and I cant get rid of it.  Even selecting disabled for the monitor doesn’t get rid of this message. Any ideas?  Luckily I saved my params right before this operation so I can revert back, and then everything is fine again and it says 98% remaining again.  Not sure why configuring the power monitor breaks the system.","I had the same problem, BTW Pixhawk 6 uses digital battery monitor I realised. So my old Battery Monitor for P4 can’t use here. I mess up the other time the configuration as well. Took a day of figuring out with no available. Well until I search this forum up."
189,Battery remaining percentage stuck on 0%,3,"Ok, i’m doing my first setup, i have the pixhawk 6c and the PM07 power board from Holybro.  I am powering my setup from a bench power supply. Everything was going great until I tried to setup the battery monitor.  Now no matter what I do, the remaining battery percentage is stuck on 0% and i get the “Prearm: Battery 1 unhealthy” message and I cant get rid of it.  Even selecting disabled for the monitor doesn’t get rid of this message. Any ideas?  Luckily I saved my params right before this operation so I can revert back, and then everything is fine again and it says 98% remaining again.  Not sure why configuring the power monitor breaks the system.","Thanks Joseph, yes the 5X/6X uses power modules ending in D (digital)(I2C), but it seems the 6C still uses analog modules. For some reason when I tried to configure using the tab in mission planner:  Monitor – “Analog Voltage and Current” Sensor – “9: Holybro Pixhawk 4 PM” (Holybro Power Module) The “HW VER” – PixHawk it configured the pins to other than: BATT_VOLT_PIN: 8 BATT_CURR_PIN: 4  After using the tab to setup the PM07, I went back and changed those parameters manually and everything started working properly."
190,No ESC dshot telemetry on CUAV Nora,1,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",Can you post your config? What channels are you connected to? Note that ESC telemetry requires dshot. Note that there are some level shifters on some of the channels of the original Nora. On the Nora+ they have removed these and dshot (and bi-directional dshot) works fine.
190,No ESC dshot telemetry on CUAV Nora,2,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Thanks Andy for your clarifications. I have to admit that the support quality for CUAV Nora is terrible given how expensive this FC is. There is no way to get the simplest information (such as the pin numbers for the second battery’s voltage and current), not to mention the issue of the Nora+. What exactly does this mod bring? (I’ve noticed only that some serial port sockets are green). Does it mean that there is no way of fixing the issue for Nora (non plus version)? Here they say: * Nora+ supports monitoring Servo port voltage, the maximum input voltage of Servo port is 10V; other parts have no difference. I attach my config, I’ve tried much more than that (serial ports with the protocol 16, BLH masks, BLH auto on and off, etc) * (18.3 KB) The banner message states that the outputs 1-8 are DSHOT600, so I hope my ESCs don’t work just in the PWM mode?"
190,No ESC dshot telemetry on CUAV Nora,3,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",I loaded up your config on my Nora+ and all works fine - I get ESC telemetry no problem
190,No ESC dshot telemetry on CUAV Nora,4,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Thank you for checking this. I think that it should also work for me, as it is fine with BetaFlight. Does it matter that I have the non-plus Nora variant? BTW what do you mean by ESC telemetry working? Which parameters do you monitor and where? In Mission Planner HUD or in the logged telemetry? I can see that contrary to the other ESCs I have (for example, Airbot Wraith32), Tekko32 F4 does not output the temperature. Maybe they also do not output the voltages, and the currents and RPMs are reported correctly but I’ve not checked this?"
190,No ESC dshot telemetry on CUAV Nora,5,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",I look in the Mission Planner status tab. I am using a T-Motor F55 Pro II ESC
190,No ESC dshot telemetry on CUAV Nora,6,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",Just in case its firmware related the firmware I am using is this - *
190,No ESC dshot telemetry on CUAV Nora,7,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Thank you so much for your help, I did not know that there is already the bdshot version for Nora, I’ve checked this only recently and there wasn’t. I’ll give it a go. For betaflight and ESCs other than Tekko32, the temperature is reported only over the telemetry serial port, while the RPMs are transmitted via bdshot. Is this to be expected also here? Do you have the tm serial port connected? Can bdshot work with 8 motors?"
190,No ESC dshot telemetry on CUAV Nora,8,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",For this check I only used the telemetry serial port My understanding is that only a few ports will work with bdshot on the regular Nora because of level shifters. On the Nora+ 12 channels should work with bdshot.
190,No ESC dshot telemetry on CUAV Nora,9,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Yes, I can confirm that on my another X8 copter also equipped with Nora (non-plus) but different ESCs (Airbot Wraith32), I had exactly that problem: TM was reported only for some motors. I could not figure out which ones and why it was so. Is the problem related to certain outputs only? Is there a way to get rid of the level shifters? Are they implemented as a hardware? Why are the level shifters a problem? Do they introduce a delay?"
190,No ESC dshot telemetry on CUAV Nora,10,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Level-shifters are in hardware usually done to prevent the FMU from overvoltage. The main issue with them is that they are unidirectional - so dshot should work, bdshot not so much. I am not sure why they would effect dshot output. My understanding is that they are on outputs 1-8, so you should find 9-12 work better"
190,No ESC dshot telemetry on CUAV Nora,11,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Thanks, after trying in the dark for so long now I have got so much valuable information! So what setup do you suggest? Try to use outputs 9-12 for dshot with tm (over serial) and say 1-4 for the other motors, also dshot but the tm won’t work? How to configure all this? Set up the blh_mask for the channels 9-12? Is there any schematics available for Nora and Nora+? Maybe it is possible to remove the problematic chip and connect the paths? If you are so familiar with the Nora internals, maybe you know what is the pin setup for the battery2? (current and voltage)?"
190,No ESC dshot telemetry on CUAV Nora,12,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","No schematics I checked my notes - on the Nora 1-8 have unidirectional level shifters whereas 9-14 do not. So 9-14 should work with bdshot. 1-8 should work with dshot if they do not it would be good to confirm. Are you able to confirm that 9-14 work and 1-8 do not? You can do this by using SERVO_BLH_OTYPE and SERVO_BLH_MASK,  you would also need to shift the servo motor functions to 9-14 From the hwdef, these are the generated analog pins:"
190,No ESC dshot telemetry on CUAV Nora,13,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Starting to reconfigure… but how do I know if the ESCs connected to 1-8 support DSHOT? By providing the bidirectional dshot telemetry? I’ve suggested the BLHELI_32 developers that it would be great to be able to signal with the configurable LED output if say the ESC has entered the DSHOT mode, that it provides the bidshot or serial port telemetry etc. Here is a picture of the Nora motherboard: Is the level shifter implemented by one of the chips on the right side? Thanks for the hint about the analog pins, going to check also this."
190,No ESC dshot telemetry on CUAV Nora,14,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",No idea about the internals. You can only get telemetry with dshot - whether via serial port or bdshot
190,No ESC dshot telemetry on CUAV Nora,15,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","I know, but how should I recognize that I’ve got no dshot on 1-8? I’ve asked if this should be by not providing ESC telemetry for those outputs?"
190,No ESC dshot telemetry on CUAV Nora,16,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",You won’t get telemetry over the serial channel if its not dshot
190,No ESC dshot telemetry on CUAV Nora,17,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","If I get the ESC telemetry, it’s certainly dshot. But if I get no ESC telemetry, does it mean that there is no dshot? If the ArduPilot’s banner message shows DSHOT for the output, does it mean that at least in the FC->ESC direction the protocol is certainly DSHOT? (if the ESC reacts to the control) Is it possible that at some point during the flight the dshot degrades because of those level shifters, and the control is lost?"
190,No ESC dshot telemetry on CUAV Nora,18,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",Really I’m not sure - the only reliable way to tell is to put a logic analyzer on the signal
190,No ESC dshot telemetry on CUAV Nora,19,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","I’ve done the following setup: outputs 1,2 - motors 3,4,5 - other functions (the gear, triggering photos) 9-14 - motors And in the banner message I’ve got: DSHOT600: 1-4, 9-12 PWM: 5-8, 13-14 And no dshot telemetry. Maybe I’ll give it a try with the bidirectional dshot. But still it is surprising why there is no DSHOT on 13-14 and there is on 3,4 - maybe they share a timer with 1,2?"
190,No ESC dshot telemetry on CUAV Nora,20,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",You need to observe the groups for servo functions - * - all functions in the same group must be of the same type
190,No ESC dshot telemetry on CUAV Nora,21,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Now I’ve checked with Nora bidirectional firmware, and with the motors grouped so that all of them are connected to the DSHOT outputs (according to the banner message), that is 1-4 and 9-12. But still no telemetry, no matter if the ESC serial TM is connected or not. The ESCs are Tekko32 F4 with the newest beta firmware. I’ll check with other ESC models."
190,No ESC dshot telemetry on CUAV Nora,22,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Finally! Something has started to work as expected. I’ve connected an Airbot Wraith32 to the output 12 (which is the motor 8 in my case) and… it works! The ESC TM is (unsurprisingly?) reported for channel 12, and it works over bidirectional dshot. So the problem is caused by Tekko32 F4 ESCs. Now the question is: when the ESC start reporting the TM correctly, will I be able to receive it for the ESCs connected to the outputs 1-4? Not bidirectional dshot, but maybe over the serial port? Why does at least part of the TM (the RPM) get to BetaFlight from the Tekko32 F4s?"
190,No ESC dshot telemetry on CUAV Nora,23,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",I didn’t see mentioned whether or not there’s bdshot firmware on the Nora
190,No ESC dshot telemetry on CUAV Nora,24,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",It’s in master and will be in 4.3
190,No ESC dshot telemetry on CUAV Nora,25,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?",I meant installed on the FC. Are you saying that there will no longer be a separate .bdshot apj?
190,No ESC dshot telemetry on CUAV Nora,26,"An X8 drone, all the ESCs are Tekko32 F4 (not 4in1), flashed with blheli_32 32.91 (telemetry-enabled beta). The FC is CUAV Nora, so no bidirectional dshot (yet?), the firmware version is 4.3.0-beta1. The ESC telemetry is not working at all. I’ve flashed an BetaFlight Omnibus F4 board and after connecting a motor signal cables + the serial telemetry (+ of course GND) I’m getting the readings in the BetaFlight GUI (of course only those available there, so no voltage/current and also no ESC temperature as this seems not to be reported by Tekko32). And in MissionPlanner there are no ESC readings of any kind. I don’t even know how to diagnose this, do the ESCs get queried about the telemetry? I’ve suggested in the blheli_32 that some configurable diagnostics would be available via ESC LEDs, as now there is simply no way of saying what’s happening. The dshot debug parameter displays failure message in the Mission Planner. The banner message shows that DSHOT600 is enabled for all the motors. If the bandwidth for 8 motors is a problem, is there a way of restricting the TM to some motors? Does the SERVO_BLH_MASK work w.r.t. the telemetry, or only the passthrough? (BTW the latter is also not working with ArduPilot in my case). Please confirm that the dshot telemetry issue is a problem indeed. Maybe there are some suggestions how to debug?","Sorry, no - it’s regular firmware installed on the FC. I have done a bdshot version recently."
191,Manual tuning D term,1,"So auto-tune has usually worked pretty well for me, but I wanted to try manual tuning for fun.  So raising the D term I’m looking for oscillations.  Really?  For P it’s obvious, but cranking the D term never makes my unit go crazy like a really high P and I.  What am I looking for?  As D increases you can tell it’s not flying well, but nothing dramatic.  There’s a pulsing on the motors like it’s constantly hunting for the right rpm.  I that it?",You saw this presumably? * D-term oscillation is quite high frequency
192,Battery monitoring pixhawk 5x,0,"Hi, I have trouble using the PM02D and set the parameters for battery monitors. The documentation says ‘Do not try to use the “Battery Monitor” tab to setup the I2C power monitors for the Pixhawk 5X’ and set the following parameters: BATT_MONITOR=21 BATT_I2C_BUS=1 BATT_I2C_ADDR=65 However, I don’t seem to have the last two parameters in my parameter list. I use ardupilot 4.4dev, listed in the pixhawk 5x firmware repository. Thanks, Eriki",
193,Altitude movement in windy day,1,I thought I had a decent tune on my X8 until the past 2 days flying in >10mph winds I notice the drone does not hold the altitude well… On the HUD the height displayed doesnt change yet the copter is moving as much as 1 near-2 meters at time… todays log I made some adjustments better but still a lot of vertical movement in loiter and altitude hold… I am wondering if it is something as simple as covering the exposed flight controller? or if there is a larger issue… * is attached,Good reading here: Similar topic: Recommend a rangefinder for better performance overall.
193,Altitude movement in windy day,2,I thought I had a decent tune on my X8 until the past 2 days flying in >10mph winds I notice the drone does not hold the altitude well… On the HUD the height displayed doesnt change yet the copter is moving as much as 1 near-2 meters at time… todays log I made some adjustments better but still a lot of vertical movement in loiter and altitude hold… I am wondering if it is something as simple as covering the exposed flight controller? or if there is a larger issue… * is attached,"Assuming the tuning and setup is all dialed in, covering the flight controller or at least putting some foam over the barometer can help.  It’s an easy fix and at the very least will help keep the dirt out of the sensor."
193,Altitude movement in windy day,3,I thought I had a decent tune on my X8 until the past 2 days flying in >10mph winds I notice the drone does not hold the altitude well… On the HUD the height displayed doesnt change yet the copter is moving as much as 1 near-2 meters at time… todays log I made some adjustments better but still a lot of vertical movement in loiter and altitude hold… I am wondering if it is something as simple as covering the exposed flight controller? or if there is a larger issue… * is attached,"Thx Yuri I like the airspeed estimation… it is quite advanced but I think it will be worth trying on the x8, unfortunately I will need to wait several days as weather is currently an issue… I also plan to build a cover (dome) but hope the barometer will perform better after doing the Barometer compensation"
194,Bug? Help needed with MAV_CMD_DO_REPOSITION and heading values,1,"Hi all, I’ve written a simple mission executive that runs on a Raspberry Pi companion computer. It issues MAVLink commands in Guided Mode to ArduPilot and subscribes to various messages to determine ACK/NACK, command completion (has a waypoint been reached) etc. However, I have a question that I’m hoping someone can help me with… I’m using MAV_CMD_DO_REPOSITION to fly to waypoints and have configured the heading as a Float.NaN in order to allow ArduPilot to determine and set the heading towards the destination. This all works as expected, no issues. However, if I specify an explicit heading it appears to be ignored. Is this expected behavior, a bug or is there something else I need to do? Many thanks! Max","It might be unimplemented, I need to check but in the answer in here *  I was able to hold the heading and move backwards."
194,Bug? Help needed with MAV_CMD_DO_REPOSITION and heading values,2,"Hi all, I’ve written a simple mission executive that runs on a Raspberry Pi companion computer. It issues MAVLink commands in Guided Mode to ArduPilot and subscribes to various messages to determine ACK/NACK, command completion (has a waypoint been reached) etc. However, I have a question that I’m hoping someone can help me with… I’m using MAV_CMD_DO_REPOSITION to fly to waypoints and have configured the heading as a Float.NaN in order to allow ArduPilot to determine and set the heading towards the destination. This all works as expected, no issues. However, if I specify an explicit heading it appears to be ignored. Is this expected behavior, a bug or is there something else I need to do? Many thanks! Max","My current work around is to issue a SET_POSITION_TARGET_GLOBAL_INT with the appropriate frame and mask bits. However, I’d prefer to use MAV_CMD_DO_REPOSITION as it gets ACKed by ArduPilot, i.e. I know that the command has been seen by the flight controller."
194,Bug? Help needed with MAV_CMD_DO_REPOSITION and heading values,3,"Hi all, I’ve written a simple mission executive that runs on a Raspberry Pi companion computer. It issues MAVLink commands in Guided Mode to ArduPilot and subscribes to various messages to determine ACK/NACK, command completion (has a waypoint been reached) etc. However, I have a question that I’m hoping someone can help me with… I’m using MAV_CMD_DO_REPOSITION to fly to waypoints and have configured the heading as a Float.NaN in order to allow ArduPilot to determine and set the heading towards the destination. This all works as expected, no issues. However, if I specify an explicit heading it appears to be ignored. Is this expected behavior, a bug or is there something else I need to do? Many thanks! Max",Got your point. I have a pr about sending other target values on  position target global int messages.  Feel free to use to patch the firmware with it if you’re working on simulation. Hope it goes into the master soon.
195,Troubleshooting motor speed unchanging,1,"Hi, this is my first build.  I am using the pixhawk 6c with the ESC’s from Holybro (BL_Heli32 I believe). I did ESC calibration with type set to both normal and DSHOT1200 I was able to do min and max throttle and got the tones like the wiki says in both modes.  The motors turn off when throttle is at 0% and spin at low RPM when throttle is anything above 0%. When I arm the copter (no propellers) the motors all begin spinning at low RPM.  But when I push the throttle stick the motors don’t seem to change RPM, or very little if they do (I can’t really tell). I already calibrated the radio, and that part looks good, I see the throttle stick moving from 982 to 2006. How do I get the motors to spin fast?","I just tried increasing the voltage on my powersupply (I was running at 15V), when I hit 22V the motors all of the sudden behave as expected, but at 20V they do not.  This is strange to me, any explanations?"
195,Troubleshooting motor speed unchanging,2,"Hi, this is my first build.  I am using the pixhawk 6c with the ESC’s from Holybro (BL_Heli32 I believe). I did ESC calibration with type set to both normal and DSHOT1200 I was able to do min and max throttle and got the tones like the wiki says in both modes.  The motors turn off when throttle is at 0% and spin at low RPM when throttle is anything above 0%. When I arm the copter (no propellers) the motors all begin spinning at low RPM.  But when I push the throttle stick the motors don’t seem to change RPM, or very little if they do (I can’t really tell). I already calibrated the radio, and that part looks good, I see the throttle stick moving from 982 to 2006. How do I get the motors to spin fast?","In BLEHLI suite turn off Low RPM Power Protect Only test the motors using MissionPlanner motor test, otherwise put on props and fly. Trying to test without actually flying gives misleading results."
195,Troubleshooting motor speed unchanging,3,"Hi, this is my first build.  I am using the pixhawk 6c with the ESC’s from Holybro (BL_Heli32 I believe). I did ESC calibration with type set to both normal and DSHOT1200 I was able to do min and max throttle and got the tones like the wiki says in both modes.  The motors turn off when throttle is at 0% and spin at low RPM when throttle is anything above 0%. When I arm the copter (no propellers) the motors all begin spinning at low RPM.  But when I push the throttle stick the motors don’t seem to change RPM, or very little if they do (I can’t really tell). I already calibrated the radio, and that part looks good, I see the throttle stick moving from 982 to 2006. How do I get the motors to spin fast?","Thanks, i’m changing my wiring up to uses the FUM/PWM Outs so i can do passthrough.  Ill let you know what happens."
195,Troubleshooting motor speed unchanging,4,"Hi, this is my first build.  I am using the pixhawk 6c with the ESC’s from Holybro (BL_Heli32 I believe). I did ESC calibration with type set to both normal and DSHOT1200 I was able to do min and max throttle and got the tones like the wiki says in both modes.  The motors turn off when throttle is at 0% and spin at low RPM when throttle is anything above 0%. When I arm the copter (no propellers) the motors all begin spinning at low RPM.  But when I push the throttle stick the motors don’t seem to change RPM, or very little if they do (I can’t really tell). I already calibrated the radio, and that part looks good, I see the throttle stick moving from 982 to 2006. How do I get the motors to spin fast?","Looks like that did the trick, THANKS!"
196,Mission ignoring DO_CHANGE_SPEED flying WPNAV_SPEED instead,1,"Flying a typical test mission today the copter was flying faster than the 3 m/s than I had programmed in the mission. I check everything back on the work bench, and found that the copter had been flying 10 m/s - which is the setting for WPNAV_SPEED. It appears that the DO_CHANGE_SPEED command of “3 m/s” was ignored. Attached is a link to the log - if anyone has any ideas on what I might have done wrong to cause this, I’d appreciate the help. Thank you. * * *","I do have the same problem. WPNAV_SPEED is set to 8 m/s. In the misison I command 5 m/s with DO_CHANGE_SPEED, yet the drone continues to fly with 8 m/s after the command."
196,Mission ignoring DO_CHANGE_SPEED flying WPNAV_SPEED instead,2,"Flying a typical test mission today the copter was flying faster than the 3 m/s than I had programmed in the mission. I check everything back on the work bench, and found that the copter had been flying 10 m/s - which is the setting for WPNAV_SPEED. It appears that the DO_CHANGE_SPEED command of “3 m/s” was ignored. Attached is a link to the log - if anyone has any ideas on what I might have done wrong to cause this, I’d appreciate the help. Thank you. * * *",I’ve just been playing with this in the simulator and I’ve noticed the same thing.  DO_CHANGE_SPEED in a mission was ignored and the quad flew at WPNAV_SPEED.
196,Mission ignoring DO_CHANGE_SPEED flying WPNAV_SPEED instead,3,"Flying a typical test mission today the copter was flying faster than the 3 m/s than I had programmed in the mission. I check everything back on the work bench, and found that the copter had been flying 10 m/s - which is the setting for WPNAV_SPEED. It appears that the DO_CHANGE_SPEED command of “3 m/s” was ignored. Attached is a link to the log - if anyone has any ideas on what I might have done wrong to cause this, I’d appreciate the help. Thank you. * * *","Thanks very much for testing.  I’ve added this to our * and we will investigate. EDIT: ah, wait.  *.  If you move the DO_CHANGE_SPEED command to be immediately after a waypoint then it will work.  I think we can get this fixed before the final release."
196,Mission ignoring DO_CHANGE_SPEED flying WPNAV_SPEED instead,4,"Flying a typical test mission today the copter was flying faster than the 3 m/s than I had programmed in the mission. I check everything back on the work bench, and found that the copter had been flying 10 m/s - which is the setting for WPNAV_SPEED. It appears that the DO_CHANGE_SPEED command of “3 m/s” was ignored. Attached is a link to the log - if anyone has any ideas on what I might have done wrong to cause this, I’d appreciate the help. Thank you. * * *","Thank you * . Regarding the Known Issue - it states that DO_CHANGE_SPEED fails if immediately after TAKEOFF. In my test flight, there was a DELAY command after TAKEOFF. So for clarification, it does not appear that DO_CHANGE_SPEED not being “immediately” after TAKEOFF is a precise description of the problem."
196,Mission ignoring DO_CHANGE_SPEED flying WPNAV_SPEED instead,5,"Flying a typical test mission today the copter was flying faster than the 3 m/s than I had programmed in the mission. I check everything back on the work bench, and found that the copter had been flying 10 m/s - which is the setting for WPNAV_SPEED. It appears that the DO_CHANGE_SPEED command of “3 m/s” was ignored. Attached is a link to the log - if anyone has any ideas on what I might have done wrong to cause this, I’d appreciate the help. Thank you. * * *",I just realized that I posted this in the wrong section.  I’m using the latest stable version of copter - not the new beta release.  So the issue pre-dates the beta.  Sorry for the confusion.
196,Mission ignoring DO_CHANGE_SPEED flying WPNAV_SPEED instead,6,"Flying a typical test mission today the copter was flying faster than the 3 m/s than I had programmed in the mission. I check everything back on the work bench, and found that the copter had been flying 10 m/s - which is the setting for WPNAV_SPEED. It appears that the DO_CHANGE_SPEED command of “3 m/s” was ignored. Attached is a link to the log - if anyone has any ideas on what I might have done wrong to cause this, I’d appreciate the help. Thank you. * * *","*, No problems. Thanks for the clarification and I hopefully we can resolve this for Copter-4.3 in any case. I’ve added the variation (NAV_DELAY vs TAKEOFF) to the issue as well, I’m sure it’s the same underlying issue."
196,Mission ignoring DO_CHANGE_SPEED flying WPNAV_SPEED instead,7,"Flying a typical test mission today the copter was flying faster than the 3 m/s than I had programmed in the mission. I check everything back on the work bench, and found that the copter had been flying 10 m/s - which is the setting for WPNAV_SPEED. It appears that the DO_CHANGE_SPEED command of “3 m/s” was ignored. Attached is a link to the log - if anyone has any ideas on what I might have done wrong to cause this, I’d appreciate the help. Thank you. * * *","I use the DELAY function frequently.  (I’m not sure if “NAV_DELAY” is the same as “DELAY” on Mission Planner mission grids.) Typically I takeoff, then delay for 15 seconds.  This time allows for any yaw resets or other anomalies to occur before continuing on the mission."
197,"Adding external, (unknown) I2C barometer sensor. / ""wrong ID""",0,"I am converting a SplashDrone4 to ArduPilot. Inside a special / partially membrane-sealed compartment, it has a I2C pressure sensor. It’s device address is 0x77 0x77 could be a SPL06, MS5611, MS5607 , BMP388, BMP280, BMP085 and DPS280 - I tried to set BARO_PROBE_EXT to all with no success. It may be worth mentioning that I see this during the boot: Those messages are about magnetometers - and I assume this does not affect the barometer issue. AK09916: Wrong id IST8310 found on bus 1 id 658441 address 0x0C",
198,New Controller for new Cinewhoop,1,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael",RadioLink hardware is notorious for being problematic.  I use a Matek H743 Mini on a Shendrones Terraplane and have been fairly happy with it.
198,New Controller for new Cinewhoop,2,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael","* I wouldn’t use either of those boards for a whoop. Pick one of the mini boards from Matek or Holybro. I have one each, both good but prefer the Matek boards as Yuri suggested. Regarding Radiolink. Simply read the warning here: *"
198,New Controller for new Cinewhoop,3,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael",I was just looking at that Matek version this morning… It looks very interesting with the extra systems it has built into the board (I like the fact that OSD is built in) I am using a TX16S radio and a Spektrum DSMX satellite receiver - any ideas if this is supported on the Matek?
198,New Controller for new Cinewhoop,4,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael",Got rid of all the Spectrum stuff years ago. Try here *
198,New Controller for new Cinewhoop,5,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael",And… yes… I read that radio link warning AFTER I purchased it… unfortunately - now I’m regretting that purchase.
198,New Controller for new Cinewhoop,6,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael","It’s old F4 stuff anyway, may as well future proof with an H7 board."
198,New Controller for new Cinewhoop,7,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael",What PDB are you using with the Matek? any significant benefits (other than form factor) for the mini vs slim?
198,New Controller for new Cinewhoop,8,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael",You don’t need  PDB. FC and a 4-in-1 ESC stack is all you need. A mini stack makes for a very compact light weight installation.
198,New Controller for new Cinewhoop,9,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael",Even better.  Looks like the Matek may be the winner!
198,New Controller for new Cinewhoop,10,"I am in the process of building myself a new FPV Cinewhoop with the ShenDrones Squirt v2 airframe and TPU printed parts.   I originally built and tested this platform with the RadioLink MiniPix 1.2 controller and I’m having some rather frustrating trouble. To start with everything went together well, the RadioLink module is the PERFECT size for this build but I’m running into some frustrating issues.  At first I added a BN-220 GPS and used the internal compass but found the GPS a little slow and drifty and the GPS had to be recalibrated often (often is probably an overstatement as this project hasn’t been in the air more than a dozen times). I was to the point of fine-tuning the PIDs (autotune just wouldn’t finish successfully before the battery died). I recently swapped out the BN-220 GPS for a BN-880 with Compass and upgraded from 4blade to 6blade 75mm props.  Things SEEM better, if only I could only get it to actually fly I could test to see if it’s still as drifty and jumpy. Now… even after triple checking prop and motor orientation, recalibrating the compass, accelerometer, level, etc multiple times when I try to lift off indoors (I could hover it around my office with little difficulty in the early days) sometimes it will hover a few seconds before it gets rather sluggish responding to stick instructions or it will do an “insta-flip” as it get’s light before takeoff. I can also tell you for sure that (at least in my case, using Spektrum radio gear) that the standard firmware not from RadioLink disables radio communications with the controller. I may try to take it outside to test, but I’m almost afraid to with the instabilities experience so far. Have other RadioLink MiniPix users had this type of issues?  Any hope of stabilizing this little monster?   I’m almost to the point of buying a new board but I REALLY like the size of this one as it physically fits this build perfectly. If there’s no hope, I guess a new board it is… but then which one??? I’ve been eyeing the PixRacer board, or possibly the HolyBro Pixhawk Mini - I could use recommendations from anyone who has used either? Thanks, Michael",Yes. I have the H743-Mini version with an Aikon 4in1 but there are several 20x20 BLHeli_32 versions to choose from. The Holybro Tekko’s are very popular.
